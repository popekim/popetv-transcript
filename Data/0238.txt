생각해보면 제가 생각보다 Git을 되게 많이 깠어요
그 Source Control System에 Git
그러면서 이제 Perfos에서 이제 하고 있는 것들
뭐 Git의 서브 트리를 따로 클론 할 수 있다던가
이런 게 사실은 엔터프라이즈 쪽에서 굉장히 중요한 거다
그리고 라지 파일 같은 거
바이너리 파일 같은 거 제대로 관리 안 되는 거
이거를 이제 뭐 Git 쪽에서는
아 그거는 원래 관리하면 안 되는 거다
코드만 버전 컨트롤 관리해야 된다더니
니가 바이너를 넣으면 그건 잘못된 거다
이런 망언들을 하는 거에 대해서 제가 되게 뭐라고 그랬거든요
솔직히 아티스트 입장, 프로그래머 입장에서 보면은
아티스트 그 바이너리 파일과 뭐 텍스쳐 파일이라던가
아니면은 뭐 모델 파일
이런 거를 바꾸는데 드는 시간과 비용이 더 많아요
그래서 이게 버전 컨트롤이 안 되면
그 사람들 시간이 정말 더 많이 낭비되거든요
프로그래머는 차라리 그것보다는 변경의 폭이 크지가 않기 때문에
그리고 다시
다시 재생산을 하는 것도 그렇게 생각보다 힘들진 않고
아트는 완벽히 노가다라고 처음부터 재생산을 해야 되거든요
그래서 정말 버전 컨트롤을 해야 되는 게 있으면
정말 둘 중에 하나를 고르려면은 소스가 아니라 저는 바이너리라고 봐요
특히 아트 쪽 바이너리 이제 뭐 DLL 파일은 의미가 없고
그래서 그렇게 많이 얘기하면서 이제 제가 라지 파일 서포트가 굉장히 중요해진다라고 몇 번이나 강조를 했고
라지 파일 서포트 지원하는 데들 이제 빅 버켓 기반의
뭐 킬런이라던가 이제 뭐 퍼포스라던가 그런 얘기를 열심히 했죠
근데 이제 기 쪽에서도 역시 당연히 기술 원래 만든 사람들이 아니라
기술 이제 엔터프라이즈 정도로 올릴 수 있는 노하우와 이런 거를 가진 좀 뭐라 그럴까요
음 헛소리 조금 덜 하는 사람들
그니까 뭐가 문제인지 알고 그 문제를 고쳐야 된다는 거 아는 사람들
그에 비해 다른 쪽 사람들은 뭐가 문제인지를 지내도 알고 있을 텐데 부정하면서 우리는 졸라 쿨해
이런 식으로 관리하는 사람들이 많았죠
그래서 어쨌든 제정신이 있는 사람들
그 사람들이 이제 여러 가지를 했어요 그래서
지금 보면은
음
그 소스 트리에
소스 트리 제가 이제 많이 쓴다고 그랬잖아요
거기에 이제 라지 파일 서포트가 들어왔어요
그리고 라지 파일 서포트가 소스 트리에서 지원을 한다고 해서
과연 그 서버 쪽에서 지원을 안 하면 의미가 없잖아요
그 리포 쪽에서
그 리포 쪽에서 지원하는 게 지금 비주얼 스튜디오 온라인 지원해주고요
라지 파일 시스템은 곧바로 들어가요
라지 파일 시스템이 뭔지에 대해서는
제가 예전에 만들어놓은 비디오가 있는데 잠깐 보시거나
아
아니면 간단하게만 설명드리면
Git의 기본은 모든 파일 모든 히스토리를 내 디스크에도 복사를 한 다음에 거기서 작동한다잖아요
라지 파일 시스템은 어떤 특정 파일 근데 이제 Git에서는 어떤 특정 확장자예요
익스텐션을 라지 파일이라고 정해놓으면
이거를 서버엔 다 들어가요 서버엔 하나씩 하나씩 다 들어가는데
서버에서 복사해올 때
그럼 저는 이제 원래 코드를 아 그 라지 파일을 몇 번이나 집어넣는 사람 아니냐
새로 클론하는 사람이면은
라지 파일이면은 가장 최근 거만 주는 거예요
그래서 예전 걸로 돌아가려면 서버 연동이 돼야 되고
예전 걸로 돌아갈 일이 없으면 현재 버전만 갖고 쓰는 거죠
그래서 어찌보면은 양쪽 진영의 장점을 잘 살린
그래서 히스토리가 있는 거는 아 이런 파일이 있었다 정도 히스토리예요
그 라지 파일에 대해서만
그 대신 실제 갖고 있는 바이너리는 최근 거만 갖고 오는 거죠
그래서 내 리포에 있는 속도 아니 그 파일 사이즈가
별로 안 커지고
클론하는 속도도 빨라지고 그게 장점이에요
그래서 다시 원래를 돌아가면은
소스 트리의 최신 버전의 라지 파일 서포트 들어왔고요
그리고 Git으로
LFS라 그래요 Git은 이제 Bitbucket은 딴 거 쓰고
그리고 서버 온라인 공짜로 리포 주는 데 중에
비주얼 스튜디오 온라인 지금 비주얼 스튜디오 팀 서비스로 바뀌었죠
다섯 명까지 공짜예요
거기도 이제 무제한
Git이 용량 무제한
LFS 지원 리포 무제한
무조건 프라이빗 들어왔고
Git 허브는 제가 모르겠어요
제가 이제 별로 쓸 일이 없어 안 들어왔을 것 같긴 해요 아직은
아니면 그 유료로 받거나
전 공짜만 일단 얘기하고 있는 거예요
그렇게 들어왔고 이제 Bitbucket에서 들어왔어요
근데 이제 Bitbucket이 이제 두 가지 제품이 있었거든요
예전에는 이제 돈 받고 회사에 설치해주는 버전도 팔았는데
그거 이제 업그레이드 해야만 되는 거고
현재 온라인에 있는 Bitbucket에서는 이제 LFS 지원하기 시작을 했어요
근데 걔네 용량 제한이 있죠 한 10GB였나 있고
요즘 되게 아니 2GB였나 3GB였고
요즘 되게 재밌는 것도 하나 찾았는데
Git Lab이라고 있어요
오픈소스 코드 기반이고
Git 허브를 거의 그대로 베껴놓은 건데
공짜로 하더라고요 얼마 전부터 공짜로 하기 시작을 했고
이게 용량이 프로젝트 하나당 10GB죠
그리고 그 유저 이제 공짜 버전 쓰는 거 있잖아요
공짜 프라이빗 리포 쓰는 거는 보통 유저 제한이 있었잖아요
근데 유저 제한이 없어요
그 대신 어 그리고 그러니까
무제한 리포 무제한 유저 무제한에 10GB제한
그리고 라지파일 서포트를 해요
그래서 뭐 게임이 10GB 안에 들어가긴 어렵겠지만
음 그런 게 있다고 말씀을 드리고 싶네요
그래서 제가 하고 싶었던 얘기는
라지파일 서포트가 이제 제대로 되어있는 거예요
라지파일로 들어오기 시작을 했고요
뭐 거의 모든 리포가 이제 조만간 지원하기 시작할 거예요
네 지금부터 뭐 개인 리포를 쓰셔야 하는 분들은 프라이빗으로
그리고 친구들하고 같이 뭐 게임 만드시려는 분들은
사람 수라던가 이런 걸 고려하셔야 하거든요
그럼 지금 가장 현재로서 가장 좋은 옵션은 제가 볼 때는 Git Lab
그리고 Visual Studio Online
그니까 사람 수가 많으면 Git Lab
파일을 10GB 미만으로 어떻게 쪼갤 수 있다면 Git Lab
그죠 왜냐면 리포로 여러 개 나올 수도 있으니까
개인적으로 리포는 여러 개 나오는 게 좋지 않다고 봐요
게임 쪽에서는
어차피 모든 게 있어야 되니까
예외는 이제 소스 아트
그니까 정말 게임에 곧바로 쓰지 않는 아트들 있잖아요
익스포트되지 않은 거
그런 거 정도는 갈릴 수 있다고 봐요
그리고 그게 파일 크기가 굉장히 큰 거니까
10GB라고 생각하면은 충분히 가능한 게 분리가 된다고 보거든요
그게 아니라 그냥 모든 거 하나 쳐봤고
사용자가 5명 미만이다
그러면은 Visual Studio Online이 가장 좋은 옵션 같아요
서버 안정성이나 이런 거를 봤을 때는
Visual Studio Online이 훨씬 낫고
마이크로소프트니까
Git Lab은 그냥 자기들 말로는 이제
기업 같은 데 서포트하면서 돈 받거든요
그 서포트해서 받는 돈이 충분히 있기 때문에
자기는 오픈으로 풀어도 된다 이런 식으로 얘기하는데
Git이야 일단 한번 어디에 쳐박아두면
다른 데로 옮기는 건 어렵지 않으니까
그거는 뭐 고르시도록 하고
오늘은 라지파일 서포트를 이제 거의 대부분 하기 시작했다
그리고 두 번째 Git Lab이라는 게 또 있다
한번 보시고
Git 허버가 똑같다고 보시면 돼요
뭐 코드 리뷰도 있고
그런 코드 리뷰나 이코 시스템 쪽에서는 Git Lab이 훨씬 낫고요
그냥 순수하게 리포 용량 제한 없이 마구 쓰려면
TFS가 제일 낫고
그게 이제 Visual Studio Online
그 정도
풀 리퀘스트는 이제 Visual Studio Online이나 Git Lab이나 비슷하더라고요
풀 리퀘스트는 비슷하고
뭐 사후 코드 리뷰라던가 이런 걸 따지면은 아무래도 좀 Git Lab이 아직 낫고요
뭐 Visual Studio Online도 열심히 만들겠지만
현재로서 가장
음
누구에게나 추천하고
그래 써봐
그러려면은 Git Lab을 추천할 것 같아요
저는 여전히 Visual Studio Online을 써요
저는 사람이 다섯 명은 안 넘어가기 때문에
그리고 C# 프로젝트도 많고
아주 어룩일 것도 많고
그래서 그 정도 오늘은 얘기하고 싶었고
음 포프였습니다
