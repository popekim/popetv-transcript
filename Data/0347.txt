예 안녕하세요 포프입니다.

며칠 전인가, 저번주구나. 저번주에 이제 포프TV 창에 어떤 분이 하도 재미있는 글을 자주 나르시는 분이 있는데, 사실은 재미있는 글이라기보다는… 어, 뭐라 그럴까, 재미있다기보다는 자기 발전 글인 것 같기도 하고, 아니면 좀 더 흔히 우리가 말하는 마음 편한 기사보다는 약간 불편한 진실을 말해주는 그런 기사를 나르시는 분인데요.

그분이 스티브 잡스가 옛날에 했던 말을 누가 써 놓은 기사를 링크해 놓았어요. 저는 이제 그 기사 내용을 읽어보고, 스티브 잡스의 생각이 그게 맞다면, 실제 그 사람이 그런 이야기를 했다면, 이 부분은 제가 굉장히 동감하는 부분이 있더라구요. 제가 ‘이렇다’라고 인식은 못했는데, 뭐라 그럴까… 그냥 생각은 하고 있던 것 있잖아요. 내 성향도 그렇고, 생각도 그렇고. 그런데 이렇게 표현을 못 했던 거지.

그래서 그 내용을 공유하려 해요. 아마 그 기사 내용은 정확히 기억은 안 나는데, 링크를 내가 찾을 생각도 없고, 귀찮아서ㅋㅋㅋ. 그 글의 제목은 그거였던 것 같아요. 뭐… 스티브 잡스가 왜 A급 엔지니어, 개발자라고 해도 되고, 엔지니어? 개발자가 맞을 것 같다. A급 개발자만 고집을 하는가, A급 인력만 고집하는가—였던 것 같아요.

그래서, 그때 그 사람이 한 이야기를 따르면, 뭐 스티브 잡스가 이렇게 말했다는데, 인력에는 당연히 급이 있어요. A급, B급, C급… 뭐 F급까지 내려갈 수 있을 텐데. 뭐 A급이라면 상위 몇 프로인지는 모르겠지만, 어쨌든 있겠죠. A급. 제일 상위에 있는 그런 인력들은 B급에 비해 얼마나 엄청난 성과를 낼 수 있느냐—를 이제 스티브 잡스가 이야길 했다는 거예요.

그래서 이제 하는 이야기가, 만약에 뉴욕 택시 기사를 생각해보면, A급 택시 기사. 포지션 여기부터 저기까지 굉장히 빠르게 잘 가는 사람. 빨리 가는 걸 택시 기사의 급수라고 생각을 해보면. 안전하게 빨리 갈 수 있는 걸. 사고 안 내면서. A급과 B급 택시 기사가 여기서 저기까지 가는데 드는 속도 향상을 보면, A급이 아마 B급에 비해 최대 해봐야 2배 정도 빨리 도착을 한다는 거예요.

그래서 A급 택시 기사와 B급 택시 기사의 효율성이나 업무 처리성의 능력은 2배라고 본다. 그다음에 나왔던 게, 요리사는 어떠냐. 요리사는 약간의 창의력도 중요하기 때문에 굉장히 유명한 셰프들 있잖아요. 그런 사람들과 그냥 B급. B급이라고 아주 못하는 사람들은 아니에요. C급 D급 이런 게 아니라. 잘하는 사람. 요리하면 잘 하는데, 뭐 니가 그렇게 최고인 것 같지도 않고, 니가 뭐 상위 한 1프로인 것 같지도 않아—이런 사람들. 그런 사람들은 차이가 3배까지는 난다는 식으로 이야기를 해요. 창의력이 좀 더 필요하기 때문에.

그러나 이게 IT쪽으로 오면은 1:100이라는 거예요. 1:100. A급 사람이 낼 수 있는 효과적… 혼자 내는 효과가 아니라, 팀을 끌어가는 거든 뭐든 간에, 그 사람이 어떤 일을 맡음으로 해서 일을 만들어내는 임팩트가 100배라는 거예요. 100배.

그러면, 제가 어찌 보면 그동안 뭐… 코드몽키다. 요즘은 프로그래머를 코드몽키라고 부르더라구요. 전에도 이야기했죠? "나는 엔지니어다" 비디오에서. 그런 의미에서 보면, 프로그래머랑 엔지니어를 나누는 이야기도 어찌 보면 비슷한 것 같아요. 제가 예전에 엔지니어라면 어떤 일이 와도 여기서 어떻게 뭘 처리해야 하고, 이런 걸 다 깨달을 수 있어야 하고, 그리고 심지어는 비즈니스 쪽 로직까지. 이게 왜 비즈니스에 필요하고, 이건 왜 필요 없고, 이런 판단까지 내릴 수 있어야 된다고 이야기했거든요.

그리고 어찌 보면… 나중에 나올 비디오 같긴 한데, 생활 습관에 따라 엔지니어가 되냐 안 되냐도 많이 결정이 되는 것 같아요. 그런 모든 걸 따지면 이제, 실제 일 잘하는 사람에게 일을 주는 거랑, 할 수는 있는데 그보다 안 되는 사람. B급이라고 하죠. 그 사람한테 일을 주는 거랑은, 제가 봐도 효율이 1000배는 난다고 보거든요. 그걸로 저는 여태까지 엔지니어랑 프로그래머를 구분을 한 건데, 스티브 잡스는 이게 1:100이라고 말을 해버린 거죠.

그래서 스티브 잡스의 예를 들면, 제 이야기부터 먼저 끝내야겠다.

저는 왜 그렇게 생각하냐면, 일 잘하는 사람에게 맡기면 이 사람은 자기 다 책임을 져야 해요. 내가 이걸 다 하고 모르는 것이 있으면 딱딱딱 물어보고, 그러면 그거 고치면 되고, 제가 못 본 것도 있으니까. 그러면 자기가 다른 게 뭔가 필요하면 그걸 어떻게든 동작을 하게 만드는 사람이에요. 책임감이 되게 강한 거고.

그 책임감에다 능력까지 갖춘 거죠. "나는 이걸 할 수 있다." 아니면 그 책임감을 가지고 태어났고, 그 능력에 맞춰서 키우다 보니 그 자리에 온 걸 수도 있고, 아니면 능력을 키우는 거에 관심을 가졌는데 그러다 보니 책임감이 늘은 걸 수도 있고. 중요한 건, 이 두 가지를 갖췄다는 거예요.

그에 비해 이제 B급이라고 이야기를 하죠. (일을) 주면은… 영어 표현에 보면 그런 게 있어요. Deer in headlights인가? 밤길에 자동차를 몰고 가다가, 저기에 사슴이 있으면 차가 막 달려오잖아요. 그러면 사슴은 헤드라이트를 보고 멍하니 서 있어요. 당황해서. 그러다 죽어요. 그런 개념으로 그냥 멍~ 한 것 같아요.

일을 주면 그걸 제대로 끝내지도 못하지만, 뭔가 거기서 문제가 생기면 그걸 스스로 해결할 능력이 별로 없는 사람들. 아니면 어떻게 해결을 하더라도, 한 중간 정도만 해놓고 그냥 "그래, 이 정도면 됐어" 하면서 넘어가는 사람들. 그리고 자기가 만드는 제품에 대해… 뭐랄까, 장인정신이 없다고 그래야 되나?

"이게 내꺼다, 이거 정말 재미있는 거다" 이런 게 없다고 해야 되나? 아니면 "이건 정말 끝내야지, 이건 내 일이니까"란 책임감이 없다고 해야 되나? 어쨌든 그런 게 없는 사람들이 있어요.

어느 쪽에 일을 주느냐에 따라, 한쪽은 제가 손을 놓고 있어도 알아서 일을 끝내올 거고, (그 일이) 내가 관심을 가져야 하는 일이면 (제가) 알아서 (그 사람에게) 관심을 가져달라고 할 거지만, 다른 쪽은 제가 한 시간마다 체크를 계속해야 해요. 그러면 누군가가 밑에서 그 일을 해줌으로써 제가 다른 걸 더 할 수 있는데 그게 안 되고, 모두의 효율성이 줄어든다는 말이죠 어찌 보면.

B급 정도의 일을 하는 사람들은 삽질도 많이 할 거고, 그만큼 시간 낭비도 많이 할 거고. 제품이 나와도 퀄리티가 좀 떨어질 수 있고. 뭐든 간에 100:1, 이 정도의 효율을 제가 봤어요.

그런데 스티브 잡스의 예를 든 건 예전부터 유명했잖아요. 맥킨토시를 처음 만들 때, 맥킨토시가 있는 것도 몰랐을 때, 사람들을 채용할 때 맥킨토시를 딱 보여준대요.

그러면 사람들이 보고 나서, UI가 처음으로 그래픽 위주의 인터페이스였으니까,
"이런 게 가능하구나!"
"이거는 한 시대의 한 획을 그을 만큼의 엄청난 발전이구나!" 라는 걸 보고 막 눈이 반짝반짝거리는 사람이 있는가 하면,

보고 나서 "어 그래? 이거 만들어서 일해주면 되는 거네. 끝" 이러는 사람이 있었다는 거예요.

A급 사람은 이걸 보고 가능성도 보고, 이게 실제 어떤 영향을 끼칠지도 본다는 거죠. 그거에서 "아, 이게 정말 엄청나게 중요한 일이 될 수도 있구나. 이게 모든 사람의 삶을 바꾸겠구나." 이런 정도의 큰 임팩트까지 보는 반면에, 다른 사람은 신경 안 쓰고, "어차피 돈 주는 일이니까 그래, 돈 받고 이거 만들면 되는 거겠지?" 이런 생각을 하는 자세인 것 같아요.

물론, 프로그래머나 엔지니어가 어느 회사의 제품에 목숨을 걸고 일을 해야 하는 건 아니에요. 당연히 정당한 대가를 받아야 되고.

그러나 이제 재미있는 거는, 아까 말한 B급 정도의 사람들의 그 자세는 그냥 할 줄 아는 일로 그 돈 받고 계속 사는 거예요, 사실은. 그 위에 진급이란 게 있으면 솔직히 고마운 거지. 왜냐하면 그냥 너는 주는 대로 일하고 있고, 네가 지금 맡은 책임을 다 하고 있으니까. 봉급도 사실은… 뭐라 그럴까, 물가 인상 그 정도만 맞춰주면 그 일에 그 돈 받는 거잖아.

그런 거에 비해, 뭔가를 보고 "여기가 더 큰 게 있구나"라고 열정적으로 자기가 알아서 하는 사람들은 그만큼 본인이 끼치는 영향이 커지기 때문에, 그만큼 효율성이 증명되는 거죠 사실은. 그렇기 때문에 이 사람들은 계속 승진할 수밖에 없는 거고.

뭐 어찌 보면 처음 마음가짐에 따라 회사에서 어떻게 갈릴지가 결정될 수도 있겠는데, 제가 하고 싶었던 말은 노예처럼 일하는 것도 아니고, 회사 일에 열정을 가지라는 것도 사실은 아니에요. 회사가 나쁘지 않은 회사여야만 열정을 가져도 혜택을 받는 것도 있으니까.

중요한 거는, 제가 요즘 들어 많이 이야기했고 걱정하고 있는 게, 코드몽키급의 프로그래머들이 너무 많아지고 있고, 이게 더더욱 많아지면 많아질수록 그쪽 분야는 경쟁이 커질 수밖에 없어요. 그러면 저희가 알고 있는 컴퓨터 엔지니어. 대우 잘 받고, 자기 원하는 일 쉽게 할 수 있고, 편하게 살 수 있는… 이런 쪽의 그 개념은, 말 그대로 아까 말했던 A급 인재, 이렇게 올라가야만 나올 수 있다는 이야기죠.

저도 일을 할 때, A급 인재랑 일을 하면 되게 편해요. 제가 거의 손을 안 대도 일이 알아서 돌아가고, 정말 중요한 이야기만 하고 넘어갈 수 있는 거예요. 그런데 B급 인재랑 일을 하다 보면, 정말 중요한 이야기를 해야 하는데 중요한 이야기 가기 전에 전혀 중요하지 않은 이야기를… 당연히 본인이 스스로 복습하면 알 수 있고, 스스로 찾아보면 알 수 있는 그런 이야기들. 아니면 여태 수백 번 본인이 해오던 똑같은 패턴의 일들을 다시 가르쳐주고, 한마디로 평생 가르쳐야 하는 경우가 있을 수 있다는 거죠.

어찌 보면 제가 여태껏 굉장히 많은 이야기들. 엔지니어가 되라든가, 소신 있는 코딩을 하라든가, 기타 등등… 이런 이야기를 한 게, 굉장히 수치적으로 단순하게, 그만큼 스티브 잡스는 저보다 훨씬 큰 그림을 봤고, 많은 데이터가 있었고, 사람을 잘 파악했기 때문에 그런 단순한 수치 하나로 말할 수 있었다고 생각을 해요. 1:100.

그리고 어찌 보면 A급 인재, B급 인재의 차이가 굉장히 크게 좌지우지 되는 곳이 IT 쪽이고. 그렇다면, 그렇다면 당연히 임금 격차도 굉장히 날 수밖에 없어요. 허나, 세상은 그래도 제가 볼 땐 약간 비합리적이지만 힘들게 사는 사람들한테 좋은 이야기는, A급 인재와 B급 인재가 받는 봉급 차이는 100배가 되지는 않아요. 보통 한… 잘나 봐야, 연차가 같다는 개념에서 평균 1.5배 나오면 잘 나오는 것 같고, 아주 특이한 경우는 5배까지는 나겠죠.

그러나 100배 임금 격차까지는 나지 않죠. 하지만 이게 그래도 여전히 다른 업계보다는 차이가 더 날 수밖에 없을 거고, 더 날 거고. 그런 이야기를 하고 싶었어요.

결과적으로는 엔지니어가 되라는 이야기인데, 다시. 이쪽에 발 들여놓고 편하게 살고 싶다면 엔지니어가 되라는 이야기고. 이거를 취미로 하실 거면 굳이 빡세게 할 필요 없잖아요.

제가 예전에 한번, 제가 아시는 분이 가수가 되려고 오디션을 보려고 한 적이 있어요. 쪼고만 기획사. 놀러 따라갔다가 장난처럼 "너 기타 칠 줄 안다매? 기타 쳐봐." 그래서 "저는 전혀 관심 없다고, 취미로 치는 거라고." 쳐보라고 그래서 쳤어요. 엄청 못 치지.

그때 오디션을 보고 계신 분이 굉장히 유명한 기타리스트셨어요. 연주하는 거 들으시더니,
기타리스트: "너 그냥 취미로 치는 거지?"
포프: "네."
기타리스트: "음 그래! 잘해! 열심히 쳐!"

이러고 넘어갔어요. 그 사람의 입장이랑 굉장히 같았던 것 같아요. 굉장히 유명한 가수 뒤에서 언제나 세션을 연주하던 분이셨거든요. 이름을 말하면 누구나 아실 만한 분이었어요.

그 사람이 이제 보고 나서, 네가 진짜 기타리스트가 되고 싶다면 기초부터 안 되어 있으니까 기초부터 해! 라고 했겠지. 딱 보니까 너는 그냥 기타를 취미로 치고 있는 거고, 뭐 놀러 온 거지. 오디션 보러 온 게 아니지 않냐. 그러면 취미로 재미있게 쳐^^. 그 정도로 만족하고 살아. 그 이야기였어요.

그리고 이제, 저도 기타리스트가 제 길이 아니란 것도 알았고. 생활 코딩이 점점 가속화되고 있고, 누구나 조금씩 코딩하는 세상에서, 제 비디오를 보고 나서 취미로 코딩하시는 분이 "아, 엔지니어가 되려면 이렇게 빡세게 살아야 하는구나"라고 스트레스 받으실 필요는 없어요.

그런데 이거를 업으로 삼는다고 하면 이야기가 다르죠. 그 이야기를 하고 싶었어요. 결과적으론 스티브 잡스가 굉장히 멋진 말을 한 거를 제 거에 빨대 꽂아서, 제가 하고 싶었던 말로 바꿨던 거죠. 오늘은 그 정도. 아, 말이 많다.