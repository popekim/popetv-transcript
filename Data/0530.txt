마코딩의 편 하나
그런 얘기하면은
포프가 저런 얘기를?
라고 하시는 분들이 있을 것 같아요
왜냐하면 제가 그런 거 하지 말라고 한 사람 중에 하나거든
얘 하지 마세요
프로로서 프로그래밍 할 때
내가 정말 프로그래머로서
그때는 마코딩을 하면 안 돼요
그런데 제가 요즘 마코딩을 할 일이 조금 있긴 있었어요
보통 이제 그게 둘 중에 하나예요
제 개인 프로젝트 하면서 하거나
아니면 한 번
개인 프로젝트 마코딩은 안 하는데
한 번 쓰고 버릴 코드를 작성을 하거나
특히 데이터 같은 거 한 번 옮길 때
한 번 옮기면 끝이거든?
그런 거 할 때
코드 관리, 버전 관리 안 넣을 때
그런 거 하거나
아니면은 프로포브 컨셉으로
제가 어떤 새로운 거를 구현을 한 다음에
다른 사람, 다른 직원한테 넘겨줄 때
두 번째 것부터 먼저 얘기를 해볼게요
그게 무슨 얘기냐면은
예전에 제가 아키텍트 강의를 한 번 들으러 갔을 때
거기 아키텍트 강의하시는 분이 그런 말을 한 적이 있어요
네가 아키텍트라면 너는
실제 라이브에 가는 코드를 작성해서는 안 된다
네가 디자인 잡고 설계 잡고
그거를 잡아주고 넘겨줬을 때
네 아래쪽에 있는 밑에 있는 사람들이죠
그 사람들이 시니어 개발자든 개발자든
그 사람들이 다시 제대로 구조 잡고 가는 게 맞는 거다
너는 큰 그림만 잡아주고
이게 가능하다면 보여주면 되는 거다라는 말을 한 적이 있어요
그게 안 되면 너와 주니어 아키텍트를 같이 붙여서
그 주니어 아키텍트가 그런 걸 하게 만들고
너는 그 아키텍트를 같이 붙여서
너는 정말 더 중요한 큰 그림
실제 아이디어 내고 큰 그림을 구조만 잡아주는 걸 넘어가고
세부적인 거 자세히 고치는 거
좀 더 서로 협업이 가능하게 코드를 좀 더 잘 만드는 거
그런 거는 아랫사람한테 맡기라는 얘기가 한 적이 있어요
그게 제가 조금 말했던 두 번째 거긴 한데
문제는 제 회사가 아직은 제가 그렇게 막 코딩을 해서
이게 가능하다는 걸 보여주고 건네줬을 때
그거를 올바른 설계와 그리고 올바른 코딩 표준에 맞춰서
자세히 고쳐서
자기가 책임지고 고칠 사람이 아직은
뭐 한 명 있는 거 같긴 한데 충분히 있진 않아서
그거를 저는 못 하고는 있어요
왜냐하면 그렇게 하면은
사장님이 저렇게 줬으니까 사장님 코드를 그냥 쓰면 되겠지
이 생각을 하는 사람도 있어요
알아서 고쳤어 라고 해도
이게 나중에 문제가 되면
사장님이 그렇게 줬잖아요 이런 말을 하는 애들이 있어요
그러면은 뭐 그래 내가 무슨 말했는지 못 알아들은 거 같으니까
너를 욕할 수는 없고
앞으로는 그런 코드를 안 줘야겠다
라고 해서 그런 코드를 안 주고
처음부터 그 사람들을 시키거나
더 괴로워졌죠
제가 정말 시간이 남으면은
제대로 된 아키텍처까지 잡아서 주고
아니면은 적당히 잡아준 다음에
그쪽에서 설계 다시 나오면
코드하기 전에 코딩 작성하기 전에
나한테 설계 검토받으라고 얘기를 하죠
그래서 그런 식으로 뭐 고 마코딩 하지 못하지만
첫 번째 의미의 마코딩
한 번 데이터 옮기고 말 거 개인 프로젝트 같은 거
그런 마코딩을 최근에 한 적이 있어요
제가 예전부터 사용하던 블로그가 있어요
되게 오래전에 블로그를 작성을 했었죠
그 블로그가 마크다운 기반인 제킬로 옮기는 게 낫겠다
싶은 생각이 들어서 제킬로 옮겼어요
뭐 텍스트 옮기는 건 어렵지 않았는데
거기 들어간 이미지 링크들이 블로그에 업로드한
그 뭐 블로그스팟 닷컴 어쩌구 이미지로 올라가 있던 거예요
그리고 그 이미지를 제 쪽 서버로 옮겨 와야 되는데
하나하나 다운 받긴 너무 귀찮고
아 그럼 스크립트를 작성해서 하면 되겠다
그리고 스크립트 작성해서 다운 받는 김에
실제 본문에 있는 링크까지
내 새 서버로 옮기면 되겠다
그런 식으로 해서 그걸 막 코딩을 했어요
근데 코딩하다 보니까 블로그도 역사가 길고
링크 구조도 다 다르고
어떤 이미지는 뭐 사용하는지
사용하지 않는 게 좋을 것도 같고
이런 것들 때문에 막 쓸데없이
if-else 쳐박게 되고
뭐 https로 이미지를 불러와야 되는데
그걸 좀 더 효율적으로 하기 위해서는
어떻게 해야 되는 것들이 있지만
그거 신경 안 쓰고 그냥 하다가 뻗으면은
다시 돌린다거나 아니면 몇 초 뒤에
다시 돌리게 슬립 매긴다거나
이런 황당한 짓으로 코드를 작성을 했죠
그리고 코드를 작성한 다음에 싹 지우고 끝
데이터 안다 마이그레이션 됐으니까
물론 그 코드에 버그도 있었기 때문에
마이그레이션 안 된 데이터가 한 10개 정도 있었지만
10개는 손수 고칠 수가 있었죠
그러고 보니까 원래 보통 코딩을 하면요
이렇게 해야겠구나 코드 작성하다 보면
아 이게 아니네 이건 좀 이렇게 다르네
여기에 코드가 중복이 되네
그럼 다시 이거를 고쳐야지
이런 식으로 해서 계속 고치면서 진행하게 되잖아요
그러면 클래스도 좀 바꾸고 설계도 바꾸고
전체적으로 코드도 또 이렇게 바꿔야 되고
이름도 바꿔야 되고
함수명도 좀 더 다시 바뀐 거 맞춰서 잘 지워야 되고
이런 것들이 마구마구 있는데
그걸 할 필요가 없는 거야
함수가 a를 한다라고 이름을 적어놨는데
나중에 c를 하고 있어
그래도 어차피 지울 코드니까요
한 번 쓰고 버릴 코드니까 신경을 안 썼죠
변수명도 가끔 고민해야 되잖아요
정말 이것보다 좀 더 제대로 대표하는 변수명이 없을까
그것도 그냥 안 하다가
뭐 안 하게 돼두고 그러더라고요
굉장히 빠르게 끝났는데
제가 협업할 때 중요하게 여기던 굉장히 많은
코딩 규칙들을 다 무시하면서 작성하고도
빨리 끝내고 끝내고 넘어갔죠
회사에서 그러면 안 돼요 다시 말하지만
근데 그럼에도 불구하고
한 가지는 지켜지는 게 있었어요
이게 사실 놀라운 건데
코딩 포맷
어떻게 한 다음에 스페이스바를 넣고
과학으로
바로는 어디에 열고
뭐 이런 것들 있잖아요
뭐 컨스턴트 변수는 이런 식으로 선언하고
그거는 전혀 흐트러지지 않더라고요
사실 어떻게 보면은
그런 자잘한 포맷팅 같은 경우는
이게 어느 순간에 머슬메모리가 익혀지는 거고
그거는 굉장히 기계적인 거예요
생각이 필요한 것도 아니고
그냥 뭐 글자 쓰고 마침표 찍는 느낌
고런 느낌이에요
띄어쓰기가 쉽지는 않지만
조사 뒤에 띄어쓰는 건 다들 아시잖아요
조사 뒤에 띄어쓰는 느낌
그런 마찬가지인 거예요
밥 먹을 때
뭐 안 그러신 분도 있지만
뭐 그러셔야 돼요
입 다물고 먹잖아요
그냥 계속 습관 들이면은
그게 예의 바른 거니까
쩝쩝 소리 내면 안 좋은 거니까
그런 것처럼 그냥 습관을 들여서
자동으로 나오게 되는
왜?
그 습관을 들였을 때
다른 사람들과 일하기 편하고
다른 사람도 실수가 없는 거기 때문에
그런 식으로 했고
내가 설마 다시 코드를 올려다 보더라도
실수를 빨리 잡을 수 있으니까
그래서 코딩 스타일 같은 경우는
자기가 정한 거나 회사에서 정한 거
아니면은 회사 여러 군데 같이 일하는 사람들은
그 여러 가지 코딩 스타일 왔다 갔다 하면서도 하죠
그중에 자기가
원하는 걸 고르겠죠
그런 식으로 맞춰가더라고요
그래서 아 그리고 느꼈던 게 뭐냐면
면접에서나 뭐 어디에서나 코드를 작성을 하는데
코딩 스타일 정말 더럽게 작성하시는 분도 있어요
이게 내 마음에 안 드는 게 아니라
여기서는 요렇게
저기서는 저렇게
여기서는 저렇게
똑같은 건데
그 세 줄이 다 다른 방식으로 작성을 하는 거야
한마디로 나는 이 경우에는 마침표를 찍고
똑같이 문장 끝나는 건데
마침표 안 찍고 쉼표 찍을 거고
똑같이 문장 끝나는 건데
빗살을 찍겠다
이런 느낌인 거죠
그래서 이런 사람들을 보면서
보면은 제가 느끼는 게 뭐였냐면은
코딩 훈련이 안 됐구나를 느껴요 사실
이게 코딩을 잘하냐
알고리즘을 잘 작성하냐
그걸 논할 의미도 없을 정도의
맞춤법을 못 맞추는 사람이라고 할까요
그런 느낌이에요
면접관으로서는
그래서 아 이건 정말 코딩 습관이 안 된 사람들이구나 느끼고
뭐 광고 잠깐 같이 넣자면
그렇기 때문에 포큐아카데미에서는
그것까지도 같이 훈련시키는 거죠
자 포큐아카데미 들어오세요
뭐 이렇게 끝내면 안 되죠
어쨌든 간에 막 코딩 은근히 편했다라는 거
그리고 프로페셔널하게
이제 코딩을 많이 한 사람들
이제 그런 사람들은 가끔 이렇게 막 코딩할 때
좀 이렇게 아 편하다라는 걸 느끼는 거 같아요
저런 느낌일 수도 있을 것 같아요
요리사 하시는 분들
맨날 요리할 때는 막 이렇게 예쁘게 플레이팅하고
뭐 하고 막 고민 많이 하시잖아요
그러다가 집에서 그냥 대충 그릇 신경 안 쓰고
막 썰어 갖고 볶아서 딱 먹을 때
그 느낌 그 만족감
그런 거랑 비슷할 것 같아요
근데 여기도 코딩 스타일 같은 게 있어요
요리사 전문 요리사들
진짜 프로들은 아무리 딴 거를 편하게 해도요
최소한 위생청결
못 쓰고 쓰면서 닦으면서 하는
그런 것들도 있어요
그것만은 어기지는 않더라고요
그래서 그런 분들 요리하시는 거 보면
언제나 뒷정리는 깔끔히 되는 이유
왜 요리하면서 계속 닦고 치우고
닦고 치우고 닦고 치우고가
몸에 들어 습관이 되어 있고
그거는 정말 기본 중에 기본이라 그런 거 같아요
근데 그런 거 비교해 보면은
다시 저희 프로그래머 프로 프로그래머라고 하는데
뭐 저는 흔히 엔지니어라고 부르고
그 사람들이 정말 중부낭반식의 코딩 스타일을 가지고 있다
어떻게 보일지 대충 감이 오시죠
그래서 그 정도로 오늘 포프TV는 마치겠습니다
포프였습니다
