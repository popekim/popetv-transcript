안녕하세요 포프입니다. 아쉬운 분은 아시겠지만 요즘 한참 제 책 작업이 마지막 중이에요.
일단 흔히 아시는 책으로는 왕초보를 위한 C샵 책이 나온다, 프로그래밍 기초책이 나온다
라는 거 몇 번 얘기해서 아시는 분들이 있고 기다리시는 분들도 있어요.
근데 제가 여태까지 11월 20일쯤 작업이 끝날 것 같다고 말했는데 그날 출판되는 건 아니더라고요.
그래서 출판은 지금 거의 작업은 끝났고 이제 한 12월쯤 될 것 같아요.
또 말할 때마다 늦어지는 것 같지만 어쨌든 조판이 다 나오고 있는 상황에서
더 이상 갑자기 무슨 종이가 사라지지 않는 이상 안 나올 일은 없겠지라고 생각하고 있어요.
그러나 종이가 사라져도 문제가 없네요.
제가 책을 지금 만들고 있는 게 한 권이 아니라 두 권이예요.
두 번째 책은 전자책이고
이것도 거의 다 편집 끝났고
사파만 조금 넣고 나가면 돼요.
그 책은 포프TV 책이예요.
포프TV가 비디오로 많이 나오고 있었고
거기서 책으로 보고 싶다고 하시는 분들이 좀 있어서
아 그래? 그러면 전자책으로 작업하지.
그래 나오고 있는 게 그 책인데
음...
책 작업을 하다 보니까 옛날에 제가 썼던 책을 다시 이렇게 보게 돼요.
머리가 깊어.
그래서 쉐이더 책을 이렇게 쭉 보다가
생각을 해봤어요.
제 쉐이더 책이 되게 뭐라 그럴까
평을 되게 좋게 받았고 아직도 굉장히 교재로 잘 쓰이고 있는 책이긴 해요.
근데 책을 쓸 때도 그랬고
책을 쓰고 나서 이제 어떤...
몇몇 분들이 피드백을 줄 때도 그랬 고 거기에 제가 일부러 넣지 않은
주제가 한 두 개 정도가 있어요 사실은 들어갔어야 할 것 같은데 안 넣은
주제가 두 개 정도 있는데 그 중에 첫 번째가 이제 투명 색깔에 관한
거고 트랜스페어런스라던가 알파 채널 그거는 사실 쉐이드의 영역
이라기보다는 렌더 상태의 문제 고 블랜딩의 문제이기 때문에 일부러
안 넣은 게 있고 그 다음은 사실은 쉐이드의 영역이긴 한데 쉐이더를
표면을 표현하는 쪽에 많이 초점 을 맞추다 보니까 못 넣은 내용
이죠 그게 이제 스키닝이라는 부분 이었어요 그래서 그거를 언젠가는
비디오로 만들던가 따로 온라인 에 하나 코드를 만들어서 공개
를 해야지라고 생각을 했는데 그게 벌써
그 책마다 공개가 됐어요.

그 책을 보면 아 요즘 다른 버전 으로 또 포팅을 해볼까 유니티도
있고 언리얼드 쉐이더도 있고 오픈 주열도 있고 다양한 종류의 쉐이더
언어가 있는데 그 용으로 책을 내는 건 어렵지 않겠다 어차피 있는
내용은 가리키는 내용은 그대로 고 쉐이더 코드만 좀 바꿔야 되고
예전에 쓰던 랜덤 원키가 사라졌 으니까 그거 대신에 뭔가를 하나
해야겠구나 그걸 제가 만들던 어디서 다른 걸 찾던 그런 생각도 하고
있었어요.
근데 뭐 그건 지금 하고 있는 이 책의 방향에 대한 생각이고 사실
오늘 하려고 하는 얘기는 그 책에 넣지 못했던 넣지 않았던이 맞겠죠
않았던 스키닝에 대해서 얘기하려고 그래요.
스키닝이라는 얘기 많이 들어봤 을 거예요 사실은 많은 분들이 근데
결과적으로 이게 왜 스키닝이 뭐냐 하면은 보통 이제 메쉬 같은 걸
그릴 때 그.
.
.
.
.
.
.
.
단순히 그냥 싸 reputationsin switches

.
.
.
.
.
세상에 그냥 주 동작들이 품에 illegally
sheet를 또 바꿔� silly
Ghost
스킨 같은 거를 생각을 해보면
팔꿈치 이렇게 굽혀질 때 특히
이런 데에 있는 메쉬가 사실은
이 제 뼈하고 이 뼈하고 어떻게 서로 모양을 달라하는지에 따라
이게 늘어나기도 하고 줄어들기도 하고 이러거든요
그리고 이런 데 이렇게 팔꿈치 안쪽
뭐라 그러지?
어쨌든 여기 같은 경우에도
이게 펼쳐지느냐 줄어드느냐에 따라 약간의 모양이 바뀌어요
그래서 이런 거를 보통 소프트바디라고 해요
굳이 물리용어로는 뭐라고 그러는지 모르겠는데
연체인가? 리지드바디야 강체니까?
그래서 이런 거를 표현하기에는 단순하게
막대기 두 개 갖고 그리는 걸로는 안 되잖아요
그래서 아 그래 여기에 있는 살 같은 경우는
근육에 영향을 받는 것도 있지만
그것보다 좀 간단하게 생각해서
이 뼈가 움직이는 거와 이 뼈가 움직이는 거 사이에서
양쪽에 영향을 받는 거다
그래서 이 뼈는
그럼 애니메이션 하거나 뭐 할 때도
아 여기에 있는 점
여기에 있는 삼각형은
이 뼈가 움직이는 거와 이 뼈가 움직이는 거에서
뭐 특정한 몇 %가 있겠죠
여기서 50% 50%라던가 80% 20%라던가
그런 식으로 이제 영향을 받아야 된다
그래서 나온 게 스키닝이라는 개념이에요
그러니까 아까 소프트바디라고도 했고
제가 얘를 스키닝으로 들었잖아요
제 살로
그러니까 이 살 같은 걸 표현하기 위해 만든 기법이
스키닝이라고 생각하면 돼요

그럼 이게 어떻게 작동을 하느냐
보통 이런 물체의 강체 같은 거
이제 애니메이션을 할 때는
이 위치가 어디에 있는지 알아야 되니까
그걸 이제 세 개의 좌표로 찍거나
뭐 회전 같은 것도 들어가니까
월드 매트릭스로 보통 하잖아요
그래서 매트릭스 하나를 곱해서 계산하고 끝나잖아요
근데 이거는 가능했던 이유는
어쨌든 이게 움직일 때
얘는 뭐 뼈라고 할 만한 게 하나밖에 없으니까
소프트한 게 없으니까
그래서 이거는 그냥
월드 매트릭스를 미리 만들어서
그 변환 행렬을 이제
버텍스 쉐이더에 전달해 주는 것만으로 해결이 돼요
버텍스 쉐이더에서 여기 있는 각 버텍스마다
각 정점마다 매트릭스 곱해 준 다음에
그걸 아웃풋하면 그게 변환된 공간이니까
이 팔 같은 경우도 솔직히 개념은 비슷한데
예를 들어서 제가 몸이 없고
팔만 있다고 생각해 봐요 여기부터
그럼 이게 움직이는 거는
그냥 월드에 있는 위치와 월드에 있는 회전이거든요?
그건 상관이 없어요
근데 이제 여기에 가서 이게 움직이는 거는
이 뼈는 이 뼈에도 영향을 받고
그래서 이 뼈의 움직임을
여기에 기초해서 또 매트릭스를 새로 만들어주긴 해야 돼요
그래서 결과적으로는 뭐가 이 두 개가 있는 거냐면
이 뼈로 움직이는 행렬과
이 뼈로 움직이는 행렬이 있는 거예요
회전하는 행렬, 여기 회전하는 행렬
그쵸?
그러면 아까 말했던 이 팔꿈치 안쪽에 있는
그 점점 같은 경우에는
이 뼈가 움직이는 거에서
뭐 몇 % 영향을 받고
이 뼈가 움직이는 거에서 몇 % 영향을 받겠다 이러면 되는 거예요
예전 같은 경우는
여기에 있는 점에서 원래 있는 매트릭스 하나만 곱했잖아요?
근데 그거 대신에
아 내가 얘한테 50%, 얘한테 50% 받아야 되면
내 점과 매트릭스를 곱한 다음에
새로 위치가 나오잖아요?
그거를 50%로 줄여요
그리고 내 점과 두 번째 매트릭스를 곱한 다음에
그걸 또 50%로 줄여요
그리고 더하면은 그게 최종 위치가 되는 거예요
그래서 이런 식으로 해서 보통 각 정점마다
그래서 이런 식으로 해서 보통 각 정점마다
내가 어떤 뼈 번호에 영향을 받아야 되냐
그리고 각 뼈 번호마다 어느 정도 영향을 받아야 되냐를
이제 저장을 하게 돼 있어요 각 정점마다
그럼 보통 게임 쪽에서 아직도 많이 쓰는 거는
뭐 여러 가지 이유가 있지만
데이터 뭐 용량의 문제도 있고
뭐 속도의 문제도 있고 기타 등등이 있지만
정점 하나당 최대 뼈 4개까지 영향을 받게 하자라 그래요
그럼 이제 그런 경우는 뭐가 있냐
뭐 목뼈 같은 경우도 뼈 되게 많고
뭐 어깨 같은 경우나 이런 경우도 굉장히 뼈가 많이 작용할 수도 있고
아니면 뭐 손가락 같은 경우도 뼈는 많잖아요
그래서 그런 식으로 한 정점에서 그 영향을 미치는 게
정점 4개까지 아니 뼈 4개까지
그리고 각 뼈마다 이제 가중치를 주는 거죠
그래서 뭐 25%씩 주던 하나 50% 주고
나머지는 뭐 50% 넘게 3을 주던
그래서 결과적으로는 이 다 더한 그런 가중치가 1
그니까 100%만 되면은 이상하게 딴 데로 튀는 경우는 없어요
근데 이 가중치가 1이 안 되고 4개를 다 더했는데 50%밖에 안 된다
그러면 정점 위치를 뽑았어
근데 실제 정점 위치가 예를 들어서 뭐 1000 곱하기 500인데
가중치가 반으로밖에 안 줄잖아요 줄었잖아 반으로
그럼 그게 500 곱하기 250에서 저 멀리 떨어지는 그런 현상도 발생하는 거죠
그래서 스키닝 같은 거를 이제 한다는 게 그런 개념이에요
예전에는 각 뼈마다 정점 위치 정해 갖고 최종 위치를 구하는 거를
CPU에서도 많이 했지만
뭐 GPU가 워낙 발전하면서 이제 그 모든 일은 거의 GPU에서 하고 있고
단 GPU에서 하는 게 엄청 느리다
정말 그런 경우에 추력화를 위해서 CPU에서 하는 경우도 있죠
그러나 일반적으로는 제가 말했듯이
이런 식으로 뼈 위치에 어느 거 영향을 받냐
그리고 뼈 어느 정도 영향을 받냐
그걸 한 다음에 이제 각 뼈마다
뭐 예전에 제가 위깅이라던가 애니메이션 직군 설명할 때 얘기했던 거 같아요
게임 쪽에서 몇 개의 뼈를 쓰냐 신체의 뼈가 몇 개냐
과연 그 모든 게 필요하냐
그래서 예전에 저희 게임 만들 때는 한 전체 뼈 대해 갖고 한 뼈 64개 정도 넣어 갖고 만든 경우도 있었고
그러면 쉐이더에 이제 컨스턴트 노유잖아요
그때 각 뼈마다 매트릭스에다 넣어주고
버텍스 처리하면서 아 나는 뼈 1번 그러면 1번 매트릭스 불러와서 곱해주고
나는 2번 2번 불러서 곱해주고 가중치 더해서 합산해 갖고 나오는 게 스키닝이에요
그래서 이제
이런 스키닝이 잘못된 경우가 있죠 당연히 왜냐하면
무슨 뭐 사람 실수인 경우도 있고
뭐 실행 중에 뭔가 문제가 생긴 경우도 있고
그럼 가끔 게임하다 보면은 이렇게 사람
보통 이렇게 가만히 있는 물체는 거의 그러지 않고
사람 같은 경우인데 이제 갑자기 버텍스 하나가 삑 찢겨나간다거나
막 이렇게 갑자기 밑에 날 뛴다거나 이런 경우 있잖아요
막 사각형이 삐죽삐죽삐죽하는 경우
아마 게임 많이 해보신 분들은 그런 거 본 적 있을 텐데
그런 게 다 스키닝하다가 문제가 생긴 거예요
스키닝을 하다가 매트릭스를 계산하다가 문제가 생겼던
이 모델 자체에 있는 어떤 그 뭐랄까 뼈 몇 번에 갖고 와야 되는 건데
그게 잘못되어 있든 아까 말했던 가중치가 잘못되어 있든
그런 문제 때문에 생기는 거예요 그래서 그게 이제 스키닝이라는 거고
사실 제 책에서 보면은 버텍스 애니메이션은 넣었어요
그냥 뭐 사인웨이브 같은 거 넣어갖고 이제 애니메이션을 하는 경우
거기에서 시작해갖고 그냥 매트릭스를 여러 개 받고
뭐 이런 경우를 한다면 그렇게 어렵진 않겠죠
근데 이제 그 스키닝을 하는 그 자체가 이제 애니메이션
뼈대 애니메이션이 있는 그런 자료를 준비해야 되고
그리고 그거에 맞게 또 올바른 가중치를 다 줘야 되고
물론 아트 패키지가 좋아져서 웬만한 건 그냥 자동으로 얼만큼 할 순 있지만
그리고 그다음에
각 뼈가 움직이는 애니메이션을 만들어서 제공을 해야 되기 때문에
생각보다 간단하게 그래픽 테크닉으로 설명하기 쉽진 않았던 거 같아요
그래서 이제 스키닝이라는 말을 들었을 때 아 그게 그거구나
라는 식으로 생각하시면 되고 그리고 스키닝은 말 그대로 그냥 이런
뭐 소프트 스키인을 표현하기 위해서 했던 시도 첫 번째 중에 하나예요
근데 이제 그 외에도 뭐 어떤 문제들이 있냐면
이 사람 몸이라는 게 안에 머슬들이 있잖아요 그 근육들이
그래서 팔을 이렇게 굽히는 순간 여기에 근육이 뭉치잖아요
그럼 그런 거를 표현하려면 요즘은 물론 당연히 이제 영화 쪽에 계시는 분들이나 그런 경우에는
이런 머슬 시뮬레이션 해갖고 다 이제 디포메이션 하고 그런 경우도 있거든요
그래서 디포메이션 하는 경우도 있고 아니면 저희 옛날에 한 몇 년 전까지도
이렇게 빠르게 처리하기 위해서는 뼈가 사실은 앞쪽하고 뒤쪽하고 두 개가 있잖아요
여기도 조그만 뼈를 하나 심어요 그래서 애니메이션을 만들 때 이렇게 팔을 굽히면
여기 있는 뼈가 이렇게 약간 튀어나오게 그래서 그걸로 머슬을 이렇게 시뮬레이션 하는 경우도 있었어요
근데 뭐 요즘 한국에서는 아무래도 모바일 쪽을 아직도 많이 하고
그렇게 뭐 최고사양에서 돌릴 수 있는 그런 게임들이 별로 없으니까
그렇다면 여전히 이런 핵 같은 게 조금은 뭐 쓸모는 있겠죠
그래서 오늘 만들려고 했던 비디오는 그냥 예전에 책에 넣을까 말까 고민하다가 안 넣었다가
혼자 나름 죄책감 느끼고 있었고 가끔 원하시는 분들도 있었던 것들
거기서 두 개 중에 하나를 말하면서 끝냈어요 그래서
뭐 스키닝 애니메이션 이런 걸 좀 더 알고 싶은 분들은
제가 예전에 만들어 놨던 비디오 중에 게임 직군이라고 하면서 애니메이터하고 리거를 설명한 게 있어요
그걸 보시면 좀 더 이해가 되지 않을까라는 생각을 하면서 예 포프TV를 마치겠습니다
