예 포프입니다. 예전에 한번 헬릭스 purpose에서 나오는 헬릭스 클라우드
에 대해서 얘기를 한적이 있죠 제가 여기를 좋아했던 이유는 예전 svn
처럼 센트럴하게 모든걸 한 리퍼 에 쳐봤고 훨씬 편하죠 하지만
이걸 기수로 가져올 수 있다 그리고 헬릭스 클라우드는 클라우드이기
때문에 현재 공짜고 제가 기대했던 거는 그게 센트럴 리퍼에 들어가
있을 때 기수로 해서 부분 부분 따오는거 그러니까 폴더가 천개
면 이 천개 중에 한 폴더만 갖고 와서 이걸 기수로 만드는거 그런
걸 이제 얘기했잖아요 아무래도 기스는 아직 엔터프라이즈용은
아니에요 그런게 안되기 때문에 그래서 그런걸 원했는데 헬릭스
클라우드에서 안된다고 얘기를 하면 제가 좀 실망을 했었거든요
제가 비디오를 두개를 만들었던 걸 이렇게 하나는 이거 할 수 있다
하나는 지금 아직 안된다 그래서 제가 최근에 퍼포스 사람들하고
좀 트위터로 얘기를 했어요 얘기를 해봤거든요.
이렇게 해보니까 기스 수암이라는 걸 만들었어요 기스 수암이라는
게 제가 말했던거랑 똑같아요 솔직히 그냥 모든거 몇천개 갖고 있고
거기서 네로 클로닝이라고 하거든요 좋게 클로닝한다 그래서 뭐 원하는
폴더만 갖다가 기스로 클론할 수 있고 체크인하면 되게 그래서 그거를
했더라구요 근데 그거 이제 클라우드 에는 아직 안들어가 있고 그걸
다운받아갖고 설치하는 사람들 물론 이게 유료니까 퍼포스 쓰는
사람들은 다운받아 쓰면 되죠.
되는거 같고 안쓰는 사람도 20명 까지 아니면 워크스페이스 20개까지
는 공짜니까 다운받아갖고 자기 서버 돌리면 가능한거 같아요 근데
요즘 점점 큰 기업 아닌 이상은 자기 서버 안 돌리는 추세잖아요
그래서 이제 그 개발자 말로는 언제 헬릭스 클라우드에 들어갈지 모르겠
는데 들어가는 거는 언젠가는 들어갈 거라 그러고 그래서 그때 이건 중요한
건 아니에요 사실은 그게 들어오면 정말 헬릭스 클라우드 쓸만할 거고
왜냐면은 퍼포스 자체로 이제 싱크 해갖고 쓰기에는 그 포트 열고
막 이게 좀 귀찮아서 저는 그거는 기대하고 있고요 음 그리고 헬릭스
클라우드가 공짜라고 하는데 정확히 조건이 어떤지는 아직 안나와있어요
저도 베타로 들어가서 정확히 나중에 프라이싱 모델이 어떻게 될지는
아직은 모르겠고 그게 헬릭스 클라우드 얘기고 그 이 사람들하고 얘기한
김에 몇 가지를 더 물어봤어요 사실은 그 그게 뭐였냐면 첫번째가 음 저
그 뭐라고 그럴까 그 라지 파일 있잖아요 git 에서 보면은 바이너리
파일 들어갈 때 바이너리 파일 집어 넣지 마라 막 이러면서 제가 이거
왜 못 넣냐 말이 안되지 않냐 왜 바이너리 파일은 버전 컨트롤 하면
안되냐 아 그럼 원래 그런 거다 이런 얘기를 많이 했잖아요 근데
엔터프라이즈 쪽 특히 이제 게임 쪽에서는 바이너리를 버전 컨트롤
할 수밖에 없어요 그리고 그게 당연히 여러 군데 들어가는 것보다는 한
서비스에 들어가는 게 훨씬 나은 거고 그래서 퍼포스가 굉장히 좋았던
거고 그래서 그 얘기를 하면서 그 서비스에 들어가는 게 훨씬 나은

거고 그래서 니네 이거 하는 김에 그 머큐리얼에 있는 라지 파일
익스텐션 처럼 라지 파일 그 익스텐션 git 용으로 니네가 만들어서 퍼포스
가 만들어서 하나 하면 더 좋을 거 같다 라고 얘기를 했어요 전에도
몇 번 말했지만 라지 파일 익스텐션 이라는 거는 파일이 바이너리 파일
이고 큰 경우에는 히스토리를 전부 다 다운받는 게 아니라 최신 것만
다운받는 이런 식으로 가는 거죠 그래서 로컬에서 인터넷 없어도
최신 건 쓸 수 있고 다만 이제 바이너리 파일이 큰 경우에는 히스토리
파일이 큰 경우에는 이제 최신 건이라 구성권을 받으려면 인터넷
써야 되고 그래서 그런 이제 머큐리얼 쪽 그리고 이제 머큐리얼을 지원
하는 killen이라는 그런 공짜 웹호스팅 아니 공짜나 이제 두 명까지 공짜
웹호스팅도 그걸 하고 bitbucket이나 git 허브는 라지 파일 지원 안 하고
요 그래서 그거를 이제 왜냐면 퍼포스 자체는 원래 센트럴 시스템이었
고 그런 바이너리 처리 잘하기로 유명한 거기 때문에 그런 걸 하고
너네가 git을 클라이언트로 쓸 수 있게 하니까
이제 그러면 너네가 라지 파일 익스텐션 제대로 만들어서 배포를
해야 되지 않겠냐 라고 말했더니 이미 개발 중이래요 그래서 제가
볼 때는 퍼포스가 그거 라지 파일 익스텐션 내놓는 순간 아무래도
훨씬 git이 좀 더 좋아질 것 같고요 음 뭐 그래서 제가 생각하는 건
좀 그게 좀 익사이팅한 뉴스예요 사실 뭐 다른 git 그런 라지 파일
익스텐션 처리해주는 게 있긴 있는데 좀 git 쪽을 쓰는 사람들이 그 커뮤니티
자체가
그 이외에는 쓰면은 그건 git을 제대로 쓰는 게 아니다 이런 식으로 계속
가고 있어서 그거는 뭐 조금 아쉬운 부분이고 어찌 보면은 굉장히 특화된
목적으로 만든 버전 컨트롤 시스템 인데 그거 치고는 굉장히 좀 사용
법이라던가 이런 거는 좀 많이 딸 리는 것 같아요 오히려 이게 완벽히
제네렉 시스템이었다면 아 그래 이렇게 좀 복잡한 건 이해가 되는데
그렇게 특화된 걸로 쓰는데도 좀 그런다는 건 좀 문제가 있고 뭐
뭐든 간에 그게 나오기로 했고요 그리고 말이 나온 김에 git 얘가 나왔
으니깐 좀 더 제가 최근에 생각한 것도 있는데 뭐냐면 git이나 mercurial
의 문제는 언제나 그거잖아요 로칼 에 모든 히스트로를 다 받으니까
그 파일 사이즈가 커진다 뭐 텍스트 파일일 때는 문제가 없고 좀 좀
낮고 바이너리일 때는 더 문제다 이거였는데 익스텐션 만드는 김에
저는 그런 익스텐션 나왔으면 훨씬 나을 것 같아요 그 솔직한 얘기로
소스코드 한 한 2년치 들어가 있으면 진짜 2년 전 거 볼 일은 별로 없거든
요 그러면은 차라리 그 클론을 할 때 클론을 처음부터 끝까지 다 아는
게 아니라 mercurial은 작동을 제대로 안 하겠죠 걔는 diff 기반이기 때문에
git은 근데 스냅샷을 아예 다 하나씩 받아오는 거기 때문에 차라리 처음부터
지금까지의 모든 걸 박아두는 게 아니라 일단 최신 버전 파일은 듣고
두 가지 중에 하나라면 될 텐터 맞지 않나 싶어요 그냥 과거에 한 10개
리비전 정도까지만 싱크하는 거 아니면은 뭐 기간 정해고 최신 건
당연히 있고 최근 6개월 동안 것만 싱크하게 하는 뭐 이런식으로 그런
식으로 차라리 클라이언트 쪽에서 하게 되고 리모트에서 이제 싱크를
할 때 그냥 동기화 할 때 최신 것만 이렇게 동기하게 이렇게 만들 수
있다면 저는 오히려 훨씬 나아질 것 같다고 생각을 하거든요 그러니까
뭐
뭐 장단점은 있겠지만 그러면 굳이 이 바이너리 익스텐션도 필요 없을 것 같다
라지 라지 파일 익스텐션도 그 생각까지 들어요 그래서
이런게 뭐 뭐 기본적으로 기술 어떻게 구현되어 있는지 는 대충만 알기 때문에 그 시스템 구조상 안될 수도 있는데 저는 그게
굉장히 괜찮을 것 같아요 어찌보면 똑같은 거죠 뭐 이제 뭐 어떤 다른
립 그 버전 컨트롤 시스템에서 최근 로그 보기 하면은 로그 6개월치만 보여주고 이런거 있잖아요
그런거랑 그런거처럼 그러면 저는 좀 더 쓸만해지지 않을까 생각을 해요
그니까 저는 일단 뭐 Git 보다 Mercurial을 좋아하지만 Mercurial은 이미 뭐 Visual Studio에서 지원을 안하고 그래서 좀 많이 죽은 것 같애서
Git이나 Mercurial이 하고 있는 이 분산 시스템 분산 디스트리뷰리드 버전 컨트롤 시스템
전 이건 되게 좋거든요 저도 되게 좋아하고 잘 쓰고
이제 Git이나 Mercurial 자체는 거기서 시작한 거기 때문에 Purpose에서
지원하는 그런 그것보다는 잘 쓰는 것 같아요.
자체 지원하는 것보다 훨씬 더 ui도 깨끗하고 ux도 깨끗하고 사용료도 훨씬 좋고
그래서 그건 되게 좋다고 생각하는데
그러면서 다른 기능을 많이 포기해야 된다는 게 좀 아쉬웠던 것 같아요 언제나
파일 사이즈 문제 큰 파일
세상이 발전하려면 그냥 좀 뭐라 그럴까
모든 게 나아져야 되는 건데 이거는
이쪽에선 나쁘고 저쪽에서는 나쁘고 이러니까
한쪽으로 넘어가기가 되게 힘든 것 같더라고요 특히 게임 회사들은
게임 회사들은 아직도 대부분 뭐 한국에서는 sbn 쓸 거고 큰 회사들은 퍼포스 쓸 거고
기술을 쓰고 막 머큐어를 쓰는 건 굉장히 바이널때문에 복잡하고 리포나는 거 별로 이상한 짓 다 해야 돼서
그렇게 만족스러운 건 아니죠 차라리 기술을 다 하고 통째로 처박은 다음에
때때로 다시 클린하고 다시 파일 다시 녹아갖고 다시 시작하는 게 훨씬 나을 수도 있다는 생각이 드는데
그래서 뭐 앞으로 한 2-3년 안에는 교통정리가 확실히 되지 않을까 생각하거든요
이제 뭐 퍼포스 같은 회사에서 엄청 이렇게
생각하고 만들고 있으면 그 회사는 참 버전 컨트롤 시스템을 잘 만든 것 같아요
그 정도로 오늘 또 git 얘기 git 수암 얘기
네로어 클로닝 이제 헬릭스 클라우드에 온다는 거
그리고 git 라지파이 익스텐션 온다는 거
그리고 라지파이 익스텐션 외에 제가 생각하는 그래도 좀 쓸만한 익스텐션
그 정도 얘기를 오늘은 마치고 네 포프였습니다
