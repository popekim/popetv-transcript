안녕하세요 포프입니다
얼마 전에 좀 됐죠 사실은
알고리즘 강의를 만들다가 POC 아카데미에서
어떤 자료구조, 데이터구조, 알고리즘일 수도 있고
그 자체가 그거를 보게 되면서
아 참 이제 또 했구나 라고 생각을 한 게 있어요
예전부터 알고 있던 자료구조이긴 한데
그 자료구조가 뭐냐면 TRI
T-R-I-E-E-R
이거를 옛날에 제 기억에는 저도 학교 학부 때 배우기는 했어요
배우면서 그냥 뭐 스펠링은 TRI인데
왜 굳이 TRI라고 발음하지?
그 당시에는 소고 TRI 이런 것도 있었기 때문에
그걸 넘어갔었어요
이번에 가르치다 보니까 이름의 어원을 보게 되잖아요
그 어원을 보고 나서 역사를 보고 나서
아 이제 또 했네 라는 생각이 든 거예요
그 이제시라는 게 뭐냐면
이름을 만들 때 어떤 거에 명칭을 지을 때
제발 잘난 척, 똑똑한 척, 남들 모르는 은어
와 내가 이런 거 생각해냈어
이런 짓 하지 말자고요
이거 그 특히 똑똑하신 분들
수학자라던가 프로그래머라던가
이러신 분들이 이런 단어 장난 되게 좋아하세요
근데 단어 장난을 했을 때
그 단어가 굉장히 입에 착 감기고
딴 거랑 헷갈리지 않고
원래의 의미를 잘 전달하는 단어가 훌륭한 단어지
그냥 남들은 잘 모르는 거
나만 이해하는 거
만들어 놓고 와 기반해 난 똑똑해
이게 뭐 하는 짓이야
그 중에 하나가 바로 트라이라는 겁니다
TRIE 어떤 자료구조일까요?
트리인데요 원래는
트리에서 특별한 거 뭐를 하는 거예요
이게 뭔지 궁금하신 분들은
POCU 아카데미의 컴프 2500을 들으시면 되고
그게 아니라 찾아보세요
어떤 사전 단어 같은 거 집어넣기 좋은 자료구조 중에 하나인데
트리 기반인데 약간 트리의 규칙을 약간 다르게 한 그게 전부입니다
트라이
TRIE 이게 영어로는
Retrieval 어떤 거를 가져온다
거기에서 중간을 딴 거예요
왜냐면 Retrieval 할 때 TRIE가 있거든요
그걸 따와서 TRIE라고 적었고
처음 이 단어를 만드신 분은
아 이거 읽으면 트리야
왜냐면 TRIE면 트리거든
그러면서 와 이거 Retrieval Tree인데
내가 Tree라고 부를 수 있어
야 똑똑해 정말 대단하지 않냐
중간을 때려서 이러고 있었던 거야
하지만 실무자들은 그렇게 멍청하지 않습니다
열심히 보다 보니까
헷갈리는 거야
말로 하다가 TREE라고 얘기를 해요
말로 하다가
그러면 그 TREE가 우리가 생각하는 그 TREE인지 나무 TREE인지
아니면 Retrieval Tree인지
모르겠다는 거죠
헷갈리는 거야 말해서
그래서 누군가가 이거 그럼 발음을 좀 바꿔서
TRIE로 하자라고 해서 TRIE가 된 게 전부입니다
자 듣고 나면 좀 황당하죠
그 요즘 뭐 막 단어 줄이고 줄임말 쓰는 그런 분위기도 많고 그러긴 해요
그러나 사람 간의 의사소통을 편하게 하려면은
다들 알고 있는 게 아니라요
알고 있는 그런 축약어를 사용하거나
그 그룹에서 알고 있는 축약어를 사용하라고
제가 예전에 비디오 만들었어요
괜히 잘난 척하라고 그러지 말아라고
하지만 반드시 알아야 될 축약어도 있기는 있다고
비즈니스 라이팅 이런 거 할 때는
그런 얘기를 했어요
하지만 너무 많은 건 문제가 되고
특히 TRIE 같은 경우 헷갈리잖아
TRIE라고 말하면 헷갈리잖아요
그걸 누군가 TRIE로 바꾸는 건 조금 다행이기는 하고요
이런 일들이 근데 꽤 많은 곳에서 일어납니다 사실은
이런 식으로 이름 장난 쳐놨다가
야 멋있어 라고 해 놓고 넘어갔는데
그 이름 자체에서 이해가 확 안 될 경우
나중에 본인도 까먹고요
다른 사람도 얘기할 때마다 몰랐고
또 찾아봐야 되고 더 헷갈리고
아니면 뭐 해서 헷갈린 거 되게 많습니다
그 중에 또 하나가 뭐냐면
그 PS4 PlayStation4 메모리 아키텍처에 나왔을 겁니다
거기에 보면은 메모리가 요즘 데스크탑은
그냥 메모리 하나로 퉁치고 넘어가지만
뭐 그렇지도 않구나 그래픽 메모리가 있으니까
PS4는 메모리를 크게 두 개로 분류를 해놔요
그리고 그 어떤 메모리를 크게 두 개로 분류해놔요
어떤 부분의 메모리냐에 따라
그 성능이 좀 달라져요
읽기 성능, 쓰기 성능 이런 게
근데 그거 이름을 내부적으로
처음에는 아마 개발할 때
아무도 모르게 하기 위한
그런 코드명이었겠죠
영어로 하면 갈릭과 어니언이에요
마늘과 양파입니다
자 메모리에 우리는 두 개가 있어
마늘 메모리, 양파 메모리가 있어
그래서 어떤 게 뭐 하면 빠른 거고
어떤 게 GPS 읽으면 빠른 거고
어떤 게 캐시에 빠른 거죠
몰라 헷갈려
그래서 가만히 있을 때마다
할 때마다 문서 봐야 됩니다
그거를 맨날 PS4만 만들고 있고
딴 거 안 하면은 당연히 나중에 안 헷갈리겠죠
근데 여러 플랫폼 만들다가
PS4 포팅할 때마다
갈릭이 뭐였지 어니언이 뭐였지
심지어는 최근에 저한테
포팅을 의뢰한 회사가 있어요
그 회사의 사장도 프로그래머인데
그 회사 사장이
디버깅 하다가
PS4가 좀 느린 거 같은데
갈릭, 어니언 이런 게 있는데
이런 거 때문이 아닐까? 냄새가 나 이러는 거야
갈릭, 어니언 때문에 그 문제는 안 생겨
왜냐면 저는 약간 기억하는 게 있으니까
하지만 어쨌든 그 사람도
소니 계열 개발을 그래도 여러 플랫폼 다 포함해서
벌써 한 5, 6년, 7년, 8년, 9년, 10년 한 거예요
근데 그 메모리 관리 코드를 맨날 안 보니까
본인도 어느 순간 헷갈리는 거예요
갈릭이 그거였니? 어니언이 뭐였니?
그냥 그런 게 아니라
우리 흔히 컴퓨터에서 나누는 것처럼
그래픽 메모리, 시스템 메모리
이렇게 나누던가 아니면 얘는
캐시 달린 메모리, 캐시 없는 메모리
뭐 이런 식으로 얘기를 할 수도 있잖아요
아니면 패스트 메모리, 슬로우 메모리
이런 식으로 얘기하면 되는데
굳이 이 메모리 영역을 갈릭으로 만들 수 있고
어니언으로 만들 수 있고
왕창 헷갈리죠 왕창
그런 문제들이 있습니다
그래서 어쨌든 간에 뭐든지 이름을
브릴리언트하게 지으면 나중에 문제 생깁니다
코드 베이스에서 그런 경우 있어요
정말 프로젝트 명이나
프로젝트 코드 같은 거 있잖아요
그런 거 할 때도 의미가 있어야 돼요
예를 들어 제가 예전에
전자상거래 미국에서 2등 하는 곳에서
뭔가 플랫폼 만들어 줄 때
제가 들어갔을 때 그 플랫폼에 있긴 있었어요
근데 그 플랫폼이
내부적으로 피닉스 엔진이라고 불려요
그 이유가 뭐였냐면은
회사가 거의 망해갈 때였어요
그래서 요거를 성공시켜야지만
회사가 살아나기 때문에
이름을 불사조로 지은 거예요
지금 회사 망해가고 있으니까 불에 타 죽어서
멋있게 살아나라
그래서 피닉스라고 지었고
피닉스가 그래서 성공을 했습니다
내부적으로 피닉스 엔진 하면은
그냥 그 팀은 피닉스 팀이야 라고 했었죠
아 저거 피닉스 팀인데
사람들은 내부적으로는 알아요
그냥 이 제품을 만든 거야라고 얘기할 수 밖에 없지만
내부적으로는 그 엔진이 뭔지
사람들이 의미를 듣고 나면 까먹지는 않아요
그래서 그렇게 프로젝트명을 짓는 건 좋아요
근데 나중에
이거를 약간 브랜드명을 변경하더니
아폴로 프로젝트라고 부르기 시작했어요
그래서 아폴로 프로젝트라고
부르기 시작을 하는데
그때 아폴로 프로젝트의 빌드 버전도
그 아폴로 우주선 떨어졌던 그
빌드 버전하고 어떻게 맞아서 되게 기분이 안 좋았거든
우리들은 근데 뭐 그걸 떠나서
어디가서 아폴로라고 얘기하면은
그냥 뭐 그래 아폴로 프로젝트겠지 하지
의미가 없는 거야 우리도 의미를 들은 적이 없어
아무도 의미를 들은 적이 없어
그러니까 사람들이 내부적으로 계속 피닉스라고 부르게 되는 것도 있었죠
근데 웃기는 건 피닉스는 외부적으로
얘기한 적이 없거든요 근데 아폴로는 외부적으로
얘기를 했어요 그래서 그건 또 왜 그랬는지도 잘 모르겠어요
그냥 멋있었나? 그래서 그런 것도 있고
그런 라이브러리 엔진 할 때도
막 라이브러리 이름 지을 때도
그래픽 엔진 그래픽 라이브러리
AI 라이브러리 하면
되게 좋아요 근데 그걸 갖다가
핑크 라이브러리 아니면은
뭐 이게 되게 멋있다고 해서 어썸 라이브러리
이러면 무슨 의미가 있냐고
그죠? 그래서 그렇게 하는 순간 갑자기
헷갈리기 시작해요 그래서 그런 게 아니라
정말 라이브러리 이름 좋게 지은 것도 있잖아요
뭐 이미지 매직이라던가 아 이미지
처리하고 막 바꾸는 거니까
그렇겠구나 근데 그게 아니라 얘가 그냥
매지컬 이러면은 얼마나
헷갈리겠어 그죠? 그래서 이런
것 때문에 이름 애매하게
지으면 나중에 헷갈립니다 나중에
그냥 가서 야 그 그 뭐
뭐 핑크 엔진 고쳐 핑크 엔진이
뭐 하는 건데요 어 그게
아 음 보자 뭐였지 아 그래픽 하는
거야 뭐 이런 식으로 얘기가 나올 수밖에 없잖아 근데 처음부터
야 그 우리 엔진 이름은
뭐든 상관없어 우리 엔진 어썸 엔진에
그래픽 라이브러리 고쳐 이러면은 그건 확실히
이해가 되죠 그래서 정말 저도
프로젝트 많이 해봤고 라이브러리 이름 많이
지어봤지만 진짜 그 라이브러리가
뭐 하는지 정말 무뚝뚝
하겠지만 그런 식으로
이름을 짓는 게 최고고요 그거를
굳이 예쁘게 짓겠다면은 중간에
뭔가 그 내가
원하는 그 객관적인 이름이 들어가는 걸
말줄임으로 바꾸는 거는
그나마 괜찮아요 그나마 괜찮아요
제가 예전에 만들었던 엔진
중에 게임 엔진 중에 메이지
MAGE 엔진이라고
있었어요 그래서 메이지라고 그냥 불렀는데
내부적으로는 그게 무슨 약자였냐면은
매지컬리 어드밴스드
게임 엔진이에요 그 GE가
그냥 게임 엔진이고 뭐 굉장히
마법같이 뛰어난
발전된 엔진이다 그래서
그냥 뭐 메이지라면 마법이잖아요 또 그것도
그래서 메이지 엔진하면은 그냥 대충
그래 뭐 메이지 게임 엔진
그거는 그냥 아는 거고 그 내부에 라이브러리
나눌 때는 다
그래픽 라이브러리 AI 라이브러리
이런 식으로 나눴습니다 그래서 그렇게 하시는 게 좋구요
정말 이름 지을 때
나중에 내가 표현하려면 나중에 남이
표현하려면 혹시 이게 잘 돼갖고
직원이 막 100명 200명씩 들어올 때
그 사람들한테 하나씩 잡고 이거는 이거야라고
말해주지 않으려면은 확실히 이름은
그걸 의미하는 거 그걸로
만드는 게 좋습니다 그러려고 우리가 언어를
사용하는 거지 무슨 의사소통을 안 하려고
언어를 사용하는 게 아니잖아 그쵸 열심히 얘기한 거
같네요 포프였습니다
