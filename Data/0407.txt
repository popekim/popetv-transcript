예 안녕하세요 포프입니다. 제가 예전에 미국에서 전자상거래 2위, 3위 하던 기업에서 리드를 한 적이 있다는 얘기를 한 적이 있죠. 거기서 일단은 저는 잘 못 보던 부류의 개발자들을 본 적이 있어요. 그게 한국에서 흔히 말하는 SI라는 개발자들인 거 같아요. 요즘 이제 제가 쓰는 단어는 내부 개발팀이냐 아니면 외주냐라는 식으로 얘기를 해요. 그러니까 우리 내부에 있는 기술과 내부에 있는 제품을 만들기 위해 개발하는 사람들이 있고, 그게 아니고, 그러니까 자체기술, 자체제품이죠? 외부에서 이제 외주가 들어온 것들을 만들어주는 개발자가 있다라고 저는 구분을 해요. 한국에서는 그냥 그걸 SI라고 하는 거 같애요. 제가 틀릴 수도 있고.

제가 이렇게 외주 비슷한 개발을 하는 사람을 처음 봤죠. 왜냐하면 저희가 자체 개발팀도 있고 자체에서 개발하는 것도 있었지만, 저희 고객들에 맞춰서 customization 해주는 것도 있었거든요. 그런 부분을 그 사람들이 맡아서 했고, 그 사람들은 여태까지 커리어를 그쪽으로 많이 쌓아왔던 거 같애요.

똑같은 걸로, 제가 프론트엔드 개발자들을 채용하기 시작할 때 프론트엔드 개발자도, 그 전에는 내부 개발팀에 프론트엔드가 별로 없었던 거 같애요. 여기는 굉장히 많은 사람들이 에이전시라는 데에서 오더라구요. 에이전시가 뭐냐, 한마디로 외주 회사죠. 그 외주 회사의 정식 직원일 수도 있고 프리랜서로 등록이 될 수도 있고. "야 요번에 이런 프로젝트가 있어", "이런 회사의 웹사이트를 만들어야 돼" 그러면 들어가서 그거 만들고 나오고, 이런 식이었어요. 그래서 역시 외주의, 역시 SI, 하청 이런 거였죠. 거의 느낌이.

제가 그거를 못 봤던 이유는 저는 일단 백그라운드 자체가 자체 게임 개발을 하고 이런 데였어요. 그냥 게임 개발사 중에서 외주로 개발하는 경우가 별로 없었어요. 지금은 잘 모르겠는데, 물론 외부 개발팀한테 돈을 주고 유통을 담당해주는 큰 유통사는 있었지만, 그래도 결과적으로는 게임이라는 게 우리가 쓰는 하드웨어에서 속도를 최고로 뽑아서 어떻게 돌려야 되는 거기 때문에, 그런 기술적인 코딩이라던가 최적화를 하지 않으면 절대로 돌릴 수가 없는 정도의 제품이라고 생각을 해요. 지금도 100% 그런지는 모르겠지만.

그런데 저희는 굉장히 힘든 일을 해야 하는 직종 중의 하나였다고 봐요. 기술적으로 힘든 일들, 사람 대인관계 힘든 일이 아니라. 그래서 제가 보는 개발자들은 굉장히 문제 해결 능력들이 뛰어났어요. 왜냐하면 자체 개발하고 자체 기술을 만들고, 또 어찌 보면 뭐 한 건 하고 돈 받고 끝내는 게 아니라, 그 기술을 계속 발전시키고, 유지보수가 힘들어지면 또 힘들어지고, 이런 걸 계속 바꿔두고, 새로운 거 나왔다고 하면 고민해야 하고, 팀에 크게 해가 없지만 훌륭한 것들도 또 도입해야 하고.

그런데 외주로 가는 순간 그 생각은 아예 바뀌거든요 사실은. 외주에서 보통 하는 게 제품이 나오고 기능이 나온다를 하지, 그 기능이 어떻게 떡칠을 해도 일단 돌아만 가고 당장 납품할 때 문제만 없으면 솔직히 크게 딴지를 안 거는 게 일반적이에요. 그렇기 때문에, 그리고 일단 그런 것도 신경을 안 쓰고 단타성 제품이 많고. 그래서 이런 거를 했던 사람들하고 일 했을 때 되게 공통적인 게 그거였어요.

뭔가를 하다가 문제가 생기잖아요. 우리 내부 기술 쓰다가 문제가 생기면, 세팅이 잘못된 걸 수도 있고 여러 가지 문제가 있는데, 이미 소스 코드가 있는 제품들이에요. 내부 코드이기 때문에. 그러면 단순히 자기가 브레이크 포인트 걸고 디버깅을 하는 것만으로도 뭐가 문제가 있는지 찾고 자기가 고칠 수가 있는 부분이거든요. 되게 단순한 문제까지도, 되게 복잡한 것도 좀 걸리겠지만. 그럼 그거로 인해서 기술이 어떻게 도는 걸 보고 제품을 이해하고 코드를 이해하는 과정이 늘어가는 거에요. 제가 예전에 말했던 "너는 디버깅은 해봤니"라는 그런 거랑 비슷한 얘기죠.

근데 제가 그런 사람까지도 봤어요. 시니어까지 달고 있는데, 되게 단순한 문제고 그 문제 때문에 도와달라고 연락을 계속 너무 자주 오는 거에요. 그래서 갈 때마다 딱 앉아갖고, 저도 이제 그 문제가 왜 생기는 지 모르니까, 저도 봤던 코드가 아니거든요 사실은. 그럼 브레이크 포인트 걸고 실행하다 보면 대충 문제가 보이는 경우가 80% 이상이었어요. 그게 한 3~4분밖에 안 걸렸어요 사실은, 제가 할 때. 그럼 이 사람은 대체 뭐하고 있는 걸까?

"아 그냥 나는 이 조립도에 따라 조립을 했는데 안 돌아."
"아우 이거.. 야 이거 니 제품이니까 와서 고쳐줘."

이 개념이었던 거 같애요. 그러니까 제가 한국의 SI가 얼만큼이 개발이고 얼만큼이 조립인지는 모르겠지만, 외주로 도는 회사에서 특히 아까 말했던 것처럼 웹사이트 쪽의 외주라던가 간단한 앱이라던가 이런 거는 그냥 기존에 있는 라이브러리 최대한 도입해서 빨리 끝내고 돈을 잘 받고 이게 전부잖아요. 가성비가 중요한 거거든요.

무슨 외주하는 사람들이 당연히 그중엔 장인정신이 있어갖고 되게 열심히 장인정신으로 만드는 사람들이 있지만, 한 번 보고 말 코드라면 사람들이 좀 "대충 만들어놔도 괴로운 건 내가 아니잖아?" 이 개념으로 하는 것도 있는 것 같고. 그래서 그런 극단적인 상황까지 있을 정도로 시니어가 개발 능력이 부족했어요. 이게 좀 개발이란 용어도 되게 애매한 거 같은데, 정확히 얘기하면 프로그래밍 하는 능력이 부족했어요.

조립해서 제품 만드는 것도 개발이라고 할 수는 있거든요. 그러면 개발 능력은 좋을 수도 있어요. 제품 나오는데. 그 제품을 더 이상 손을 안 대고 잘 유지하다 보면 잘 가는 거고. 그런데 정작 시니어급까지 타이틀을 달 정도의 사람들이 이걸 못하면 말이 되나 싶을 정도였거든요.

그래서 제가 그 뒤로, 그전부터 SI 쪽이 얼마나 안 좋은지 얘기는 많이 들었었고. 물론 제가 또 한국 쪽에서 게임 개발자들을 많이 알기 때문에 SI하고 전혀 상관없이 자체 기술 만들고 아니면 열심히 정말 최적화해가면서, 코드 파가면서 같은 코드 1년 2년 3년 동안 하면서 그러는 사람도 많이 봤어요. 한국도 SI 있고 SI가 아닌 데가 있어요. 제가 볼 때는 여기도 SI인 데가 있고 SI가 아닌 데가 있을 거 같애요. 내부 개발팀과 외부 컨설팅팀.

처음 닷컴버블 시작하고 컴퓨터, 개발 이런 게 처음 들어올 때는 회사들이 자체 개발팀이 있는 경우가 되게 드물었어요 사실은. 왜냐, 컴퓨터란 새로운 거고 뭔가를 새로 만들어야 되는데 그 많은 인원을 뽑을 수도 없고. 그래서 외부 컨설팅 회사를 해서 거기 돈 좀 많이 주고, 컨설턴트라고 했죠 예전에, 걔네 보고 그냥 "제품 만들어와." 그렇게 일을 했던 경우가 많아요 사실은. 그리고 그 때는 컴퓨터가 처음으로 크게 터질 때고 프로그래밍 수요가 늘어날 때여서 컨설턴트가 되게 돈을 잘 벌기도 했어요. 그러나 이제 요즘은 많은 회사들이 내부 개발팀을 소유하고 있죠. 그런 회사에서는 자기가 만든 기술을 자기가 계속 재활용하는 걸 알기 때문에 코드 퀄리티라던가 아니면 사람들의 주인 의식도 좀 더 강한 거 같애요.

예전 같으면 말 그대로 컨설팅 회사 들어가서 그렇게 지금 마인드랑 별로 다르지 않게 코딩했을 거 같은데, 그러면서도 돈을 잘 벌었으니까 만족이 있게 살았던 것 같은데 이제는 시대가 좀 바뀌었어요 사실은. 컨설팅 회사에서 외주하는 회사에서 돈을 그렇게 많이 주지 않잖아요. 오히려 내부 개발팀을 많이 주죠. 그만큼 기술의 중요성을 더 알았다고 전 보거든요.

요즘같은 사람들한테 제가 해주고 싶은 얘기는 뭐냐하면, 제가 컴공을 졸업하고 나서 갈 수 있는 회사들은 사실은 많아요. 내가 실력이 더 좋으면 당연히 내가 가고 싶은 데를 골라 갈 수가 있죠. 실력이 종이 위로 보여지는 실력이든, 실제 도는 프로그램으로 보여지는 실력이든, 포트폴리오로 보여주는 실력이든, 면접에서 잘해서 받는 실력이든. 내가 그걸 잘하면 당연히 내가 원하는 회사에 들어갈 수가 있어요.

그러면 자기가 원하는 회사가 말 그대로 외주하는 회사다. 뭐, 그래도 제가 할 말은 없어요. 그런데 걱정을 하죠. "과연 이 사람이 발전이 될까." 회사에서 매일매일 일하면서 힘든 일을 할 상황이 없고, 단순하게 라이브러리 받아다가 조립하고, "어 이거 안 돼" 그러면 디버깅할 생각 안 하고, 디버깅 할 방법도 없는 경우도 많고. 코드 자체가 closed source인 경우도 있으니까. 이런저런 라이브러리 꽂아보고 "아 되네?" 버전 올릴 때마다 또 깨지고 고생하고. 이런 거, 말 그대로 그냥 조립하는 사람. 그런 쪽으로 가는 게 과연 맞는가.

제가 예전에도 말했지만 "10년 뒤에 과연 살아남을 수 있는가." 그거 조립하는 거 어차피 누구나 할텐데. 라이브러리 동일한 거 몇십 년이나 쓰겠다고, 5년 쓸까? 정말 더 이상 손대지 못할 정도의 레거시 라이브러리가 아니라면. 아니면 내부 개발팀에 들어가서 개발 배우고 새로운 코드도 만져보고, 아니면 코드 최적화도 해보고, 그렇게 코드하고 동고동락하면서 사람들의 자부심도 있고 주인 의식도 있는 곳에서 성장을 할 건가는 본인 선택인 거 같애요.

저는 당연히 내부 개발팀에 들어가라고 얘기를 해요. 그래서 만약에 직장을 잡을 때 choice가 있는 사람들이라면 저는 가능한 한 내부 개발팀을 가라고 말하고 싶어요. 정말 자체 개발하고 자체 기술이 뭐가 있고 새로운 제품에 대한 새로운 발전, 새로운 기능. 이런 것들을 손에 쥐고 할 수 있는 그런 회사들. 그런 게 좋다고 생각을 해요.

그런데 그게 아니라 정말 SI 밖에 갈 수 없는 사람들이라면, 잘 모르겠어요. 그냥 거기에 가서 이것만으로 내가 괜찮을 거다라고 생각을 하는 거는 좀 너무 자기 위안인 것 같고. 그 틀을 깨기 위해서, 아니면 내가 진짜 선택권을 갖기 위해서, 내가 어디든 갈 수 있는데 정말 내가 최고라고 생각하는 곳을 갔다라는 선택권을 갖기 위해서 뭔가 변화가 있어야 할 거 같애요.

"직장 다니는데 새로운 사이드 프로젝트를 할 순 없잖아요." 그러면 뭐 변화가 없는 거고. 그러면 사이드 프로젝트를 통해서 새로운 걸 배워갖고 그 틀을 깨고 다른 거로 갈 수 있는 변화를 자기가 안 만들고 있는 거죠 그러면. 반드시 개발이라는 게 생활이 되어야 하는 건 아니잖아요 사람마다. 그러면 다른 데서 인생의 재미를 찾아야 되는 거고, 그러면서 노후 대책도 잘 해야 되겠고. 저는 그렇게 생각을 하고 있어요.

IT업계가 되게 괴롭다 힘들다라는 얘기가 나오기도 하지만, 저는 그거는 제가 아직은 말했던 선택권이 없게 된 사람들, 이유가 뭐든 간에 그런 사람들이 더 많이 겪는 문제라고 생각을 해요. 내부 개발팀이 있고, 정말 내부 개발팀에서 일하는 사람들은 그런 문제가 훨씬 적을 거라고 보고. 근데 현재 상황에서는 내부 개발팀이 없는 하청이라던가 이런 게 전부인 것 마냥 떠들고 있는 단점도 있죠.

오늘 해주고 싶은 얘기는 그거였어요. 그냥 본인 판단이 안 설 때, 객관적으로 어느 회사가 좀 더 낫냐, 나한테 도움이 될까라고 생각을 하신다면 내부 개발팀이 있는 회사로 가세요. 이미 컨설팅 회사라는 개념은 많이 예전에 핫했고 요즘은 덜 핫한 거 같아요. 오히려 개인 발전은 내부 개발팀을 통해서 하는 게 맞는 거 같아요. 그런 사람들도 더 많이 보이고.

오늘은, 하, 짧게 끝냈다. 짧게 포프TV 끝내겠습니다.