제가 한 라이브 중에 굉장히 인기 가 많았던 라이브가 예전에 영천
님하고 했던 directx12 관련 라이브 두 번이었어요. 굉장히 긴 라이브
였고 둘이 잡소리 정말 많이 했고 근데 아직까지도 많이 보는 라이브
중에 하나예요. 그래서 그 뒤에 이제 제가 말씀드렸듯이 다른 비디오
에서 그때는 directx12를 하고만 있습니다 라고 얘기했는데 헤일로pc 버전
에 제가 참가를 했죠. 그래서 제가 directx12를 했던 거고 제가 기능을
만들다기보다는 사실은 문제가 있는 부분에 이런 거 방향을 잡아
준 것도 많고 기능도 멀티스레딩 렌더링 쪽도 제가 만들긴 했고 그
지만 굉장히 많은 부분은 새로 나온 api 문서화되어 있지 않은 api에서
전혀 이 버그가 뭔지도 모르고 저희 팀 애들도 막 2 3개월 동안 버그가
막 터지는데도 크래쉬 나오는데 도 뭔지 몰랐던 거를
그 directx12를 머신하고 이제 사랑을 나누면서 공감을 하면서 아 네가
이런 문제가 있구나 그래서 그거에 대한 해결책 찾고 고쳐주고 방향
잡아주는 이런 걸 되게 많이 했어요 . 그래서 이제 그 거기서 발견한
내용들을 저는 이제 그 라이브를 통해서 좀 공유를 한 거고 영천
님도 그걸 통해서 공유를 한 거죠 . 근데 이제 그러다 보니까 저희가
directx12에 대한 문제점을 굉장히 많이 봤어요. 뭐냐면 directx11처럼
이것을 하나의 독립된 기술로 해서 마케팅을 엄청나게 안 하는 거예요
. 그러니까 개발자한테 마케팅을 그 이유가 저희가 언제나 얘기하듯이
directx12는 엔진 정도 만들 수 있는 회사가 써야 되는 거지 일반 개발자
라면 directx11이 낫다라고 얘기하고 있거든요. 그래서 그렇기 때문에
엔진사나 저희처럼 이제 저는 헤일로 를 개발할 때 마이크로소프트
사 제품이니까 그만큼 컨택을 많이 할 수 있었죠. 그런 내부 정보를
많이 들을 뿐이지 실제 개발자를 위해서 자료가 잘 찾을 수 있는
회사가 되어있지는 않아요. 있긴 있는데 정리가 안 돼있어요
. 정확히 얘기하면. 그리고 아무도 이게 중요하고 저게 안 중요하다
라는 걸 말을 안 해줘요. 그래서 아 진짜 서롱이 너무 길었어요
. 그래도. 그래서 영천님하고 저하고 고민하던 도중에 그냥 페이스북 그룹
이나 하나 만들자. 페이스북 그룹 이나. 그래서 페이스북 그룹을 하나
만들었어요. 그래서 그 그룹 이름이 제가 뭔지 기억이 안 나요. 뭐
directx11 directx12 개발자 모임 이렇게 될 수도 있는데 영천님이 수정한
시장이시고 저는 이제 저도 가입 돼 있는데 저도 저도 어드민으로
가입돼 있는 것 같긴 해요. 그래서 해놨고 사람들이 가입을 했는데
솔직히 요즘 directx12 개발하는 사람이 많지 않아서 활동은 되더
요. 그래서 그냥 이전에 만들고 나서 곧바로 광고를 하려고 그랬는데
그 광고가 늦어져서 지금 나가는 거예요. 그래서 밑에 링크를 걸어
드릴 테니까 가입을 하시도록 하고 거기에 제가 한 두 가지를 올린
게 있어요. 정리를 해서.
그래서 그게 제목을 뭘로 올렸냐 면 세 번째 것도 올려야 되는데
사실은 아무도 말해주지 않는 directx12 엔진을 만드는 사람에게 필요한
조언. 그래서 1 2 두 개를 올렸거든 요. 그래서 그 페이스북 그룹에 있는데
어차피 제가 광고만 하고 끊으면 비디오가 2분 남짓으로 해서 별로
도움이 안 되니까 그걸 그냥 읽을 게요. 제가 올렸던 거를. 왜냐면
이제 라디오처럼 들으시는 분도 많고 포프TV라디오 포프TV는 포프
라디오를 좋아하시는 분들도 꽤 있기 때문에.
일단 제가 첫 번째 올렸던 거. 그냥 읽죠 편하게. 아무도 말해주지
않는 directx12 엔진을 만드는 사람에게 필요한 조언 넘버원.
처음부터 페이지 메모리 할당 기법 을 사용해서 모든 리소스를 텍스쳐
뭐 버텍스 버퍼 인덱스 버퍼 이런 것들을 그 페이지 알로케이터에
쳐박을 것. 이거는 선택사항이 아니고요. 반드시 처음부터
그려야 돼요. 그렇지 않으면 directx12 에서는 모든 리소스를 만들 때
64kb의 얼라인을 매겨야 되는 것도 있고 텍스쳐 같은 경우에는 그거보다
큰 얼라인먼트를 매기기도 하거든 요. 그래서 리소스가 1kb만 되더라도
64kb를 차지하기 때문에 최소가 아니라 평균 메모리를 할당을 200mb를 잡으면
실제 메모리 필요한 게 200mb라면 할당이 400mb쯤 들어가요. 그래서 메모리를 두 배
정도 먹는 그런 효과가 나기 때문에 페이지 알로케이터를 만들어서 페이지
별로 64kb로 만들던가 크게 4mb 단위로 만들던가 해놓고 그 중간에 오프셋
으로 집어넣어서 여러 가지 리소스 를 쳐박아서 한 번에 쓰는 거. 그게
중요하죠. 또 그렇게 하려면 리소스 트랜지션이라는 것도 있고 리소스
트랜지션을 할 때 뭐냐면 나는 이것을 버텍스 버퍼로 쓰겠소.
이것을 uab로 쓰겠소. 이런 것을 정의해 줘야 돼요. 쓸 때마다. 그래서 같은
종류의 리소스가 한 페이지에 들어가면 되기 때문에 그런 걸 좀 더 관리를 잘해야
되죠. 이것에 대한 예는 github 가시면 마이크로소프트에서 메모리 레지던스
라고 해서. 아니야. 메모리 레지던스가 아니지. 이거 마소에 있던가. 제가
봤던 데는 언리얼 엔진 4가 오픈소스 잖아요. 지금. 거기 가면 이 코드
가 있어요. 어떻게 걔네가 하는지. 디렉텍스 12에서 페이지 단위로
해갖고 리소스 관리하는 거. 거기 보시면 도움이 돼요. 그게 1번.
2번. 아무도 말해주지 않는 디렉텍스 12 엔진을 만드는 사람에게 필요한
조언. 넘버 2. dx12 문서는 꼼꼼한 게 현재 나온 게 없어요. msdn 문서
에는. 하지만 마이크로소프트 사에서 샘플 코드를 열심히 만들어 놨거든
요. 옛날에는 sdk에서 딸려왔었 죠. 지금은 github에 열려 있어요.
이 코드를 반드시 보기를 바래요. 그리고 이제 디렉텍스 9. 뭐 10. 11
까지였던 거 같은데. 거기에 있는 d3dx라는 클래스가 따로 있었죠.
그거는 말 그대로. 디렉텍스 유틸리티 클래스였어요. 디렉텍스 3d에 있는
함수들을 호출해서 만든 다른 유틸리티 함수들을 만들어 놓은 게 d3dx였
는데. dll-hel이 엄청났고. 그래서 이걸 더 이상 안 만들어요. 그래서

마수에서는 그 코드 실제 구현을 해서 디렉텍스 12 용으로 github에
올려놨어요. 그래서 헤더 파일만 포함하는 것만으로도 이제는 그걸
돌릴 수가 있어요. 사실. 그래서 그 d3dx 코드도 필요하신 분들은
그 github를 보시는 게 제일 좋아요 . 그래서 그 github 링크도 제가 밑에
같이 넣어드릴게요. 그게 두 번째 고. 나온 김에 세 번째도 할까. 아니야
. 세 번째는 나중에 그 페북 광고 를 위해서
.
그래서 광고 거기에 올리는 걸 하고 아직 세 번째 올릴 게 너무
짧아서 얘기를 정리를 안 해놨어요 . 그래서 나중에 페북 가서 보세요
. 그래서 페북 광고는 했고 저는 과연 디렉텍스 12를 얼마나 쓰실
분들이 있을지 모르겠는데 그게 있다고 알려드리고 포프tv는 오늘도
즐겁게 광고를 마치고 여기서 끊 겠습니다. 포프였습니다.
