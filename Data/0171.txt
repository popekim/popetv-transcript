프로젝트를 좀 제대로 돌렸다는 얘기를 한 적이 있어요
제가 돌리는 방식이 맞구나
이제
그
얘기를 좀 더 하려고 그러는데
프로젝트 관리나 잘 도는 팀
이라는거는
굉장히 사람들이 잘못 생각하고 있는게 많아요
뭐 워터폴이 문제가 있다
뭐 스크롬이 문제가 있다
뭐 스크롬으로 해서 성능이 높아진다
뭐 이런거 다 있는데
어찌보면은 사람들이
굉장히 엉뚱한 데서
답을 찾으려고 하는 것 같아요
프로젝트 관리가 잘 되려면 어떻게 해야 되냐
이런 메소드 를 도입해야 된다
이런 방식을 도입해야 된다 어쩐다 저쩐다
솔직히 말하면 다
쓸모없는 얘기에요
제가 팀 돌려본 걸로 지금 느끼는 건 뭐냐면
프로젝트가 잘 도는거는
솔직한 얘기로
딱 한가지에요
한가지인가?
두가지라고 딱 두가지에요
첫번째는 일단 리드가 좋아야 돼요
다른건 아무 필요가 없어요
결과적으로 프로젝트라는게 어떻게 도는거냐면
누군가가 끌고 가고
누군가가 관리를 하고
누군가가 굉장히 컨시스트하게
통일적으로 끌고 가줘야 돼요
막 이러면 어? 그래도 되고
이게 아니라
분명히 가는 방향이 있고
그 가는 방향 이상은 분명히 알고 있고
사람들이 질문을 딱 했을 때
그 가는 방향을 헷갈리지 않게
언제나 일관적으로 말해줄 수 있는
그런 리드가 필요해요
그 리드가 물론 딱 어떤 그런
뭐라 그래
테스크 업무를 봤을 때
이게 우리 팀에서 얼마가 걸리고
얘한테 주면 얼마나 걸리고
평균적으로 얼마나 걸리겠다
그리고 뭐가 더 중요하고 이 제품이 나아가기 위해선
이거는 늦게 해도 되고 먼저 해도 되고
이런 우선순위도 정해줘야 되고
그리고 각 팀원의 장단점이 있어요
얘가 어떤 걸 잘하고 어떤 걸 못하고
아니면 얘가 상황이 바뀌었을 때
얘를 어떤 걸 더 줘야 되고
그런 것도 계산할 수 있는 사람이어야 돼요
어찌보면 리드의 뛰어난 자질은
모든 거를
수치화를 할 수 있어야 된다고 저는 보거든요
결과적으로는 계산을 해야 되니까
그 모든 거를 수치화할 수 있는
그런 정도의 성향을 가지는 사람이 있어야 되고
그 두 번째는
팀원들이 그 리드를 따라줘야 돼요
사실은
그렇게 따라주려면 당연히
팀원들한테 믿음을 사야 되는 것도 사실이죠
모든 사람이 믿음을
살 수는 없겠지만
팀원의 한 70% 정도의 믿음만 사도
팀원이 진행이 돼요
그런 두 팀이 있을 때는 솔직한 얘기로
여기에 어떤 메타돌리를 던져주고
어떤 짓을 해도 이 두 팀은 살아남아요
왜냐하면 리드가 말도 안 되는 스케줄이
나면 일단 싸우고 받지도 않아요
그래서 결과적으로는
그렇게 굉장히 강한 리더십과
그 리드를 따르는 팀원들이 필요한 건데
그렇게 강한 리더십이 있는 사람들이
되게 없다 보니까 어찌 보면
리더라는 위치 자체가
그냥 뭐라 그럴까
승진하는 과정이잖아요
아 나는 요번에 뭐
과장을 달았으니 다음에 부장이 돼야 돼
팀장이 돼야 돼
팀장 될 자질이 안 되는 사람이 팀장이 돼야 뭐해요
팀은 망해지는 거지
프로젝트를 제대로 돌리기 위해
이런 메타돌리지를 도입하겠다는 이런 개소리 하는 건데
맨날 그래 봐야
솔직히 팀 제대로 도는 경우가 없거든요
그리고 그 스크럼
이라는 거가 굉장히 문제가
지금 뭐 솔직히 보면은
그렇게 팀이 제대로 안 돌 때
그
팀장을 솔직히 욕하기보다는
그 프로젝트 돌리는 메타돌리지가
문제가 있다는 식으로 까기 시작한 게
문제인 것 같아요
결과적인 문제는 따로 있었는데
다른 걸 까서 새로운 걸 도입해서 또 한번
이렇게 뭐라 그럴까 사기쳐먹자
이 느낌으로 나온 게 솔직히 스크럼이에요
그래서 뭐 워터폴로 하면은 뭐 이렇게
일정이 정해져 있고 잘 안 끝나고 어쩐다
스크럼 하면은 계속 반복을 하면서
계속 뭐라 그럴까
품질을 여러 번 돌려서 높일 수 있기 때문에
훨씬 성능이 좋은 제품이 나온다
이런 얘기를 하는데
솔직히 말하면 그거는
구라에요 왜냐하면
스크럼이 원래 이렇게 뭐 에자일
뭐 그게 이제 자동차
업계에서 나왔다고 하잖아요
그래서 자동차 업계에서 보면은 그렇게 해갖고 매년
그 새로운 그런 거를 뭐
조금씩 조금씩 발전을 시켜서
훨씬 나아졌다라고 그런 얘기를 하는데
솔직히 그거는 자동차 업계에서
프로젝트를 관리하는 거에 한 부분만 따온 거예요
그것도 그 한 부분이
실제 자동차를 만드는 과정이 아니라
자동차에 어떤 기능이 들어갈지
디자인하는 과정에서 그게
스크럼이었고 자동차 공장에서
그 부품 제조하는 사람들을 보면은
어떤 게 있었냐면
그 퀄리티 컨트롤을 하기 위해서
스크럼 같은 걸 하다보면은
그니까 뭐 중간에 뭔가 하나
잘못 부품이 들어가거나 이런 경우가 있지
자동차를 만드다 보면은 어느 순간
이렇게 요 부품을 조립하는 그런
뭐라 그러게요 노동자가 보다가
어? 이 부품이 잘못됐어 그러면
어떤 노동자든 간에
이제 단순히 조립하는 노동자잖아요
그 모든 공정을 멈출 수 있는
그런 줄이 있었어요
안던 코드라고 하던가
그런 게 있었어요 그래서 하다가
어? 이 부품이 뭔가 이상하면 걔가 딱 멈추면
공정이 다 멈춰요 그날 동안
왜냐면 부품에서 하자가 발견됐다는 거는
그 앞에 있는 차에도
하자가 있는 부품이 들어갈 수 있는 가능성이 있잖아요
그럼 걔네들은 그 앞에 있는
모든 부품을 보면서
그니까 어느 정도까지 보는 게 있겠죠
부품 하나하나가 하자가 있나 없나를 모두
조사를 하고 하자가 있으면 고치는
그런 과정이 있었어요 그래서 안동 코드라고 하는데
그게 사실은 자동차 업계의
품질을
유지했던 가장 큰
그거기도 해요 왜냐면
제품 하나 나갈 때
이게 하자가 있으면 자동차는 문제가 되잖아
사람이 죽을 수도 있고 기타 등등 그래서
그걸 멈춰놓고
퀄리티를 확인해서
보내겠다는 게 근데 우리가 소프트웨어 개발에서
어찌보면은
뭐 처음 자동차
설계와 자동차 부품
조립을 두 개를
같이 다 하는 게 지금 소프트웨어
개발이거든요 사실은 근데
정확히 얘기하면은 스크럼이라는 거 자체는 말고도
디자인을 계속 리파인하고 이럴 때 나왔어야 하는 거고
부품 조립이라는 건
굉장히 성능 아니 성능이래
그 뭐라 그럴까 품질을
보장하기 위해서 있던 거였는데
이 두 개를 이상하게 얽어놓으면서
이거를 제품이 하자가 있어도
좋으니까 내보내자
이 자체는 솔직히 자동차 업계에서 있던 일이 아니에요
절대 그래서 얘네가
솔직한 얘기로 자동차 품질이
높아진 거는 디자인을 스크럼을
했기 때문이 아니라 모든 공정을
일개의 사원이 멈출 수 있다는 거에
더 큰 거 같거든요 근데
그거를 가지고 나서 이제
무슨 스크럼을 했기 때문에 품질이
높아졌으니까 이 앞에 스크럼
하자 하자 있는 제품 내보내고
나중에 고치면 되지
뭐 이런 마인드셋은 나쁜 건 아니에요
뭐 이제 그런 게 먹히는
그런 회사도 있고 먹혀야 되는 곳도
있어요 근데
그러지 않아야 되는 곳도 있고 근데 그런 거 없이
그냥 반쪽짜리
프로젝트 관리의 반쪽만 떼와서 그게
다음 모든 워터폴의 문제를
해결한다는 식으로 어떻게 홍보를
해갖고 여전히 뭐
프로젝트 근데 뭐 워터폴 돌리고
워터폴이든 스크럼이든 돌리고
말고를 떠나서 프로젝트 망하는
비율은 똑같고 프로젝트 넣는 비율도
솔직히 똑같아요 뭐 진행 광고
하기 위해서 이 프로젝트가 제시간에
나갔더라 우기고 싶어하지만
워터폴 기준에서 보면은 역시 어떤 피처 다
잘라내고 요만큼 피처만 나갔다는 게
중요한 거거든요 워터폴을 할 때도
솔직한 얘기로 스크럼처럼 중요한 피처부터
만들고 시작했어요 그 피처를 만들지 않으면
어차피 안 나가기 때문에
그래서 워터폴을
솔직히 보면요 스크럼을 처음 주장한 사람의
얘기를 보면은 워터폴이
작은 규모의
프로젝트에서는 훨씬 더 잘 논다는 거를
인정을 했어요 사실은 근데 우리가
소프트웨어 개발하면서 워터폴이
망가질 정도의 엄청난 큰 규모의 프로젝트를
진행하는 경우가 그렇게 많지가 않거든요
그래서 대부분의 경우는
솔직히 워터폴로 하는 게 훨씬 맞아요 그리고
특히나 언제까지 뭐라 그래
딜리버리 해야 되는 그런
기능이 있는 경우에 딱히 워터폴이거든요
그럼 차라리 처음부터
플랜 잘 짜갖고 가는 게 낫지
무슨 스크럼처럼 그냥
제가 볼 때는 프로젝트 PM들이
지네 실력 없으니까 그 스케줄
못 뽑으니까 자기네 월급
워터폴 하면 굉장히 열심히 하고
트래킹 해야 되고 막 이거 해야 되거든요
PM들이 할 일이 많아져요
그거 자기 못하는 거 막기 위해서
그냥 아 우린 스크럼을 하고
스크럼은 다 이렇게 하는 거야 뭐
열심힌데 말이 안 돼요 스크럼은
일단은 뭐
첫 번째 이제 스크럼에서 말이
안 되는 게 뭐냐면
모든 멤버들이
똑같은 실력을 가지고 있다
모두 다 제널리스트다 이건 또 다음에 할 얘기인데
그건 일단 말이 안 돼요 팀 다섯
명이 있으면 그 중에 어떤 분야를 잘 안 했고 어떤 분야에
못한 애들이 있어요 물론 한 사람이 모든 걸
하게 되면 이 사람이 나갈 때
문제가 있죠 그러면 이제 제가 예전에
말했지만 페어 프로그래밍보다 좋은 법이라는
비디오에서 말했지만 두 명이
그 일을 하게 하면 돼요 이렇게
잘하게 되면 지식 트랜스퍼는 돼요
그래도 결과적으론 한 명의 스페셜리티가
있고 그 사람이 그 일을 많이 할 수밖에
없는 거예요 그리고 이제
스크럼에서 보면은 무슨 내가 일이 끝나면
중요 프라이어티에 따라서
어떤 사람이 가서 알아서 일을 가져와서 내가 그 일을
하면 된다라고 하는데
그건 또 말이 안 되는 게 어느 경우에
는 사람들이
그냥 무조건
이 일은 어떤 한 명만이 할 수 있는
일도 있어요 아니면 뭐 이 일은 얘가 하면은
두 배가 빠른 거 근데 이 사람이
다른 거에 일하고 있다고 해서
이거를 딴 사람이 가져가 갖고
그 사람이 두 배로 걸리고 얘는
또 딴 사람이 해야 될 일을 가져가서 두 배로 걸리고
그러면 효율이 두 배로 떨어지는 거거든요
어차피 그래서 그런 것도 말이
안 되고 차라리
제대로 도는 팀은 대부분이
리드가 일을 줘요 내가 딱 보고
와서 아 일이 끝났다
그럼 딱 봐서 아 얘는 지금 당장
이런 이런 일이 더 중요하긴 하지만
얘가 조만간 이 일을 끝내고 이걸 했을 때
얘가 하는 것도 훨씬 빠르니까 이건 얘한테 해주고
얘는 이걸 해야겠다 그렇게
전체적인 그림을 보고 조정을 할 수 있는 사람이 있어야 되거든요
근데 스크럼은 그거를 되게 무시하고
모든 걸 그냥 단순하게 객관적으로
그냥 이것만 따르면 된다 이런 식으로
말도 안 되는 그런
뭐라 그럴까
베스트 시나리오만 담아놓은 게 스크럼인 거 같아요
그래서 스크럼이 나쁜 건 아니에요
솔직히 스크럼을 해서 뭐 몇 번
반복을 하면서 뭐 이걸 더
좋게 받는다 이런 건 다 좋아요
그런 건 나쁜 건 아닌데
근데 이제
워터폴에서 그게 가능하고
스크럼에서 워터폴 스타일이 가능하고
근데 결과적으로 워터폴이랑 스크럼이 다른 건 솔직히 없어요
아무리 봐도 다른 건 없어요
다른 건 딱 한 가지는
어떤 리드가 그걸 돌리느냐가
전부인 거 같아요 그리고 리드가 들어오는
순간 스크럼은 솔직히 말이 안 되는 거고
리드가 뭐 얘한테 뭐해라 뭐해라
이런 거 자체가 스크럼의 기본 원칙은 다른 거라서
근데 워터폴의 기본 원칙에는
굳이 리드가 뭐해라고 주지 않아도 되거든요
아니지 뭐 워터폴도 약간
반하는 거 같긴 하네요 워터폴은
처음부터 어떤 리소스가 무슨 일을 해야 되는지 정해져 있으니까
근데 결과적으로는
제가 볼 때는 그 순간순간에
누군가가 판단을 내리고 어떤 게 중요한 일인지
우선순위 정해주고 그 일을 제대로
줄 수 있는 사람이 리드만 되면은
어떤 프로젝트 관리기법을 해도
상관없다고 보고요
그게 안 될 경우 그런 리드가 없을 경우에는
오히려 제가 볼 때는
웬만한 사이즈의 프로젝트에서는
스크럼보다는 워터폴이 잘 돌아요 왜냐하면은
굉장히 클리어한 디렉션은 있어요
니가 이번에 이 일을 하고
다음번에 저 일을 하는 굉장히
뚜렷한 지시사항이 있어요 스크럼은 그에 비해
다 풀어놓고
아무 일이나 나오면 해 말이 안 되죠
이게 어떻게 말이 돼 뭐 2주 단위로
스크럼을 만들어야 된다 2주동안
플래닝을 하고 2주동안 뭘 해야 된다
그것도 말이 안 돼요 2주동안 무슨 플래닝을 하고
그리고 2주만에
매일매일이 바뀔 수도 있잖아요
그럼 어떻게 할 거며
또 하나는 왜
자기 자체가
에스티메이션을 낼 수 없는 사람들이 있잖아요
자기가 이제 일이 얼마 걸릴지를 몰라
내가 그렇게 똑똑한 사람도 아니고
시스템도 잘 모르고
그런 경우에서 그럴 수도 없는 사람한테 그 사람한테
어 며칠 걸려 3일 그럼 3일 안에 끝내
라는 것도 말이 안 돼요 차라리 그것보다는
그 사람의
도메인 날리지도 있고
이 사람 실력도 아는 그런 리드가 딱 봐서
아 제가 3일이라고 했는데 말이 안 되고
진짜 얘가 이거 배우고 뭐하고 5일이 걸린다
이런 식으로 지정해주고 걔네한테
이것 봐 더 걸릴 것 같아
그러면 걔네가 아니 뭐 그럴 것 같으면
그런 식으로 가는 게 맞지
스크럼은 예 그래서 좀 문제가
많긴 많은 것 같아요 특히 이제
요번에 많이 돌려보나 느낀 게 그거예요
그래서 이것도
어찌보면은 그 뭐 아까 안동코드 얘기라던가
뭐 워터폴이 작은 프로젝트에서
훨씬 잘 돈다던가 이런 얘기는
제가 전에 말했던 소프트웨어 아키텍트 클래스
들어온 거거든요
그래서 그런 거는 굉장히 좋은 얘기 같아요
그래서 그거는 저도 동의하는 부분이고
하지만 이 리드가
결과적으로 팀을 이끈다는 거 워터폴
뭐 스크럼이 상관없이
그거는 제 생각이고
그리고 제가 볼 때는 그게 유일한 것 같아요 사실은
그러니까 말 그대로
어찌보면 약간 사이코처럼 모든 걸 수치화시켜 갖고
계산할 수 있는 리드
전체적인 그림 볼 수 있는 리드와
그런 리드 능력 믿고 따라가는 사람들
어찌보면 리드가 배신도 안 때려야 하는 거죠
이 사람만 따라가면은
우리가 지옥에 가더라도 살아남는다
이 정도까지 미뎀이 되는 팀이면
모든 프로젝트가 나오게 돼 있는 것 같아요
뭐 회사가 망하지 않는 한
제가 생각하는 그게 이제
프로젝트 관리법?
그리고 음
네 포프였습니다
