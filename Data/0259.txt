최근에 클라우드를 이용해서 웹 사이트 서비스를 하나 만들었어요
몇 개월 동안 만들어왔는데 제가 저번에 일했던 회사는 웹회사였지만
거기는 클라우드를 쓰질 않았고 자체적으로 서버를 관리하고 제품
릴리스하는 스페셜리스트도 있었는데 언제나 또 그렇듯이 인력 부족
모부족으로 주먹구구하고 굉장히 문제도 많았어요 그래서 제가 그
회사에서 가장 불만이었던 게 뭐냐면 실제 라이브하고 거의 비슷한 개발
환경이 없어요 서버도 있고 다 있는데 모든 걸 테스트하고 나갈 수 있는
환경이 정말 힘들었고 주먹구구 였고 그래서 결과적으로는 원칙상
은 제가 라이브에 직접 접속이 되면 안 되거든요 개발자 입장에서 고객
데이터도 있고 그러니까 제가 그때 팀 리드였고 뭐 했기 때문에 저만
특별히 라이브 접속 권한을 줘서 거기서 디버깅을 하면서 잡은 게
꽤 많아요.
메모리립도 잡았고 별별 이상한 거 다 잡았어야만 했어요 왜냐하면
프로덕션에 있는 실제 데이터를 개발 도중에 못 쓰니까 저는 이제
뭐라 그럴까 이제 저가 다른 걸 할 때는 클라우드 쪽으로 관계했던
저는 그 릴리스 스페셜리스트를 제가 제가 하기 싫고 일단은 시간
낭비라고 생각하고 전 개발만 하고 싶으니까 그렇다고 그런 사람을
쓸 돈도 있는 것도 아니고 결과적으로는 클라우드를 써야겠다 생각한 거죠
.
그래서 저는 애저를 썼어요 마이크로소프트 애저
는 그 이유는 전에 말했을 것 같은데 굉장히 연동이 쉬워요 비주얼
스튜디오하고 연동이 쉽고 심지어 는 마이크로소프트에서 공짜로 주는
리포 있죠 비주얼 스튜디오 닷 컴 거기에서 버튼하러 디플로이
까지 되기 때문에 저는 그 모든 에코 시스템이 좋아서 했어요 가격
면으로 보면은 당연히 애저가 개인 서버를 돌리는 것보다는 가격은
높아요 왜냐면 근데 문제는 저는 그 하나 서버를 갖고 있어야 돌릴
만한 그런 트래픽이 안 오고 실제 온다 치더라도 그거를 확장이나
줄이는데 그 서버 관리하는 걸 너무 싫은 거예요 역시 개발만 하고
싶어서 그래서 애저가 굉장히 좋은 선택지였고 뭐 애저 그리고 아마존
ec 클라우드 그리고 구글을 비교 한다면 일단 구글은 제가 볼 때는
거의 뒤쳐졌죠 원래 구글이 2위 였는데 지금 3위에요 애저가 워낙
빠르게 치고 올라왔고 지금 2위 지만 1위는 굉장히 강한 게 마이크로소프트
에요 아마존이 1위고 굉장히 커요 걔네가 절반 이상은 가지고 있을
것 같아요 사실은 그래서 저는 뭐 애저 쓰는 이유가 아까 말했듯이
마이크로소프트하고 모든 제품이 연동이 잘 돼서 썼고 그리고 ui
가 아마존에 비해 굉장히 깔끔해요 아마존은 얼마 전에 학교에서 머신러닝
할 때 다뤄봤는데 ui라든가 사용성 에서 봤을 때는 정말 애저가 깔끔
하게 나온 건 있어요 뭐 그걸 떠나서 그리고 제가 애조를 개발하는 도중에
굉장히 놀랐던 게 두 가지가 있어서
그 얘기를 하려고 해요 제가 아까도 말씀드렸듯이 저는 라이브하고
똑같은 개발 환경이 좀 어려웠다 라고 얘기를 했잖아요 일단 애저
는 자기 라이브 인스턴스 가서 버튼 하나 누른 것만으로 리모트
디버깅을 킬 수가 있어요 그러면 내 비주얼 스튜디오 내 컴퓨터에서
서버로 곧바로 디버그 어택치해서 디버깅도 돼요 그거는 뭐 원래
하려고 했던 얘기는 아닌데 되니까 말씀드린 거고 일단 제가 애저를
쓰다 보니까
스토리지 같은 것도 애저에 있잖아요 예를 들어서 뭐 만약에 블랍 스토리지
라는 게 있다면 파일 같은 거 스토리지 하는 건데 클라우드로 되거든요
그러면 그 api 써갖고 그 sdk 써갖고 거기 저장이 되게 하는데 어 이거
하면은 난 로컬에서 어떻게 디버깅 하지 인터넷 없으면 그 생각을 많이
했어요 근데 재밌는 게 마이코 소프트는 역시 소프트웨어 회사라서
그런지 그런 걸 잘하더라고요 에뮬레이터를 줘요 로컬에서 에뮬레이터를 돌릴
수가 있어요 스토리지 에뮬레이터를 돌리고 그리고 거기에 스토리지
에다가 그냥 디벨로퍼먼트 모드다 그러면 서버 안 때리고 내 하드에
하드에 그 내 에뮬레이터에 저장이 되더라고요 그리고 뭐 sql 같은 경우는
이미 예전부터 있었죠 sql을 api를 쓰는 법도 있지만 그 내부적 로컬
sdk sql 만들어갖고 거기서 저장되는 법이 옛날부터 있었고 재밌는 거는
얘를 로컬에서 하다가 올리잖아요 그럼 올리면은 그 내가 서버 디플로이
한 인스턴스가 있잖아요 그럼 거기 올릴 때 키를 바꿀 수 있게 해줘요
라이브 키로.
그리고 앱 세팅 같은 경우도 클라우드 그걸 써놓으면 웹컴픽에서 읽어오
거나 아니면 그 앱 세팅 ui 그냥 웹 ui 가서 저장한 앱 세팅을 읽어올
수 있게 하고 그래서 그 두 가지로 굉장히 로컬하고 라이브하고 거의
비슷한 환경을 쓰는 데 도움을 많이 받았고 그래서 일단은 애조에서
제가 여태까지 썼던 모든 서비스 는 로컬에서 인터넷 없이도 돌았어요
그래서 저는 그게 일단 가장 걱정거리 였는데 클라우드 가는데 그거 좋았
어요.
이 두 번째는 제가 원래부터 기대를 안 했는데 굉장히 발견하면서 굉장히
감동했던 거예요 디플로이먼트 슬롯이라고 하는 건데 디플로이먼트
슬롯이 뭐냐면 예를 들어서 저희는 서버가 라이브가 있잖아요 이걸
프로덕션이라고 해볼게요 그럼 프로덕션이 있고 보통 여기 세팅
을 다 해요 이 과금제를 만들어서 이 과금플랜을 만들어요 이 과금
플랜을 만들고 내가 서버비를 내야 되니까 이 과금플랜 안에 여러 개의 웹사이트를 넣을 수가 있어요.
이 과금플랜 안에 여러 개의 웹사이트를 넣을 수가 있어요.

이 과금플랜 안에 여러 개의 웹사이트를 넣을 수가 있어요.
종류따라 다르지만 저는 스탠다드로 했기 때문에 그게 돼요.
그럼 여기다가 제가 사이트가 두 개가 있거든요 같이 연동이 되는
이 사이트 사이트를 띄워놓고 그 밑에 뭐 다른 여러 가지를 넣는 거죠
그 사이트가 두 개가 있어요 그럼 만약에 이 사이트가 두 개 돌다가
트래픽이 많이 와요 그러면 핸들을 못하잖아요 그럼 자동으로 하나를
더 만들어라 사이트 인스턴스를 그렇게까지 만들 수가 있어요 그러면
자동으로 뭐 하나가 여러 개도 가능 해요 그러면 뭐 늘어났다 줄어났다
제 마음대로 하는 거예요 트래픽 따라.
좋죠.
근데 또 하나의 문제는 뭐였냐면 아 이건 좋아 근데 디플로멜 슬롯이
여기 들어오는데 제가 걱정했던 거는 그 로컬에서 이제 디버그 하는
환경도 있지만 서버에 올려놓고 테스팅 하는 환경도 필요하잖아요
그럼 저는 처음에는 아 이 테스팅 하는 서버 따로 만들고 프로덕션
만들고 이걸 또 나중에 끝나면 이렇게 올리고 해야 되는구나 그럼 뭐
뭐 플랜도 따로 만들어야 되고 막 이런 고민을 많이 했거든요
그게 아니에요 아까 말한 플랜 하나 있죠 거기에 프로덕션이 있었죠
사이트가 두 개가 있잖아요 첫 번째 사이트만 골라서 얘기해 볼게요
첫 번째 사이트가 있어요 그러면 이 안에 디플로멜 슬롯이라고 만들
수가 있어요 다섯 개까지인가 이게 뭐냐면 아까 프로덕션 있죠 그 밑에
스테이징 뭐 이렇게 아니면 그 밑에 대부를 하나 만들어 놓는 거예요
그리고 그럼 이거 하나 자체가 전혀 그 뭐랄까 다른 인스턴스가 하나
되는 거예요 그냥 제가 업로드할 때는 이 프로덕션에 올릴 수도 있고
대부에 올릴 수도 있어요.
그럼 대부에 올리면.
이 url은 원래 프로덕션 url 있죠 그거 마이너스 대부 해갖고 들어가요
그럼 거기다 테스트 할 수 있는 거예요 똑같은 그 인스턴스 환경에서
그리고 이 인스턴스하고 이 인스턴스 간에 다른 앱 세팅 아까 말했던
것도 가능하고 공유도 가능해요 그리고 또 재밌는 거는 이게 테스트를
많이 했잖아요 그럼 또 하나 만들어 프로덕션 바로 간에 전해가는 뭐
스테이징 그 인바이러먼트를 디플로멜 슬롯으로 만들어서 모든
거를 프로덕션 데이터에서 테스트 할 수가 있어요.
그 다음에 그냥 이 두 개를 스왑이 가능해요 아까 테스트 했으니까
이 스테이징에서 이거 준비됐으니까 그냥 나가요 그러면 이 프로덕션하고
스테이징을 스왑하면 그게 곧바로 프로덕션으로 나가요 보면서 야
내가 정말 고민 많았던 부분을 아예 해결해 주더라고요 그래서 아 정말
얘는 잘했구나 그 생각이 들었어요 그리고 또 하나 세팅으로는 어떤
슬롯에 들어가면 자동으로 이게 프로덕션을 가게 하는 것도 있어요
그러니까 그거는 예를 들면 스테이징 에서 다 테스트 한 다음에 끝났다
.
이제 디플로이 해야겠다 근데 내가 매뉴얼을 스왑 안 하고 그러면
은 이 스테이징 거를 다시 올리는 걸 딴 데에다가 뭐 프로덕션 레디
라고 하던가 프로덕션 스왑이라고 하던가 거기 올리면 다 올라가는
순간 알아서 바꿔줘요 보면서 아 이렇게 좋은 환경을 만들어 놨구나
예전에 전 회사에서 할 때는 막 뭐 기껏해 만들어봐야 프로덕션
하나 있었고 대부 하나 있었고 스테이징 은 다 작동도 안 했고 세팅을 제대로
안 해 놓으니까 뭐 db 세팅 다 제대로 해야 되는데
이거를 사람은 별로 없는데 서비스 는 엄청 많이 나가야 되지 그러니까
세팅을 다 할 시간이 없는 거예요 그래서 막 여기서는 뭐 db가 안 되니까
프로덕션 나가서 보라는 이런 얘 기도 많았고 여기는 이 서비스가
안 돼서 나가라고 그런 것도 많았 고
근데 디플로멘트 슬라이드 이용하니까 정말 간단해지더라고
매뉴얼 할 관리 안 해도 되고 그리고 모든 인스턴스가 그냥 뭐랄까 어쩌면
샌드박스잖아요 그러면 이제 뭐 여기에 무슨 프로그램 설치하고
이런 고민을 좀 드려도 되고 그래서 .
그래서 제가 여태까지 애쥬어를 애쥬어 애쥬를 쓰면서 느낀 거는 굉장히
만족스러워요 개발 프로세스에 맞게 되게 잘 돼 있고 특히 웹 디플로이
같은 거 하는데 잘 돼 있어요 그래서 지금 이제 클라우드를 새로 한 번
쓰려고 하시는 분들은 한 번은 보셨으면 좋겠어요 이런 애쥬어를 좀 봐서
애쥬어에서 이렇게 좀 얼마나 쉽게 이런 것도 가능한지 정말 만족스러
요 비주얼 스튜디오에서 오른쪽 버튼 눌러갖고 애쥬로 곧바로 퍼블리시
도 가능해요 사실은
그래서 일단은 강추 저는 이제 asp.net으로 웹을 주로 개발하기 때문에
뭐 그 이유를 묻는다면은 이걸로 만드는 게 가장 빨라요 그게 전부
에요 저는 쓸데없는 데 시간 들 이기 싫어요 뭐 이거 설치하고 저거
설치하고 그거는 나중에 정말 무슨 서비스가 대박이 나서 정말 트래픽
많이 몰려오고 그 서버 비용이라던가 뭐라는 거를 아껴야 될 그런 때가
있으면 그때 그런 걸 다 고민하기로 하고 그전에는 무조건 개발을 위주로
하고 그 다음에 개발 외의 것을 간단하게 해주는 서비스로 가고
저는 그게 애쥬어였어요 그리고 asp.net이었고 이 정도로 하고 네 포프
였습니다
