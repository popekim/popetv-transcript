예 안녕하세요 포프입니다
음..
이 비디오를 이제 그분이 보시고 계실지는 모르겠는데
예전에 이제
뭐..
자기말로는 이제 사당동에
취주였나 아니야
사당동에..
뭐 있어요 저는 게임개발자분 중에 하나신데
옛날에 KGD에서 만났던 분인데
이제 리키씨라고
3D리키라는 아이디어를 되게 많이 썼고
성함이 박준재씨 같고
되게 좋은 차
많이 모으고 다니시던 유명하신 분인데
그분이 예전에
아 뭐 자기 스튜디오도 가지고 있죠
그분이 예전에
저한테 했던 말이 있어요 뭐냐면
개발.. 아니 그니까
컴퓨터 관리를
잘하는 것도 개발자의 자질이란 말을
한 적이 있어요 저한테
그때 이후로 굉장히 그 말을 깊게
새겨듣고
맞다는.. 맞다고 얘기를
아니 맞다고 생각을 하고
그리고 되게 오랫동안 맞다고 믿고 지내왔고
저도 제 컴퓨터에
대한 관리는 되게 잘해요
웬만한 IT 애들보다
제가 잘해요
저는 그게 당연하다고 믿고 살아왔는데
그게 아닌 사람도 보긴 봤어요
당연히
예전에는 아 뭐 아닐 수도 있구나라고 넘어왔는데
제가
그런 사람들을 되게 오랫동안 봐오고
이제
그런 사람들을 몇 년 동안 알아왔고
그리고 이제 새로 만난 사람들 중에서도
경력은 꽤 됐는데
자기 컴퓨터 관리를 되게 잘하는 사람이
있고 자기 컴퓨터 관리를
되게 못하는 사람이 있고
이렇게 막 표본을 막 뽑다 보니까
확실히 좋은 개발자와
자기 컴퓨터 관리를
잘하는 거하고는 상관관계가
보여요 그게 되게 재밌어요
그래서 컴퓨터 관리라는 게
어떤 거냐
예를 들게요
이거는 회사에서 일할 때도 똑같아요
회사에 일하는데
몇 년을 똑같이 일하는데
어떤 애는 컴퓨터
뭐 하드웨어가
나가는 건 어쩔 수 없고
소프트웨어가 꼬이지 않고
그냥 무난하게 한 몇 년을 그냥 일하는 애가 있고
한 6개월?
3개월마다 한 번씩 뭐가 꼬여갖고
뭐 이것도 안 들고 저것도 안 들고
무슨 여기서 이상한 에라가 나고
그래서 다시 윈도우스를 깔아야 되거나
뭐 다시 프로그래머를 깔면서
하루를 보내거나 이런 애들이 있어요
근데 그게 그냥
단순히
재수가 없다가 아니라 그냥
그런 사람들이 있어요 그러지 않은
그런 사람들이 있고
근데 이거를 어떻게 보면 되는 거냐면
저는 그 시간이 아까운 거예요
일단은 제가 3개월에 한 번씩
이제 하루를 날리면서
뭔가를 깔아야 된다는 거 자체가
그럼 하루 종일 저는 이제
다른 컴퓨터가 있지는 않은 이상 할 수 있는 게 없잖아요
그러면 그런다고 회사에서 돈을 안 주지는 않을 거고
돈은 받아갈 거고
그러면 아 좋은 건가 이건?
그러면 하루를 놀면서
프로젝트 진행이 안 되면서
저는 그냥 놀고 있다는 그게
그냥 싫어요 물론 이 말을 하면 이제부터 열심히
컴퓨터를 뽀개하면서 노실 분이 있을 것도 같은데
근데
정말 잘하는 개발자들은
그 관리가 되더라고요
그 관리가 단순히
뭐 이제
소프트웨어를 깔 때도 자기 소프트웨어를 깔기도 하잖아요
그러면 아 이런 소프트웨어를 깔면은
무슨 위험이 있겠다라던가
아니면은 뭐 소프트웨어를 깐 다음에
잘 지우는 습관이 있다거나 필요 없는 걸
주기적으로 정리를 한다거나
아니면 소프트웨어를 깔았는데 무슨 문제가 생겼을 때
이걸 스스로 고칠 수 있다거나
뭐 이런 여러 가지
것들이겠죠 아니면은
뭔가 이상하게 도는데 아 이제 이것저것
CPU 그래프를 보든 메모리 그래프를 보든
하드웨어 I/O 그래프를 보든
이게 문제라는 걸 깨닫고 이런
프로세스가 문제라는 걸 깨닫고 그런 거를 뭐
적당히 죽여주거나 아니면은
습관 자체가 이제 뭐라 그럴까
트러스트 할 수 없는
그런 소스 그러니까 알 수 없는
웹사이트에서 다운받은 프로그램은 절대 안 깐다거나
이런 여러 가지 것들이 있죠
그래서 이거는 어찌 보면은 뭐
보안 쪽에서 이제 회사 보안 쪽에서
이상한 프로그램 못 깔게 하거나
이런 거하고도 관련이 있을 수도 있는데
그런 걸 잘하는
사람들이 확실히 있어요 그리고 그런
그런 걸 잘하는 사람일수록 그냥 컴퓨터가
다운돼서 일을 못한다 뿐만이 아니라
제가 볼 때는 코드를
관리할 때도 그런 것 같고 무슨
버그를 고칠 때도 그런 것 같아요 이건
제가 얼마 전에 말했던 저수준
얘기할 때도 똑같고 뭐 STL에서
비슷하게 얘기한 것도 그렇고
결국에는
그냥 뭔가 쓰는데 이게
마법처럼 돈다 이게 아니라
이게 내가 지금 쓰고 있는 하도에 어떤
영향을 미친다까지 생각을 하는 거겠죠
그래서
제가 이제
지금 학교에서
애들을 가르치잖아요
그래서 거기 갔다가 이제 거기서 이제
선생을 하고 있는 사람을
또 한 명을 만났어요 중간에 저한테 물어보는 거예요
자기가 요번에
자바로 하는 무슨 무슨 코스를 가르치는데
두 갠가를 가르치는 것 같아요 그래서
하나에서는 이런
이게 뭐
이거를 깔아쓰고 하나에서는 이 버전을 깔아쓴다
이 버전이 달라요 쓰는데
이거를 깔면 여기서 에라가 나고
여기서 에라가 난다 그러는 거예요 그래서
어떻게 고칠지 모르겠다는 거예요 경력이
10년 20년이 된다는데
저도 자바를 별로 많이 안 했지만
결과적으론 JDK
홈인가 자바 홈인가 이걸 정의해 줘야
되잖아요 그럼 그거를
정의를 해줬는데 다른
프로그램에서는 이제 버전을 최소한
64비트를 아 64비트 32비트 문제였다
64비트를 요구하니까
뻑이 나는 거고 그래서
이쪽을 하면은 딴 게 뻑이 나는 거거든요
그래서 이거를 전혀 다른
그 환경 변수로 정의해 줄 수가
없다면 결과적으론 쓸 때마다
환경 변수로 바꾸는 수밖에 없어요
아니면 뭐 버추얼
머신을 띄우던가
근데 그냥 전혀 못 고치고
있는 거예요 그냥 그래서 보면서
아 저거는 솔직한 얘기로
되게 단순한 셋업이 아닌가
그러면 저것도 안 하라면서
경력을 10년 20년 쌓을 수 있는
업계는 대체 어딘가
라는 생각을 되게 했어요 물론 제가 이 얘기를 하면은
이제 댓글에 어떤 업계가
그런 일이라고 쭉 달릴 걸 예상을 하는데
...
...
결국에는 그냥 똑같은 거 같아요
그니까 자기 컴퓨터를
쓰면서도 언제나 하드가 남는
사람이 있고 자기 컴퓨터를 쓰면
언제나 하드가 모자란 사람이 있어요
거의 똑같은 일을 하는데도 불구하고
그리고 똑같은 컴퓨터를 써도
모든 게 이제
뭘까 되게 오그나이제이션이
잘 돼 있어갖고 폴더에 잘
잘 집어넣고 어디에 뭐가 있는지 아는 사람이 있는 반면에
그냥 그런 게 없어갖고
백업만 몇 테라바이트를 하는 사람이 있어요
그냥 어딘지 뭐가 모르고 어떻게
정리할지 모르니까 무조건 백업을 한다는 개념으로
근데 확실히 코드를
깔끔하게 짜고
유지보수를 잘한다는 것도 그런
정리정돈하는 습관하고 관련이 있거든요
그러면 그 정리정돈하는 습관이 여전히
컴퓨터를 잘 유지한다는
거하고도 관련이 있을 것 같고
그래서 저는 그게 다 관련이 있다고 봐요
그냥 기본적인 개인의 성향이
이것저것으로 나오는 거라고
그래서
...
결과적으론
...
...
...
...
...
...
...
...
...
...
....
...
...
...
...
...
...

얘 컴퓨터는 제대로 돌아도 '아 그거 그때 고치면 돼 그런 건 큰 문제가 아니야' 라고 생각하는 걸 수도 있어요
아니면 얘 컴퓨터는 잘 돌아왔는데 다른 컴퓨터는 전부 다 제대로 안 돈다 그런 경우 있잖아요
내가 프로그램을 잘못 갈아 두거나 이러면
그런 경우도 '아 그때 고치면 되지 신경 안 쓴다' 이 개념이에요
그런데 이거는 우리가 그냥 게임 회사고 어찌 보면 웹 회사고 이런 데서는
'아 뭐 고장 나면 패치하면 되고 아 뭐 누구 죽게 하겠어' 이 개념이라 그런 거고
이게 뭐라 그럴까 되게 좀 목숨하고 관련 있는 그런 업종?
예를 들어서 뭐 예를 들면 보잉 같은 회사 아니면 뭐 뭐 뭐 군사 이런 게 뭐 프로그램 짜는 회사
이런 데 가면은 이게 완벽히 바꿔요 완벽히 바껴요
그리고 이게 어찌 보면은 그 뭐라 그럴까 자기 컴퓨터 제대로 관리 못하고
약간 꼼꼼하지 못한 사람들?
그러니까 한마디로 자기가 하는 거를
되게 잘하시는 그러니까 일을 시키며 하는데
자기 거를 완벽하게 전문가처럼 누구보다 잘하는 사람이 아닌 사람들
뭐 흔히들 코드 몽키라고 하죠
그 코드 몽키들을 위해 이제 프로세스를 만들어주죠
그래서 프로세스라는 게 나오는 이유가 주로 그거예요
아 코드 몽키들이 실수 못하게 하자
그럼 어떤 식으로 도냐면 그런 회사는 일단 내가 깔 수 있는 프로그램이 없어요
컴퓨터에 아무것도 프로그램 못 깔고 똑같은 프로그램을 누군가 깔아줘요 컴퓨터에
아니면은 어떤 경우도 있냐면 컴퓨터는 있고 그 안에 가상 머신을 띄워줘요
그리고 그 가상 머신 이미지가 공통으로 쓰는 이미지고 거긴 아무것도 못 깔아요
깔고 싶으면 정식으로 올려서 다 허가 받고 업데이트 다 동시에 한 다음에 모든 걸 똑같이 올려버려요
그리고 더 재밌는 거는 코드를 막 짜다 보면은 이런저런 것도 깔리고 뭐 하드도 좀 이렇게 이것저것 들어가고 그럴 수밖에 없잖아요 아무리 안 깔아도
그러면 매일마다 가상 머신을 이제 싹 지워줘요
새로운 이미지를 받아서 새로운 가상 머신을 띄우고 거기다 코드를 짜고 코드를 넣은 다음에 또 가상 머신을 리부트해서 새로 가상 머신을 만들고 또 코드를 짜요
그러면은 이 코드 몽키가 할 수 있는 일은 그냥 프로세스가 잡혀있고 내가 좋아하는 프로그램이 뭐건 그게 내 성능을 더 높이든 내 효율성을 올리든 상관없이
모든 사람에게 맞는 모든 사람들이 실수를 가장 덜 하는 프로세스를 만들어 놓고 거기서 코드를 열심히 짜는 거예요
그게 프로세스에요
이와 같은 똑같은 비슷한 얘기를 들어드리면 이제 커피를 만드는 걸 되게 이제 장인스러웠게 만드는 사람도 있더라고요
한국 가면은 점점 이렇게 커피를 가져다가 직접 로스트도 하고 뭐 손으로 갈아서 물은 이렇게 이렇게 뿌리면서 그럼 커피 향이 좋아지고 어쩌고
그 사람들은 그 모든 프로세스를 자기가 따라하는 것도 있겠지만 보고 배우고 결국엔 자기 프로세스라고 실수를 할 여지도 많잖아요 뭐 온도를 잘못 맞추다거나 뭐 로스트를 잘못한다거나 뭐
그런 반면에 스타벅스 같은 그렇게 완벽히 정형화된 프로세스가 있는 곳은 거기서 이제 별도의 바리스타 교육을 시켜주는지 모르겠지만 있어도 되게 짧을 거예요
그냥 아 뭐 아메리카노로 만들 때면은 이 기계를 딱 넣으면 이만큼 갈아 나오고 그럼 이걸 꼽은 다음에 이걸 누르면 내려오고 그 다음에 물을 여기까지 부어서 주면 된다
근데 솔직한 얘기로 뭐 뭐 제가 그분들이 얼마나 많이 돈을 받으신지 모르겠지만 스타벅스 이런데서 커피 바리스타를 내리시는 분들이 많으시니까
장인스럽게 커피를 내리는 사람들보다 돈을 많이 받을리도 없고 어디 가서 인정을 받을리도 없잖아요 동종의 비슷한 프로세스가 있는데 옮겨 다닐 뿐이지
근데 문제는 그 프로세스에서 익숙해지는 시간이 되게 짧고 그렇기 때문에 굉장히 많은 사람이 쉽게 할 수 있는 일이다 보니까 경쟁력이 적어지는 거죠
저는 코드몽키도 그렇다고 봐요 이제 저희가 코딩 교육이 정규화가 된대요 정규화가 되면은 엄청난 많은 수의 코딩을 할 수 있는데
할 수 있는 사람이 나올 거에요 그리고 저희가 이제 80년대 보면은 그때 워드 같은 거 못 치는 사람이 많았거든요
그래서 워드만 잘 쳐도 굉장히 인정을 받던 시대였어요 근데 지금은 워드도 누구나 쓰고 엑셀도 쓰고 파워포인트도 쓰거든요
그리고 자잘한 이런 코딩도 해요 엑셀 같은 데서 저는 이제 몇 년이 될지는 모르겠지만 그런 사무직에 있는 사람들이 뭐 그 환경이 엑셀이 될지 뭐가 될지는 모르겠지만
그렇게 간단한 생활 코딩 정도로 할 수 있는 실력이 될 거라고 생각합니다.
그러면 그 정도 실력이 되는 사람들은 전부 다 그냥 당연한 생활 기술이 되는 거에요 누구나 가지고 있어야 되는 기술
그렇게 되면은 그 수준에 머물러 있으면 역시 경쟁력이 없다는 거죠 그래서 그냥 프로세스가 잡혀있는 거에서 만족을 느끼고
그 프로세스를 어떻게 더 낮게 만들어야 될지도 모른 채 아 나는 내가 주어진 요만큼의 코딩만 하면 돼 에이 뭐 더 열심히 할 것도 없지
내가 다른 사람 관리할 일도 없지 내가 프로세스를 만들어서 다른 사람을 더 좋게 만들 필요도 없고 이 프로세스를 개선시켜서 내가 해야지
내 효율을 늘릴 필요도 없지 라고 생각하시는 분들은 그냥 거기에 머물러 있을 뿐이고 저는 경쟁력이 점점 없어진다고 봐요
그래서 어찌 보면은 코드 몽키와 프로세스와 그 모든 게 합쳐져서 이걸로 보면은 처음에 말했던 것처럼 자기 컴퓨터를 관리를 잘하는 사람이 뭐라 그럴까 더 훌륭한 개발자일 가능성이 높다고 저는 봐요 확실히.
그리고 어찌 보면은 저는 이런 걸 잘하는 사람이 더 훌륭한 개발자일 가능성이 높다고 저는 봐요 확실히.
그래서 어찌 보면은 그걸 잘 못하시는 분들이라면 예를 들어서 뭐 윈도우스 깔지도 모르고 윈도우스에서 뭐 드라이버를 어떻게 지울지도 모르고 이런 사람들이라면은 그냥 컴퓨터는 매일 만지는 거니까 그런 문제가 날 때마다 본인이 그걸 차근차근 고쳐나가면서 그런 자세를 좀 더 익혀가는 것도 좋은 것 같아요.
왜냐면은 이거는 뭐 컴퓨터가 고장났다고 무서워하는 것 자체가 좀 저는 아니라고 보거든요.
뭐 고쳐보다가 안 되면 남한테 도움을 요청해야 되는데 그냥 아 컴퓨터 모르니까 남이 해줬으면 좋겠는데.

아 컴퓨터 모르니까 남이 해줬으면 좋겠어 라는 식으로 손을 빼버리는 거.
이런 얘기했을 때 어떤 친구가 저한테 그랬어요.
아 그거는 자동차 정비랑 똑같지 않냐고.
옛날에는 누구나 자동차 정비를 적당히 했지만 요즘은 그냥 자동차 정비를 정비소에 맡기지 않냐 그런 얘기를 하거든요.
근데 저는 그거랑 좀 다르다고 생각을 하는 게 자동차 정비라는 거는 뭐라고 해야 될까.
근데 저는 그거랑 좀 다르다고 생각을 하는 게 자동차 정비라는 거는 뭐라고 해야 될까.
제가 그 쪽 분야에 없어서 그런지도 모르겠지만.

그냥 개인의 삶을 사는 데 필수적인 요소는 아니라고 생각이 돼요.
그냥 개인의 삶을 사는 데 필수적인 요소는 아니라고 생각이 돼요.
그냥 자동차 정비는 말 그대로 전문가한테 맡겨 되는 게 아닌가
그냥 자동차 정비는 말 그대로 전문가한테 맡겨 되는 게 아닌가

내가 굳이 해야 되는 걸까?
아니면은 오히려 그 생각 드는 것 같아요 예전에는 자동차가 훨씬 간단했다고 하더라고요
아니면은 오히려 그 생각 드는 것 같아요 예전에는 자동차가 훨씬 간단했다고 하더라고요
모르겠어요. 그 정비사가 우리가 말하는 엔지니어가 되는 건가?
프로그램 엔지니어 정말 잘하는 사람들?
그리고 그냥 아니면 이제는 정비를 하는 사람들이
개인적인 정비를 하는 사람들이
내가 정비하는 시간보다 그 사람한테 맡기고 돈을 주는 게 훨씬 빠르다고 생각하는 건가?
아니면 제가 결과적으로는 제가 정비를 할 줄 모르면
저한테 오는 큰 불이익이 있느냐는 생각을 하는 거죠 솔직히
저 개인적으로는 그냥 그거를 연결하기가 되게 힘들어요
뭐 예전 같은 경우에는 전화기도 없었고 핸드폰도
그러면 자동차가 뻗었을 때 어떻게든 정비를 해서 움직이게 해야 됐다?
그런 거는 이해가 되는데 이제 그런 상황도 적어지고
근데 프로그래머가 컴퓨터가 고장났을 때마다 남한테 가서 야 이거 고쳐주라고 한다
모르겠어요
그게 과연
그 자체가 저는 이해가 안 되는 거죠
솔직히 얘기하면 내가 쓰는 컴퓨터를 내가 이해를 못 하는데
어떻게 여기서 뭐가 도는 걸 확인하고 문제가 생길 때 찰 수가 있지 라는 그런 생각이 드는 거죠
알면 알수록 내가 볼 수 있는 게 많아진다는 장점이 있으니까
근데 이거를 무조건 남한테 맡긴다면 저는 그거를 못 볼 것 같아요
아니 그 사람이 고치는 걸 보고 아 이런 거구나 하고 배워서 또 새로운 걸 배우는 경우도 있는데 당연히
세상 모든 그러니까 컴퓨터에 관련한 문제를 남한테 맡기는 프로그래머다
솔직한 얘기로 되게 의심스러울 것 같아요 저 개인적인 입장에서
그리고 자동차 얘기로 다시 돌아가면은
카레이서 정도 되면 자동차를 고칠 수 있지 않을까요?
완벽히 완벽한 정비 공정 정도로 못 고치겠지만
저는 그렇게 생각을 하거든요
왜냐면 저도 컴퓨터를 만질 때 제가 컴퓨터를 못 고치는 부분이 있어요
하드웨어 용접하거나 이런 거 하면은 그거는 저도 못해요
남조하고 맡기거든요
그런 식으로의 한계는 있을 것 같은데
너무 한계를 낮게 잡는 프로그래머들이 있는 것 같아요 그런 부분에서
그래서 컴퓨터를 이제 뭐랄까 관리를 잘 못하시는 분들은
그냥 그런 자세가 코드에서 나올 거고
자기 이제 업계에서 일할 때도 나올 거라고 생각하시는 게 좋은 것 같아요
그러면 결과적으로 오늘 했던 얘기는 저번 저번에 했던 얘기랑 다 똑같은 얘기예요
STL 얘기도 똑같고 뭐 뭐 뭐지?
로우 레벨 얘기도 똑같고
그래서 자기 컴퓨터를 자기가 좀 고치자?
이렇게 말하고 끝내야 되나?
모르겠어요 포프였습니다
