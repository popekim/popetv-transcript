마이크로소프트가 자마린을 샀다는 것부터 얘기해야 될 것 같아요
자마린이 뭐냐면 아시는 분은 아실 텐데 c#으로 코드를 짜면
모노 플랫폼 뒤에 이용하고 바이너리 인젝션 이용하고 이래서
안드로이드 폰이나 ios 폰 그리고 윈도우스 유니버셜 앱이면
윈도우스 10에서 다운로드 받을 수 있는 데스크탑 앱하고
윈도우스 폰으로 쓸 수 있는 앱하고 윈도우스 폰 8.1도 되고요
그거용으로 다 바이너리를 구워주는 그런 거예요
그러니까 코드 한 번 짜고 멀티플랫폼 지원한다는 개념으로 시작한 게 자마린이고
이제 뭐 유니티 쓰시는 분들은 아시겠지만 유니티로 하면
이제 뭐 안드로이드도 되고 뭐 ios도 되고 이러잖아요
그것도 기본적으로 모노 프레임워크 거든요
그래서 기본적으로 거의 같은 개념이죠
그래서 이게 왜 좋은 소식이냐면
제가 최근에 이제
안드로이드
코딩을 좀 할 일이 있었어요
이제 자바로 해서 이제 막 거기서
자바라는 프로그래밍 모델 자체가 워낙 발전이 없는 모델이라고 해야 되나요
지금 현재로선
굉장히 간단하게 처리할 수 있는
무슨 뭐 에이싱크로스하게 무슨 뭐 띄우고 뭐 하고
다시 콜백 받아서 뭐 하는 이런 것들이 굉장히 옛날 방식이에요
그래서 그거를 제대로 짤 수 있는 프로그래머가 얼마나 있는지도 모르겠고
기본적으로 이제 모바일 쪽 프로그래머들이
보통 그렇게 뭐 스레딩이나 이런 걸 확실히 이해하고 하시는 분들보다
안 그런 분들이 아직은 좀 많기 때문에
이런 거는 그냥 정말 성능을 완벽하게 신경 쓰지 않는 거면은
프로그래밍 언어 쪽에서 쉽게 지원할 수 있어야 된다고 생각을 하거든요
뭐 어떤 의미에서는 자바스크립트에서 막 이렇게 막
람다처럼 펑션 녹았고 막 콜백 부르는 이런 것도 그런 모델 중에 하나였고
씨샵도 그걸 되게 지원을 잘해요 사실은 씨샵 에이싱크도 굉장히 괜찮고
왜냐면 씨샵은 마이크로소프트 자체 언어기 때문에
브레이킹 체인지가 있어도 지네가 그게 옳다고 생각하면 해버리더라고요
그래서 저는 그게 되게 좋다고 생각을 하거든요
씨샵에 또 이제 비주얼 스튜디오라는 엄청난 툴도 있고
거기에다가 이제 사마리는 마이크로소프트 회사가 아니었는데
그 씨샵 언어를 자기네들이 이제 해석을 해서 그 밑에 있는 닷넷 프레임워크라고
이제 그냥 뭐 거의 버추얼 머신이라고 생각하시면 되는데
그걸 도는 거를 이제 모바일 용어로는 바이너리 코드로 인젝션을 했고
최종 네이티브로 구워내겠다.
이런 개념으로 해서 만든 거고
굉장히 오랫동안 주 있었어요 사실은 한 몇 년 있었던 것 같아요
3~4년 넘은 것 같은데
이 얘기를 처음 들었을 때는 솔직히 사마린 플랫폼이 그렇게 완성도가 높지 않았고
뭐 좀 뭐라 그럴까
그냥 쿨테크 정도였던 거에 비하면
지금은 굉장히 머추어 했고요
그리고 제가 얼마 전에 실제는 안드로이드에서 막 하고
막 그 기기간 호환성 하다가 짜증나서 사마린으로 돌려버리자
그래서 사마린으로 해보고
'아 이거 진짜 개멀이고'
그런 부분을 좀 덜 신경쓰게 되면서
모든 기계에 따라 이게 어떤 거고
무슨 뭐 무슨 스텝워플로 같은데에 애써 있는 거 봐도 막
뭐 이거 코드가 똑같은 거 하는 코드가 5~6개가 있고
이거는 이 플랫폼에서 돌고 저건 저 플랫폼에서 돌고
그니까 저 기계에서 돌고
이런 게 옛날에 J2ME로 모바일 개발하던 게 똑같은 거예요
한마디로 스펙 제대로 못 박아놔서 잘 안 박아놔서 이게 개판이 됐구나
그래서 안드로이드 파편화가 심하다는 건 그때 깨달았는데
그거를 떠나서 이제 사마린의 좋은 점은
사마린 기본 개념은 원래는 C샵으로 짜지만
각 플랫폼마다 다른 코드를 짠다는 개념은 똑같아요
그래서 UI 정도를 빼고 나면은 별로 사마린의 장점이 없는 건데
사마린도 두 가지가 있죠
사마린이 있고 사마린 다 폼스가 있어요
사마린 다 폼스로 가면은 이거는 말 그대로
크로스 플랫폼이 되기 위한 그런 UI 부분 같은 경우
그 윈폼처럼 자기만의 폼을 만들면
이제 XAML 베이스예요 XAML 그 베이스인데
그걸 만들면 이제 모든 플랫폼을 되게 한다
그래서 그러면 굉장히 코드 쉐어링이 많아지죠
그니까 사마린이 있고 사마린 폼스가 있어요
둘 다 같은 새 나온 건데
크로스 플랫폼을 하려면 사마린 폼스가 좋고
물론 각 플랫폼마다 있는 특별한 기능은 못 쓰는 경우가 있죠
근데 대부분의 앱이 제가 볼 때는 그게 필요 없다고 생각을 하거든요
그래서 그걸로 가고 문제는
뭐 여전히 뭐 사진 찍어오는 코드라던가 이런 거는
각 플랫폼마다
짜야 되는 그런 단점이 있었거든요
어떤 사람은 그게 사마린의 장점이라고도 말을 해요
왜냐하면 여태까지 나온 모든 그런 크로스 플랫폼 엔진들이
너무 이걸 추상화시키다 보니까
그런 각 플랫폼마다 특별한 기능을 못 쓴다
그걸 쓰려면 너무 어렵다
근데 사마린은 그렇지 않다가 장점이었는데
그거에 대한 단점은 역시
뭐 대부분의 앱은 솔직히 80%의 앱은 그런 거 신경 안 쓰고
그냥 공통적으로 도는 거만 쓰면 되는 건데
왜 그걸 어렵게 하냐는 단점도 있었죠
그래서 사마린하고 전혀 상관이 없어서
상관없이 사마린.labs라는 게 있어요
xlabs라고 한 거 같아요
xlabs라고 그래서 기터브에 일단 오픈소스로 돼 있는 건데
걔네들은 이제 사마린 위에다가 모든 플랫폼에 상관없이
똑같은 코드 짜면은 이 카메라는 ios에서도 되고
뭐 안드로이드에서도 되고
안드로이드에서도 되고
그래서 이런 식으로 하겠다라는 개념으로 만든 거고
제가 진짜 써봤을 때 굉장히 완성도가 아직 높아요
그렇게 제가 큰 문제를 못 찾았고
그리고 뭐 패키지 같은 문제
이제 안드로이드는 뭐 그레이델 패키지인가
그걸로 많이 봤잖아요 지금은
근데 이제 그것도 이제 마이크로소프트 쪽
비주얼 스튜디오 쪽에서는 당연히 뭐죠
누계 패키지가 있으니까 거의 똑같이 되고요
제가 써본 결과는 굉장히 훌륭해요
윈도우스 환경에서 비주얼 스튜디오 써갖고
모든 디버깅이 가능해요 ios까지
그게 재밌는 건데 ios 디버깅을 하려면
그냥 자기 네트워크 상에 그러니까 뭐 라우터 상에서
연결돼 있는 선이 아니고 와이어리스로 연결돼 있어도
맥 컴퓨터가 한 대가 있고
그 맥에 x코드만 깔려 있으면 돼요
그러면 이제 그 맥에서 이 뭐죠
에뮬레이터 있죠 ios 에뮬레이터가 뜨고
디버깅은 제 네트워크로 연결된
윈도우에서 디버깅이 되는 거예요
비주얼 스튜디오 안에서 디버깅 다 되고
콜스택 다 보이고 굉장히 굉장히 좋아요 사실은
그래서 저는 비주얼 스튜디오가 현존하는 아이디 중엔
최고라고 생각을 하고
c#이라는 언어가 굉장히 발전돼 있고
라이브러리도 굉장히 좋고 물론
이제 파이썬 계열에서 이제 뭐 스택터스틱
그런 통계 내는 그런 넌파이라던가 이런 건 좀 없어요
그 부분이 아니고 일반 앱 개발이라면
c#의 그 async 모델과 뭐 패러럴 모델도 있고
그런 거 굉장히 잘 되어 있다고 보거든요
어 그래서 코딩 정말 하기 쉽고
정말 자잘한 거 신경 안 쓰려면은 이제
아까 말씀드린 자마린 폼스 넣으면은
모바일 개발에서는 이만큼 편한 게 현재 없어요
c# 자체가 윈도우스 플랫폼으로 진행할 때
그리고 기본적으로 c# 자체가 윈도우스에서 지원하는 거니까
윈폰이 그렇게 사용자가 많진 않은데
어차피 같은 코드베이스고
UI 거의 다 쉐어되고
특별히 신경 쓸 게 없다면
윈도우스 10용 윈도우스 모바일 10용까지도
그냥 같이 만들 수 있다는 거예요
그래서 이게 여태까지 문제는 뭐였냐면
가격이었어요
자마린이 이제 한 개발자 한 플랫폼까지
내가 한 개발자가 ios도 만들고
안드로이드도 만들어야 되면
제가 기억하는 비즈니스 라이선스가 한 1000불인가 그래요
플랫폼 하나당
그럼 얘는 2000불을 더 줘야 되는 거야
200만원 1년에
근데 일반 회사에서 ios 개발자랑
안드로이드 개발자 따로 두고 쓴다면
뭐 연봉이 최소한 2000불이면
아니 연봉이 2000불은 넘을 거 아니야
2000불이 200만원 정도거든요 연봉이
그러면 차라리 한 명 자르고
한 명만 해갖고 크로스 플랫폼 하고
뭐 여기서 오버헤드가 20% 더 있다고 쳐도
돈 세이브는 훨씬 크거든요
그래서 저는 자마린이 갈 길이다라고 믿었고
제가 지금 나온 회사
거기서도 이제 모바일 앱을 많이 만들어요
거기서 저는 딴 거 신경 쓰지 말고
자마린은 무조건 가라고 이제는
너네가 지금 여기 다 씨샷 프로그래머인데
우리가 개발자가 뭐 45명 있는데
저희는 웹쪽 개발자예요
그렇게 모바일이 중요한 개발 회사가 아닌데도 불구하고
그 엄청난 짓을 하는 그 회사에서
45명 중에 10명이 모바일 개발자인 거야
말이 안 되는 거예요 모바일이
딜리버 하는 거에 비해서는 너무 사람이 많았어요
그래서 무조건 자마린으로 가라 이게 너네 갈 길이다
근데 제가 그 회사를 나오는 마지막 날
마이크로소프트가 자마린을 산다고 결정한 거예요
저는 이게 언젠간 나온다고 예측을 했거든요
왜냐면 마이크로소프트는 윈도우스 폰 앱도 없고
그리고 지금 뭐든 간에
애지오 연결해갖고 서버 팔아먹으려고 하는 입장에서는
이런 크로스 플랫폼이 되는 앱이 있고
그걸로 그냥 애지오 서버까지 뒤로 연결이 쉽게 되면
얘는 그게 최고거든요 돈을 벌 수 있는
그래서
언젠가는 일어날 거라고 생각을 했고
근데 이게 일어났죠 결국엔
뭐 들리는 소문으로는 300밀리언 달러를 줬다는 얘기가 있는데
그건 진짜인지 모르겠고
중요한 거는 이게 과연 그럼 돈이 어떻게 되냐예요
왜냐하면 옛날에 비주얼 스튜디오에서
유니티 디버기 할 수 있는 그런 플러그인 만든 사람이 있었잖아요
그게 그 사람이 이거를 100불씩인가 팔았었어요 사실은
그러면 마이크로소프트 이 회사를 샀거든요 그냥 그 사람을
그래서 그걸 공짜로 만들었죠
저는 자마린도 그렇게 갈 거라고 생각을 해요
왜냐하면
자마린 플랫폼 지원하는데 개발비 1000불 이게 중요한 게 아니라 마이크로소프트는
이걸 누구나 써서 윈도우스 폰 앱도 막 늘어나고
애지오 다 써주고
그러면은 얘네는 그거에서 돈을 벌겠다는 거예요
지금 비주얼 스튜디오 공짜로 풀듯이
저는 제가 볼 때는 자마린도 공짜로 풀 거라고 생각을 해요
그게 언제가 될지 모르겠지만
그래서 자마린이 지금 학생인 사람들한테는 공짜로 받을 수가 있어요
이제 드림스파크 웹사이트 가면은 마이크로소프트에서 지원하는 거
거기서 이제 등록을 학생 등록을 하면은
1년 자마린이 공짜가 나와요 비즈니스 라이센스가
두 플랫폼용으로 안드로이드
그러면 1년 동안 쓰면서 저는 그 안에 분명히 이게 공짜가 될 거라고 보거든요
그러면은 자마린이 계속 쓰면 되는 거예요
그러면 여태까지 있던 그 참 지저분했던 모바일 개발 환경이
한 번에 좀 이렇게 끝나는 거 같아요 사실은
그 일단 안드로이드는 굉장히 지저분했고
뭐 안드로이드 스튜디오가 굉장히 좋아지긴 했지만
안드로이드 기본적으로 뭐 액티비티 한 다음에 콜백하고
뭐 인텐트 불러다가 뭐 이렇게 하는 그 자체가
굉장히 버기스럽고 실제 폰에서 돌렸을 때
안 되는 폰도 있어요 그러니까 그건 OS의 문제고
그 폰의 버추얼 머신의 문제인데
그것조차 제대로 지원 안 해주는 그런 부분이 많았거든요
그럼 차라리 그런 문제는 이제 이 자마린이나
그런 미들웨어를 쓰면 좋은 게
그런 문제가 생기면 미들웨어에서 고쳐줘야 될 버그예요
진행 안 해도 내부적으로 고칠 거고
심지어 못 고쳐도 우리는 간단하게 말할 수 있는 게
아 그 폰 지원 안 해 끝
그니까 모든 사람이 한 플랫폼을 쓰고 거기에서 모든 게 지원이 되다 보면
그걸 지원 안 되는 폰은 이제 아니 폰은 점점 이제 사람들이 신경을 안 쓰게 되는 거죠
그래서 저는 굉장히 좋다고 생각을 해요
일단 C# 언어가 엄청나고 C# 디버깅이 엄청나고
그 상황에서 이거를 짜서 모든 모바일 기계에 올릴 수 있다
물론 여전히 뭐라 그럴까 굉장히 특화된 거를 하시는 분들이 있어요
굉장히 일반적인 모바일 게 아니라 그 특정 기계에서만 지원하는 특별한 거에요

뭐 포스트 터치 이런 거 있잖아요 새로 나온 거
그런 것들은 아직은 로우 레벨로 자기가 직접 짜야 될 거 같은데
자마린의 장점이 또 그거예요
자마린은 그것도 할 수 있어요
그니까 제가 말해드렸듯이 자마린 기본은
굉장히 각 플랫폼마다 다른 걸 호출해야 되는 구조라고 했잖아요
거기다 자바 라이브러리 링크도 걸 수 있고
뭐 오브젝티브 C도 링크 걸 수 있고 여러 가지가 있거든요
그래서 그거는 하려면 할 순 있어요
근데 기본적으로 80% 정도의 워커는 그냥 간단하게 C#으로 하나에 그냥
엔진 쓰듯이 할 수 있다는 거
저는 굉장히 자마린을 추천을 많이 하고
이 상황에서 마이크로소프트가 샀다는 거는
앞으로 자마린의 미래는 굉장히 밝고
뭐 그러면 그런 얘기도 해요
뭐 이런 플랫폼 다른데 왜 마이크로소프트가 이걸 다 하냐 불가능하다
근데 그게 똑같이 게임 쪽에서도 일어났거든요
게임 콘솔 쪽에서
저희가 전세대 콘솔은 대부분 코딩은 다 비주얼 스튜디오로 했는데
디버깅은 각 플랫폼 회사가 준 디버거 툴을 많이 이용했어요
디버깅은 각 플랫폼 회사가 준 디버거 툴을 많이 이용했어요
디버깅은 각 플랫폼 회사가 준 디버거 툴을 많이 이용했어요
마이크로소프트 계열은 다 비주얼 스튜디오로 디버깅을 했지만
예전에 소니 같은 경우는 소니 자체에서 제공하는 디버거가 있었거든요
그럼 거기서 디버깅해야 됐고
위도 그랬어요
근데 문제는 지금 현 세대는 모두 다 비주얼 스튜디오로 디버깅이 되게
그 소니나 위나 닌텐도나 그걸 지원을 해요 플러그인으로
그래서 현재 콘솔 개발은 모두 다 비주얼 스튜디오로 하고
비주얼 스튜디오로 디버깅을 해요
그게 이미 그렇게 되어왔고
마이크로소프트가 원래 하드웨어 제조업 회사가 아니거든요
소프트웨어 제조업 회사였거든요
마이크로소프트 워드는 맥에도 있었고 윈도우스에도 있었고 어디든 있었어요
이 사람들은 정말 소프트웨어를 잘 만드는 사람들 같아요
그래서 이 디버깅 툴도 엄청난 걸 만들어냈고
그리고 요즘 프론트엔드 하는 많은 사람들
제 주변에 이제 프론트엔드만 하는 사람들도 있고
걔네들은 리눅스 중심으로 하는 애들도 많았어요
요즘 다 비주얼 스튜디오 코드를 쓴대요
그게 제일 편하대요 지금
그래서 마이크로소프트가 당연히 아톰 에디터 오픈소스를 가져다가
비주얼 스튜디오 코드를 만든 거고
그 위에다가 그 엄청난 엔지니어링 파워를 퍼붓는 거죠
그래서 또 엄청난 프론트엔드 디버깅 툴이 나오고 있고
제가 하고 싶은 얘기는
앞으로 모바일 앱을 만드시는 분들은
정말 엄청나게 엔지니어에 투자해야 될 가치가 있는 회사가 아니면
사마린을 쓰라고 말하고 싶어요
그게 가장 빠르고 가장 확실하고 가장 제품 빨리 나오고
망해도 빨리 망하고 성공해도 빨리 성공하는 그런 길인 것 같아요
그래서 좋은 소식을 전하면
포프TV는 마소 광고를 하면서 마소를 빨면서 오늘은 끝내겠습니다
포프였습니다
