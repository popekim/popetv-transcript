안녕하세요. 포프입니다.
오늘은 이야기 전개를 이렇게 해보려고 해요.
일단 시작은 제목으로 나간
네 기억은 언제나 틀리다.
이걸로 시작을 해서
그게 의미하는 바가 뭔지
그리고 그런 모습들이
또 되게 재미있는 게
의사소통 능력이 모자르거나
출중하거나 여러 가지 사람들이 있는데
그런 사람에서 나타나는 현상과
그리고 프로그래밍을 할 때
이제 또 함수를 만들다거나 그럴 때
또 그런 현상이 나오는 게
이렇게 같이 관찰이 됐어요.
그래서 그런 식으로 얘기를 끌어가려고 해요.
그래서 아마 이야기의 흐름은
네 생각은 언제나 틀리다.
그게 당연히 제가 될 수 있는 거고
그 다음에 이제 함수의 전제
그리고 의사소통에서
뭐라 그럴까
자잘못 빨리 인정하고 넘어가기
이 정도까지 얘기가 나올 것 같아요.
일단 네 생각은
네 기억은 무조건 틀리다
라의 의미는 뭐냐면
어찌 보면 이거는 예전에 한번 말했던
자기 실수를 찾아서 고쳐나가는 사람이
되게 훌륭한 개발자가 된다는 말을 한 적이 있죠.
그거랑 되게 가까운 거기도 해요.
그럼 이제 제 1화를 먼저 설명을 드릴게요.
이제 누구나 어렸을 때 자란
하면서는 당연히 다 느끼는 부분일 수도 있어요.
그게 유아계에서 벗어났냐 말아냐에 따라
이거를 인지하냐 말아냐의 문제 같은데
어렸을 때는 이제 제가 기억하고 있는 것과
제가 사실이라고 기억하고 있는 것과
사실이라고 기억하고 있다고 믿는 것과의 차이를 몰랐어요.
정확히 얘기하면은
이걸 이제 어느 순간에 발견했냐면
음
뭐
누군가하고 대화를 하고 있을 때였던 것 같아요.
친지 누구였던 것 같고
얘기하다가 어떤 얘기가 나왔는데
이제 제가 뭐라고 딱 말을 했어요.
그리고 말을 했는데
예전에 제가 했던 말을 반복하는 거였던가
그때 이런 말을 했잖아요 라는 식의 말을 하는 거였는데
그쪽에서는 제가 그런 말을 안 하고
다른 말을 했다고 하는 거예요.
그래서
제 생각에는 저는 그렇게 말을 한 기억이 있으니까
내가 맞다라고 생각을 하고 주장을 했는데
주변에 있던 사람들이는




다른 많은 사람들도 제가 말을
아까 그 사람이 한 방향으로
그렇게 했다고 말을 하는 거예요.
그래서 뭐 그 사람들이 짜고 고소섭치고
나를 죽이려고 하지 않는 이상은
뭔가 이상하다라는 생각을 하기 시작했어요.
그 전에는 그냥
내가 기억하고 있는 것은 사실이다라고 믿고 있었는데
그리고 내가 이렇게 말하려고 했으니까
난 말 했겠다라고 생각하고 있었는데
그게 아닐 수도 있지 않을까라는 생각을 하기를 시작을 했어요.
그래서 그다음부터 조금
약간 실험을 많이 했죠.
뭐 제가 말하는 걸 약간 실험을 많이 했죠.
약간 뭐 녹음해놓기도 한다던가
아니면은 글로 같이 표현하는 거
PC통신이나 이런 거는 제가 했던 말을 해놓고
나중에 내가 이 말을 했잖아요 라고 말하기 전에
그거를 확인을 한번 해봤는데
어느 순간 제가 의도한 거랑 말이 잘못 나왔거나
아니면 제가 어떤 걸 낱말을 들었을 때
그거를 녹음해놓거나 이럴 수도 있잖아요 사실은
아니면 어떤 비디오를 다시 볼 수도 있고
제가 기억하고 있는 버전과 실제 나온 말이
다른 경우가 있다는 걸 발견을 한 거죠
그럼 이제 그 순간부터는
이제 내가 틀릴 수도 있다
내 기억력이 틀릴 수도 있다
이게 내가 잘못 들은 거든 잘 들었는데
나중에 기억력이 변형이 된 것이든
아니면 제가 말을 하는 상황이었을 때는
내가 이 말을 하려고 했는데 말이 잘못 나갔든
아니면 말이 되게 애매모호하게 나갔든
아니면 나는 분명히 그때 생각한 대로 말을 했는데
내가 나중에 생각이 바뀌었든 간에
내가 이 말을 하려고 했는데 말이 잘못 나갔든
그런 불일치는 일어난다는 거를 이제 인지를 하기 시작을 했어요
그러고 나서부터는 이제
사람들이 대화하는 거를 되게 잘 관찰을 했는데
결과적으로 사람들은 난 이렇게 해서 넌 저렇게 했어 라고 하고
서로 다른 버전을 말을 하고 있는 게 전부예요
근데 증명 가능한 방법이 없기 때문에
서로 막 주장관 세우고
그럼 뭐 어떻게 하면 어쩔 수 없지 이렇게 넘어가는 수도 있고
아니면은 한 명이 언제나 굽히고 들어가는 경우도 있고
근데 그거를 보다 보니
또 되게 재밌는 그 사람들의 관계라는 게
이거를 악용해서 거짓말하는 사람들이 생기기 시작을 했어요
그게 관찰이 됐어요
나는 분명히 A라고 말을 했는데
나중에 그게 문제가 되면
아니 난 A라고 한 적이 없다고
이제 오리발을 빼는 이런 식의 사람들이 보이기 시작을 했어요
어차피 너도 기억 못하고 나도 기억 못하면 끝인 거니까
라는 식으로 몰아가는 사람들
저는 이제 사람들이 그렇게 장난치고 거짓말하고
이런 걸 별로 좋아하는 스타일이 아니에요
사람들 정직하게 살기 원하는 스타일이고
그렇기 때문에 어리다는 얘기도 많이 듣는데
그래서 그때부터 저는 이제 고민했던 게 뭐였냐면은
내가 기억하고 있는 건 다 틀릴 수가 있는 건데
그러면은 도대체 어떻게 대화가 될 수 있을까
저렇게 거짓말을 하는 이상한 애들이 나하고 이제 뭐 얘기를 하기 시작할 때
그럼 나는 걔네들한테 아니야
내가 확실해라고 말할 수 있는 근거는 뭘까
라고 여러 가지 생각을 해 봤는데
가장 명확한 한 가지 근거는 그냥
그냥 최대한 글로 남기는 거였어요
의사소통을 문서화하고 글로 남기고 서로 글로 주고받으면
이제 어느 한 쪽이 착각을 했던 간에 책임 소재는 분명해질 수밖에 없어요 사실은
뭐 80% 90%가 분명해진다고 하죠
그럼 이제 이거를 당연히 말로 하는 의사소통이 빠를 때도 있고 그렇지만
이제 글로 하는 거는 당연히 서로 간에 말 바꾸는 일이 없고
아니면 뭔가 문제가 생겼을 때 딱 확인하고
아이고 내 잘못이네 미안해요
이건 내가 책임지고 넘어갈게요 라고 할 수 있는 그런 게 중요해요
오히려 뭐 싸우고 말고 하는 시간 없애자는 거죠
내가 맞다 네가 맞다 하고 있는데 증명 안 되는데 그러는 것보다는
그걸 보고 내가 잘못했네 네가 잘못했네
뭐 이거는 거기서 씻을 수 있었던 거니까 이렇게 넘어갑시다
이런 식으로 할 수 있는 것들
그래서 그러면 일이 빨리 진행되는 거는 지금 느끼고 있지만
어쨌든 그런 거
두 번째는 그 글로 남기지 못할 경우에
물론 상대방이 이제 글로 남기기를 싫어하면
그건 분명히 거짓말을 하는 사람이니까 상종을 할 필요가 없는 거고
글로 남기기를 그냥 싫어하는
게 아니라 뭐 속도 때문에 말로 할 때가 있어요
말로 하거나 모든 세상 모든 거를 글로 쓸 수는 없으니까
일상생활에서도 그럼 이제 그 다음부터 저는
제가 의도했던 거와 상대방이 뭐 알아챈 거와
아니면 시간이 지나서 서로 다른 얘기가 오가고 있을 때
저는 이제 두 가지를 썼던 거 같아요
두 가지를 하나는 제가 기억하고
그러니까 제가 기억은 언제나 제가 기억하고 있다고 믿는 것뿐이에요
제가 기억하고 있는 게 사실은 아니에요
절대 그럴 수가 없어요
그냥 내가 그거를 기억하고 있다고 믿을 뿐이지
그럼 그때부터 그 기억이 생긴 그 주변에 온갖
그 환경 데이터들을 내가 과연 시각적으로
뭐 청각적으로 기억을 하고 있냐를 봐요
예를 들어서 내가 어느 날
내가 만약에 집을 문을 내가 안 잠그고 나갔는데
저는 잠겼다고 생각을 하고 있고
집에 왔는데 문이 안 잠겨 있는 거예요
그러면 이거를 과연 누가 안 잠갔을까
이런 얘기를 할 수가 있잖아요
그러면 어 나는 분명히 나갔을 때 잠겼어 라고 얘기하는 애들이 언제나 있어요
그러면 물어봐요
너는 그때 잠글 때 정확히 어떻게 잠그고 나갔는지 기억을 하냐고
그 상황을 시각적으로 아니면 청각적으로 아니면 촉감적으로 기억하는 게 있냐고
그런 걸 물어봐요
그러면은 이제 그거를 기억하는 사람은 기억을 못 하는 사람도 있어요
기억을 못 하는 사람들은 그냥 내가 잠그고 나갔다고 믿고 싶은 거고
그냥 그래서 기억을 만들어 낸 걸 수도 있는 거예요
난 보통도 잠궜던 거 같으니까 오늘도 잠갔겠다
난 보통도 잠궜던 거 같으니까 오늘도 잠갔겠다
이 생각을 하고 있는 거고
그게 아니라 내가 오늘 나갈 때 문을 잠그고 나서
잠겼는지 확인하기 위해서 문고리를 돌리고 몸으로 밀었을 때
뭐 오늘 그랬다 그런 걸 뚜렷이 기억하고 있거나
아니면 밀었을 때 내 가방에 어디가 옆에 걸려 갖고
약간 좀 애매해서 헤맨 적이 있다
이러면은 그거는 그 주변의 정황 증거들이라던가
내 기억은 결과적인 기억은 잘못됐을지라도
그 외의 기억들이 멀쩡한 거기 때문에
이제 그거를 좀 더 믿을 수가 있는 거고
제가 그 기억이 있으면 저도 강하게 외칠 수가 있는 거예요
나는 나는 이런 기억이 있다
그래서 나는 정말 이거는 내가 오늘 했다고 확신을 한다
이건 내가 굽히지 않겠다라고 말을 할 수가 있는데
그냥 내가 그런 기억이 없어
아침에 그냥 졸렸고 나갔어
문을 잠근 거 같으면 내가 안 잠글 리가 있나?
근데 기억이 없어
그럼 제가 할 수 있는 말은 뭐냐면
내가 지난 뭐 10년 동안 한 번도 문을 안 잠그는 적이 없는데
습관적으로 잠그지 않았을까?
그래도 그나마 개연성이 높긴 한데?
개연성이 높지 않을까?
그럼 이런 습관에 의존해서 내 패턴에 의존해서 얘기를 할 수 있어요
내 패턴상 교육을 안 하긴 어렵지 않을까?
이런 식으로
근데 내가 원래부터 문을 안 잠근 경력이 있어
지난 뭐 5달 동안 두 번이나 안 잠그고 나간 적이 실제 있어요
그러면 그때는 나는 잠겼다고 생각을 하는데
확실치는 않아 정도로까지 나갈 수가 있어요
그래서 이렇게 하면은 기본적으로 내 기억은 틀렸다고 가정을 하되
나는 그렇다고 생각하는데 라는 내 의견을 말할 거야
그리고 상대방도 의견을 들을 수 있고 거기에 대한 조율이 충분히 가능해져요
근데 그런 거 없이 무조건 나는 언제나 했다
그러면 나는 그렇게 얘기하는 도중에 나는 이렇게 들었어
그러면 내가 그렇게 말했는데 그럼 네가 잘못 들은 거지
이렇게 나오는 사람들은 그냥
저는 어느 순간부터 그냥 안 보게 되더라고요
네가 그렇게 얘기했다는 걸 증명을 해야 되는 거예요
나도 내가 그렇게 들었다는 걸 증명을 해야 되는 거고
근데 그런 경우에선 야 그러면 너랑 나랑은 좀 다른데?


너랑 이제 대화한 게 이렇고 서로 알아들은 게 다르고
뭐 어쩔 수 없으니까 넘어가자 라고 할 수 있는 거거든요
근데 그런 상황이 아닌 경우들이 또 되게 많아요 생각보다 인생은
이렇다고 얘기를 했어요
근데 생각해 보니까 야 그러면 너는 네가 그걸 말하자마자
내가 이런 이런 행동을 하고 이런 이런 질문을 던졌는데
내가 네 방식대로 알아들었다면 이 질문이 나오는 게 자체가 말이 안 되지 않냐
라는 논리적인 접근 방법도 가능해요
그러니까 뭐 일단 A라는 말을 했고
내가 그 A라는 말을 알아들었으면
할 수가 없는 상황이 많아요 사실은
근데 내가 B라는 질문을 했어
그 얘기는 내가 뭔가 대답을 잘못 알아듣다는 얘기거든요
근데 그 사람도 B에 대해 공정을 하고 넘어가는 경우가 있어요
그러면 이거는 순수하게 오히려 B의 입장에서 볼 때는
야 내가 이 질문을 했을 때 너는 아무 문제도 생각하지 못했고
그러면 그 질문을 가져다가
그 질문을 이제 아니다 맞다 이런 얘기를 해야 되는데
그거 안 한 거 아니냐 그렇죠?
그러면 그 자체로 걔한테 문제가 있을 수 있다는 거죠
그러면 나는 B의 입장에서 얘기를 했을 때
A가 그게 또 뭔가 잘못됐다고 생각한다면
거기서 질문을 던졌다면은 나도 생각을 해보면서
그래 뭔가 의사소통이 흩어졌겠구나 라는 생각을 할 수가 있는 거예요
왜냐면 이 대화의 일관성이 없어지니까
근데 이제 B의 입장에서는 그런 말을 했을 때
상대방이 그냥 일관성 있게 대답을 해줬으면은
이제 이해를 못...
그러니까 나는 당연히 모든 대화가 끝났다고 생각하는 거죠
A의 입장에서는 자기가 신경을 안 써서 일관성이 없다는 걸 신경을 안 쓰고
대충 얘기했다고 말을 했을 때
그냥 할 수 있지만
그거는 어찌 보면은
야 그럼 나는 어쨌든 간에 고칠 가능성이 없었고
너는 고칠 가능성이 있었는데 안 고친 거잖아요
그렇게 되면 우리 또 책임의 소재가 어느 쪽으로 기울 수가 있어요
그래서 이런 저런 거를 이제 쭉 봤을 때
봤을 때 실제 대화가 흐트러지는 사람이라던가
이제 거짓말을 하는 사람들
이런 사람들 보면은
언제나 제가 말했던 책임을 안 질려는 쪽에서 이상한 짓을 하고 있고
실제 책임을 질 상황이 오면은
그냥 목소리 높은 놈이 이긴다 식으로 나오는 경우가 되게 많아요
그래서 그런 식으로 이제 대화가 진행되는 사람들
이미 어느 순간 이제 커뮤니케이션으로 넘어온 거예요
뭐 이 사람이 정말 내가 언제나 옳다라고 생각을 하는 거든
아니면 자기가 틀린 걸 아는데 거짓말을 하는 것이든 간에
그 순간에서 이미 대화를 하기는 되게 어려운 사람이 돼요
그래서 그런 사람도 있죠
혼자 이렇게 뭐 얘기하면 혼자 딴소리 하는 애들
혼자 딴소리 하는 애들
그게 뭐...
처음에는 뭐 이런 사람들 얘기하면
아 그걸 못 들었어라고 얘기를 하지만
나중에는 그런 사람은 이제 또 뭐
문서로 커뮤니케이션 하더라도
똑같은 문제가 나오는 걸 되게 많이 봤어요
그래서 이거는 말 그대로 그 사람도 이제 자기가 변명을 대야 되니까
자기가 이러지 못하는 게 안 들렸다 그러면
뭐 그거 갖고 욕을 할 수는 없는 상황이 오잖아요 사실은
그래서 아 이렇게 되면은 내가 욕을 안 먹지라는
책임 회피적으로 많은 그런 얘기를 하는데
실제 그런 사람들 끝까지 이렇게 하나하나 줘보고
문서로 대화해보고 뭐 해보고 다 해보면
결과적으론 아 이 사람들은 원래 그런 사람이구나 라는 결론이 나오더라고요
그래서 이 사람들이 뭐 이유는 모르겠지만
고의로 그러든 아니면 내가 무조건 옳다고 믿고 있든
이런 사람들은 정말 의사소통을 하고 살기가 되게 힘든 사람이에요
그리고 이런 사람들이 만약에 뭐
윗사람으로 있다 그러면 그냥 말 듣고 하는 게 제일 편하고요
그게 들어오면 떠나는 게 제일 맞고
이 사람들이 아래쪽에 있다 그러면
이 사람들을 교육시키려고 하는 것도 별 의미가 없어요
별로 나아지지가 않아요 어차피 살아온 게 그렇기 때문에
그래서 그냥 명령을 하는 게 맞아요
그 순간 이렇게 해라 무슨 무슨 얘기만
아니 네가 이해 못하는 거니까 네가 알아서 해라
이거 해라 지금 당장 이런 식으로 가거나
아니면 네가 지금 굉장히 혼자 이제 뭐랄까
고집이 세고 말도 안 되고 논리적으로 말이 안 되는 얘기를 하고 있으니까
그건 네가 고쳐라 내 문제 아니다 라고
굳이 시간을 낭비 안 하는 게 훨씬 빨라요
이런 사람들은 오히려 기회를 주고 이제 그런
의심의 여지를 남기면 오히려 엉뚱한 약간 좀 핑계들을 많이 가져오고
그로 인해서 오히려 내 시간이라든가 팀의 시간이 많이 낭비가 돼요
그래서 그런 문제점들이 있죠
그러면 이제 마지막으로 하는 게 이제 제가 아까 함수의 전제 뭐 이런 걸로 넘어간다고 했어요
이게 되게 재밌는 게 결과적으로는 내 기억은 틀리지 않다라고 믿고 사는 사람이든가
아니면 내가 틀리는 거를 이제 크게 문제 삼지 않는 사람이라고 생각을 하면 맞잖아요
사람들이 이제 함수를 짤 때도 이 똑같은 현상이 보여요 되게 재밌는 게
나는 절대 틀리지 않다라는 게
그래서 그 예가 뭐냐면 제가 예전에 아마 함수 관련 비디오를 만들 때 그런 얘기를 했을 거예요
함수를 만드는 순간 이거는 하나의 계약이다
이 함수에서 들어오는 값과 나가는 값이 정확히 뭔지에 대한 계약이 있고
그 계약이 벗어나는 부분을 함수에서 어떻게 처리해 줘야 될지 되게 고민을 많이 해야 되는 부분이다
근데 그 대표적인 거를 보면은
또 얘기했던 게 null 같은 게 들어올 때 이거를 과연 함수 하나하나에서 우리가 처리해 주는 게 맞냐
null이라는 거 자체가 어찌 보면은 레퍼런스 기반으로 도는 그런 언어들에 어쩔 수 없이 딸려온 그런 약간 좀 뭐라 그러죠
약간 혹 같은 느낌이기도 한데 그러니까 필요한, 필요학 뭐 이런 느낌인데
그렇기 때문에 모든 object가 들어올 때 null이라는 걸 판단해서 거기서 exception을 던지든 그걸 해야 되는 거 자체가 잘못된 함수인데
코딩 스탠다드다 차라리
그래서 바운더리 같은 데서만 null 같은 거 체크해주고
이외의 상황을 체크해주고
시스템 내부에서 함수가 돌 때는 그 모든 값이
당연하다고 생각을 하자
입력 값이라는 얘기를 했었어요
그거 이제 글로벌하게 적용할 수 있는 룰이니까 가능했죠
근데 최근에 봤던 코드 중에 하나는 좀 뭐였냐면은
어떤 스트링을 가지고 와서
그 스트링을 이제 토크나이저 한다고 얘기하잖아요
이렇게 어떤 캐릭터를 갖다가 분리하고 여러 개 스트링을 만들고
그 중에 몇 번째 거에서 뭐를 하는 거
그래서 이번에 최근에 본 함수는 뭐였냐면은
스트링이 하나가 들어와요
그리고 이 url 스트링이었는데
그거를 이제 슬래시로 분리한 다음에
그 두 번째 나오는 거
그니까 슬래시를 나누면 첫 번째 거는 사라지고
뭐 두 번째 거는 생기고 이런 식이 되잖아요
시작이 슬래시라면
그래서 그걸 가지고 뭐를 하는 연산이었는데
문제는
split을 하면은 보통 array가 나와요
그 array에서 첫 번째 거 말고 두 번째를 쓰게 하는 그런 코드였어요
근데 여기서 만약에 저 스트링에 이 슬래시가 없는 게 들어와 버리면
당연히 첫 번째 토큰만 있고 두 번째 토큰은 안 생길 수밖에 없잖아요
근데 반드시 두 번째 토큰이 생긴다고 가정을 하고 함수를 그냥 쓰고 있더라고요
그래서 여기에 입력 값이 만약에 슬래시가 없는 게 들어오면은
그대로 널 익셉션이 나거나 크래시가 나는 그런 코드였어요
근데 이런 걸 보면서
입력 값이
함수를 만들었다는 거는 누구나 이 함수를 호출할 수 있다는 얘기잖아요
근데 이 함수를 호출할 때 내가 어떤 스트링을 넣어갖고
이제 뭐 이 첫 번째는 토큰이 뭔지 가져오려고 했다던가
뭐 이런 식의 함수를 만든다면은 당연히 그 토큰을 못 찾았을 때는
어떤 값을 반환해줘야 될까
이땐 널이 맞지 않나 뭐 이런 고민을 할 수가 있는 함수예요
근데 그게 없이 무조건 입력되는 스트링에는 이런 슬래시가 있을 거다라는 가정하에 코드를 짜놨더라고요
근데 그게 없이 무조건 입력되는 스트링에는 이런 슬래시가 있을 거다라는 가정하에 코드를 짜놨더라고요
물론 지금 짜놓은 코드에서는 돌려요
그 함수를 호출하는 곳이 딱 한 군데였기 때문에
근데 만약에 그 함수를 여러 군데에서 호출하고 있다
그러면 누구나 그 함수 모양을 보고 문제가 없다고 생각하고 호출하기 시작을 할 거 아니에요
그러면 그 순간에 뻑이 나는 거예요
심지어 그 스트링 자체가 다이나믹하게 바뀌는 거다 실행 중에
그러면 실행 중에 다이나믹하게 바뀌는 스트링이기 때문에 어느 순간 뻑이 나는 거예요
그러면 이 함수는 한 가지 상황
그 조건이 맞을 때만 유일하게 재료되는 함수고
그 조건이 맞을 때만 유일하게 재료되는 함수고
그 조건이 안 맞을 때는 그냥 무조건 뻑이 나는 함수가 돼버린 거예요
그리고 그 데이터를 검증하는 이런 밸리데이션 같은 것도 해야 되는 거에 대한 그런 정보가 함수 이름에도 없고
그러니까 함수 전에 밸리데이션 해야 될지
그러면 아무것도 안 하고 넣을 텐데 그럼 뻑이 나는 거예요 때에 따라서
그럼 이거는 똑같은 거예요
내가 코드를 짤 때 내가 지금 이 코드를 쓸 곳이 여기고
그러면 이 함수로 이름을 어떻게 내가 적어놨던 간에
뭐 내가 만들어 놓은 건 틀리지 않겠지
일단 짜놓은 코드가 뻑이 나지 않겠지라는 가정하에 시작을 하는 거예요
일단 돌려요
보니까
근데 딱 보는 순간 어레이를
이제 첫 번째가 아니라 두 번째 걸 가져오는 순간
아 이건 뻑이 날 수 있겠구나
값이 틀리면 라는 생각을 해야 되는데
그걸 안 하는 거죠
그래서 이거는 한 가지 예고
실제 이렇게 코드를 짠 사람들을 많이 봤어요
특히 학생들 중에 좀 못하는 학생들도 이런 애들이 많은데
아니면 처음에 이제 처음 함수를 짤 때
얘네 개념은 뭐였냐면
함수의 재활용성이 있다는 생각을 하는 게 아니에요
이 함수를 만들었어
그리고 다른 코드에서 얘를 호출했어
어 문제 없이 돌잖아
야 근데 이 함수에 이런 값이 들어오면 어떻게 돼?
나 그런 거 안 집어넣는데?
이런 얘기를 해요
그러면 이 함수라는 거는 누구나 호출할 수 있는 거잖아
네가 이게 정말 private 함수가 아닌 이상은
그럼 네가 이 함수를 만들었어 회사에서
그리고 누군가가 이 함수를 쓰기 시작해
근데 막 뻑이 나
그럼 이건 누구의 잘못이야
그럼 얘네들 하는 얘기가 모른다는 거예요
근데 그건 말이 안 되는 거죠
그렇게 얘기하면 정확히 얘기하면 뭐냐면
우리가 제품을 사요 예를 들어서
제품을 사요
제품을 샀어
그래서 예를 들어서 무슨 제품이 좋을까
뭐 핸드폰 같은 거 샀다고 얘기를 해요
핸드폰 같은 걸
그래서 핸드폰을 사갖고
이제 핑거프린트 기계가 있는데
핑거프린트 딱 했어요
근데 이게 못 켜
그래서 오 도는구나 했어
근데 갑자기 예를 들어서
검지 손가락을 할까 했는데 중지 손가락을 했어요
근데 안 돼
왜 안 돼요라고 물어보면은?
아 원래 그 중지 손가락 안 되는 거야
이런 식으로 말하는 거예요
야 그럼 그게 왜 핑거프린트야?
검지 손가락 프린트지
이런 식으로 말하는 거
아니면은 뭐 그런 그런 어쨌든 스펙이라는 게 있는 거죠
아니면 뭐 방수되는 폰이야
그럼 방수되는 폰 같은 경우 보통 몇 미터까지 문제가 없다
이런 식으로 나오잖아요
근데 물에 담궜는데 갑자기 고장이 났어
어 이거 왜 고장이 났어요? 라고 물으니까
아 그게요 식염수에 넣으면은 그게 고장이 나요
이렇게 말을 하는 거예요
그러면 도대체 무슨 얘기를 하는 거지?
이 스펙에는 방수라고만 했지
이게 아니면 뭐 소금 농도가 2% 들어가야 방수가 돼요
이런 얘기를 할 수도 있는 거잖아요 갑자기
스펙에 안 써 있는데
그런 식으로 갑자기 예외 상황을
충분히 검토하지 못한 기능을 만들어 버린 거죠
아니면은 뭐 집에 있는 뭐 스위치를 하나 돌리는데
전기 스위치를 돌리는데
전기 스위치가 켜지는데 갑자기 어느 날 또 안 켜져
이거 왜 안 켜져요?
그러면 아 원래 윤달에는 안 켜져요
이런 얘기들
이거 말이 안 되는 것들이 있는 거잖아요
전혀 스위치를 켜고 말거든요?
전기에서 이게 있냐 없냐의 문제고
전기가 있느냐는 들어와야 정상인데
그게 아니라 정말 상관없는 내용들
그런 거로 갖다가 망가뜨린다는 거죠
그래서 이런 사람들이 되게 재밌는 게
나는 틀리지 않다라는 그런 알 수 없는
그런 광신도적인 믿음을 갖고 있기 때문에 그런 거 같아요
그래서 제가 예전에 그런 얘기도 한 번 했을 거예요
프로그래머가 되게 잘 아는 사람들은 내가 언제나
틀릴 수 있다고 생각을 한다고
그래서 누구랑 얘기할 때 뭐라고 하면
뭐가 잘못된 게 나오면
이제 정말 잘 아는 사람들은
아 이게 내가 틀린 게 아닌가를 먼저 검토하는 반면에
별로 실력도 없고
뭐 실력이 어느 정도는 돼야지
그러니까 한 중간 정도 되는 실력인데
이런 말도 안 되는 그런 자세를 가지고 있는 사람들은
자기 실수라고 생각하면
그냥 네가 틀린 거야 라고 우겨요
아 난 틀릴 수가 없어 이런 식으로
그래서 이런 사람들은 그 모든 게 다 공통되는 거 같아요
대화를 하기도 힘들고
어차피 같이 일을 하기도 힘들고
그냥 주변에 있으면 되게 피곤해지는 사람
왜냐하면은 뭔가 이렇게 일이 잘못되면
나는 이제 내가 뭔가 잘못되지 않았을까 고민하고
이제 내가 신경을 써야 되는데
그 사람은 자기가 다 똥똥 처발라 놓고
자기는 고칠 생각 안 하고
남들이 다 고쳐줄 거라 생각하고 사는 사람들
이런 식이 되는 거죠
그래서 저도 이제 어렸을 땐 당연히 내 기억이 맞는 거라고 생각했고
사람은 누구나 그렇게 시작을 할 거예요
애들은 다 그렇게 시작을 할 거고
자라오면서 사람들하고 가꾸면서
아 내가 틀리지 않을까 라는 의심을 가졌고
실제 보니까 내가 틀리는 경우가 있었고
그렇다면은 아 모든 거에서 내가 틀릴 수가 있겠구나
그런 상황이 충분히 있겠구나
내가 검증을 해야 되겠구나
라는 걸 알아가기 시작을 했고
저는 그런 검증 과정이
그러니까 이제 내가 틀리다는 걸 인정하기 시작한 데서
저는 조금 더 성장을 했다고 생각을 해요
이제 인간적으로 그냥 그냥 단순히 아기가 아닌
이게 안 된 사람은
아직도 되게 유아기 상태에 있다고 저는 생각을 하고요
그 다음에 이런 실수를 줄이기 위해서
아니면 이런 실수가 서로 나고
서로 여러 명의 사람이 있을 때
굉장히 빠르게 누구 잘 잡은 것이 빨리 끝내고 넘어갈 수 있게
악용할 여지가 없게
그런 식으로 할 수 있는 시스템을 만드는 것 자체가
저는 재효율성에 굉장히 많은 도움을 줬다고 생각해요
그래서 오늘 얘기는 이제 시작은 아까
뭐 너는 언제나 틀릴 수 있다
너는 언제나 틀리다
그리고 그게 의사소통에서 어떤 식으로 사람들한테 표출이 되는지
그리고 함수 같은 걸 짤 때
코드 같은 걸 짤 때
어떻게 표출이 되는지
그런 얘기를 해 봤어요
예 보표였습니다
