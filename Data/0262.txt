오늘은 또 다른 buzzword라고 하죠 한국말로 유행어 테크업계에 유행어
처럼 돌고 있는 또 다른 맘에 안드는 유행어를 좀 속된 말로 깔려고
해요 폴리글랏 폴리글랏이라는 말 들어봤는지 모르시겠지만 폴리글랏
다시 한 3년 전부터 제 생각에는 이제 트위터 애들 시작해서 트위터
제작자들 개발자들이나 웹쪽 그런 데를 기반으로 아 적재적소에 필요한
언어를 쓰는게 되게 중요하다 그렇기 때문에 개발자들은 많은 언어를
다룰 수 있어야 된다 라고 막 붐 을 익히고 그래서 폴리글랏 책도
나오고 막 우린 폴리글랏 프로그래머 미드업 그룹 생기고 별생쇼를 다
하고 있어요 왜 생쇼라고 하냐 최근에 제가 아마
트위터에서부터 많이 들었는데 최근에 제가 트위터에서부터 많이
들어서 봤던 리트윗에서 봤던 글 인데 거기에 그런 얘기를 하신
분이 있어요 누군지는 기억이 안 나고 폴리글랏이라는 거는 아니
폴리글랏이 아니었구나 프로그래머 가 다양한 언어를 사용해야 한다는
거는 당연한 거다 이거는 뭐라 그러더라 프로그래머가 프로그래밍을
제대로 이해하면은 언제 어디서나 어떤 언어를 적어도 쓸 수 있는
게 맞다 근데 그 당연한 거를 뭐 폴리글랏이나 이런 걸로 막 이렇게
홍보하는 거 자체가 약 파는 거다 라는 식으로 얘기를 해요 전 그거
되게 동의하거든요 그래서 제가 주변에 만약에 작년에 폴리글랏
이라면 막 유명 폴리글랏 할 줄 안다면 이렇게 말하는 애들하고
일을 해본 적이 있어요 웹 쪽에 있었기 때문에 그러나 이제 제가
전에 말했던 이제 여러가지 뭐 '나는 엔지니어다'라던가
'제너럴리스트 대 스페셜리스트'라던가
그런 비디오에서 말했던
문제점들을 굉장히 많이 가지고 있어요
뭐냐?
프로그래밍을 못해요
프로그래밍 자체를 이해를 못해요
그러니까 어떤 의미냐면
음...
프로그래밍을 할 줄 아는 흉내만 해요
제가 그래서 무슨 얘기를 하고 싶어 하냐면
이를 접근하는 방법
모든 걸 배운 방법엔 두 가지 방법이 있어요
하나는 하나를 엄청 집중적으로 파요
진짜 그거를 뼛속까지 이해할 때까지 집중적으로 파요
그리고 그 다음에 그거와 비슷한 것들을 하면은
그거는 굉장히 쉽게 다 가요
왜냐?
이거는 이 과목 자체
이 언어 자체가
문제가 아니라
프로그래밍을 어떻게 짜야 되고
어떤 자료 구조를 짜야 되고
논리적으로 어떻게 구조로 해야 되며
이런 프로그래밍의 개념을 이해하는 거예요
심지어는 그게 좀 더 슈퍼 프로그램으로 가면은
하드웨어까지 이해하고
이 하드웨어가 이걸 어떻게 처리해서
어떻게 될 거기 때문에
우리는 이런 이런 이런 구조로 해서
프로그램을 짜야 된다를 이해하는 거예요
그거를 하려면
한 언어를 깊게 팔 수밖에 없어요
왜냐?
한 언어를 처음 만들 때는 그냥
해피 패스를 가요
그냥 누구나 쉽게 만들 수도 있고
아무 문제도 없는
그러나 깊게 파고 이걸 여러 가지를 하다 보면은
굉장히 이상한 문제도 발견하게 되고
그 문제를 디버깅
물어볼 사람도 없어
디버깅 하면서 고민하면서
그 내부가 어떻게 돌아가는지 이해해서
아 이게 이렇구나까지 이해가 되는 거예요
그렇죠?
그게 첫 번째 방법
두 번째 방법은
그냥 두루두루 다 하는 거예요
예를 들어서
뭐 프로그램에서 하면은
이제 자바스크립트도 조금 했다가
한 3개월 했다가
자바도 한 3개월 했다가
C#도 3개월 했다가
C++도 3개월 했다가
C#도 3개월 했다가
어 언어는 6개 알아
그러네
실제 깊이 들어가면 하나도 몰라요
제가 아까 말했던 폴리글라 프로그램 애들이
그런 애들이에요
실제 제 주변에
폴리글라시라고 외치지 않는 사람들이
쓰는 언어가 더 많더라고요
재밌는 게
저만 해도
저는 기본 언어가 C++이에요
C++을 제일 오래 했고
그리고 이제 저는 하드웨어 수준까지도 내려가는
사람이죠
어셈블리오 약간까지
그리고 저는 그 다음에 C#을 했지만
C#이 제가 경력 10년 된 사람보다
한 1~2년 안에 훨씬 빨리 배우고
그 사람들 버그 넣는 거 제가 다 고치고
최적화 다 하고 그랬거든요
제가 전 회사 웹 회사에 있을 때
C# 시니어들을 면접을 봐요
지네가 C#을 무슨 뭐
뭐 웹에서 뭐 했고
C#을 버전 1부터 썼는데 2부터 썼는데
막 이런 얘기해요
그럼 저는 시니어 C# 프로그램을 하면은
딱 한 가지 물어봐요 일단 첫 번째가
C#에서 가비지 컬렉터 어떻게 되냐고
대답 못하는 애들이 굉장히 많아요
그거 왜 알아야 되냐고
근데 그런 애들이 메모리 리그
막 40GB 내는 거 제가 잡았어야 됐어요
웹 서버에서
40GB가 뭐야 128GB가 났네 그때
웹이 128GB가 있었고 메모리가
그걸 다 쓸 정도였으니까
메모리 리그 무조건 나고
그거 잡는 것도 제가 들어가서 했어요
그리고 가비지 컬렉터 때문에
성능 떨어지는 경우도 있거든요
이제 특정 플랫폼에 대해서
뭐 유니티에 쓰시는 분들
아시겠지만
가비지 컬렉터를 이해 못 하면
이거 못 하는 거예요
특히 왜 유니티에서 느리는데
윈도우에서 안 느리냐
이거 다 시즌홀 가비지 컬렉터
들어왔기 때문이거든요
그런 거를 이해를 못 하고
코딩을 짜요
그러면 그리고 이제 또
C# 오래 쓰다는 애들 중에
막 그 레퍼런스하고
밸류 타입 구분 못 하고
이런 애들도 많고
심지어는 어떤 자료 구조를
어떻게 써야 되는지 잘 모르고
근데 얘네들이 언어는 많이 쓴다 그래요
근데 하나하나 파고 오면
제대로 쓰는 게 없어
그냥
전에 말했던 복부처럼
복사해서 붙여놓고 하는 애들이에요
그래서 저는 폴리글라시라는 거 자체가
굉장히
이름만 멋지지
제대로 된 반경을 가르친다고 보지는 않아요
어떤
제가 보통 하는 얘기가 뭐냐면
C++만 이해하면
이걸 마스터하면
다른 언어는
그냥 거의 공짜로 배워요
잡고
처음에 이제 스펙 좀 훑어보고
그러면 이제 대충 다 이해가 와요
이게 내부적으로 어떻게 작동하는지
다 이해가 돼요
그럼 그다음부터는
신텍스 조금 익숙해지는 거거든요
뭐 그러다가 이제 또
당연히 그 언어만의 굉장히 깊은 기능들이 있어요
그거를 배우려면
시간은 조금은 걸리죠 당연히
그래서 이 언어의 마스터가 되고
저 언어의 마스터가 되는 데까지는
시간이 좀 걸릴 수 있지만
한 언어
저는 C++를 보통 추천할 수밖에 없어요
왜냐하면 하드웨어에 가장 가깝게 가는 언어고
컴퓨터를 이해할 수 있는 언어고
컴퓨터가 어떻게 동작하는지 이해할 수 있는
언어 중에
가장 널리 쓰이는 언어?
그렇게 괴롭지 않게 쓰이는 언어는
C하고 C++이 전부기 때문에
그 언어만 익히면 나머지 언어를
중급 이상으로 올리는 거는 정말 빨라요
그런데 지금 우리가 요즘 말하는 것처럼
폴리글라 유행어처럼 말하는 애들처럼
그렇게 언어 배우면
중급도 안 돼
아는 건 8개야 중급도 안 돼
그리고 이제 거기서 또 이제 뭐
고급으로 올리려면 이것저것 만지다가 절대 안 올라가요
절대 안 올라가요
이게 하드웨어 마스터하는 애들은
처음엔 시간이 걸리지만 나머지 그냥 중급 이상으로 올리는 건 진짜 빨라요
여기까지 좋죠?
두 번째
그럼 폴리글라시 왜 안 좋냐
그 뭐라 그럴까요
경력을 쌓아가면서
커리어를 쌓아가면서
테크는 변해요
C++도 하게 되고
게임 쪽에서는 나중에는 C#이
툴 쪽을 많이 바꿔가죠 예전에는
다 C++이었는데
툴 하나로 C# 배우고
웹 가서 이제 뭐 C# ASP.NET 하고
JavaScript도 좀 하고
이런 식으로 커리어가 진행되면서
언어가 바꿔가면서 배우게 되거든요
새로운 직장에 가서
그래서 익힌 언어는 좋아요
어차피 그 회사에서 집중적으로 익힌 언어고
뭐 6개월 1년씩 쓴 언어니까
그만큼 다 이해가 되죠
그런데 만약에 한 직장에서
오 그래 요 서비스에서는
JavaScript
저기서는 TypeScript
저기는 C#
저기는 Java
저기는 Python으로 박자
라는 식으로 해서 그
뭐라 그럴까
서비스에 제일 좋다고 생각하는 언어를 막 써서
다섯 개 여섯 개를 써놓은 거예요
그거 누가 요지보수 할 건데
그거 누가 요지보수 할 거예요
아 그럼 이러면 오히려
모든 언어를 쓰는 애들을 채용할 수 있으니까 훨씬 편하다?
그게 무슨 소리예요
그 서비스에는 그 언어 하는 애들 밖에 못 넣는 거지
그런 식으로 얘기하면
아니면 진짜 코드 다 개판으로 짜는 애들 채용하는 거고
회사 입장에서는
솔직히 말하면 언어는 통일되는 게 좋아요
아까 말했지만
그 언어를 쓰는 사람이 중요한 게 아니에요
사실은 프로그래밍 할 수 있는 사람이 중요한 거예요
C++ 잘하는 애가 들어왔으면
제가 C#을 가르쳐서 코딩을 시킬 수도 있어요
그 C# 배우는 데 걸리는 시간
그니까 시작해도 처음 버그 고치면서
코드 짜면서 시작할 수 있는 시간은 1~2주면 되고요
그 뒤에 이제 실력이 올라가는 데는 뭐
잘 안 하면 잘 할수록 빨리 올라가는 거죠
회사 입장에서
스택이 통일이 된다는 건 굉장히 많은 코드를 공유할 수 있다는 얘기예요
코드 중복도 막아지고
그리고 만약에 이쪽에서 뭐가 하나 터져서
딴 쪽에서 도와줘야 되는 일이 있을 때
그런 사람을 투입하기도 좋다는 얘기예요
그래서 회사 입장에서는 언어는 작을수록 좋아요
폴리글라시라는 거 자체가 난처는
지금 도대체 왜 이거를 주장하고 있는지도 이해가 안 되는데
프로그래머 개인적인 입장에선 아까 말했듯이
잘하는 놈이니까요
그 정도는 다 폴리글라시예요
저희는 폴리글라시라고 말하지도 않아요
그건 당연한 거기 때문에
오히려 폴리글라시라는 단어는 지금
뭐라 그럴까
착팔기 위한 수단?
강의 팔기 위한 수단으로 저는 지금 되고 있다고 보고 있고
오히려 그것 때문에 굉장히 많은 주니어 개발자들이
헷갈려 하면서 엉뚱한 짓 하면서
실력을 제대로 못 키우고 있다고 봐요
제가 좋아하는 프로 중에
유일하게 보는 한국 프로 몇 개 중에
거의 하나구나
보는 게 K-POP 스타인데
거기 보면은 언제나 그런 얘기 하거든요
한 방에 있어야 한다고
기교부리고 뭐하고 다 좋은데
결과적으로는 나는 누구다라는 한 방에 있어야 한다고
저는 그게 스페셜리스트고
그게 자기 주 언어라고 생각해요
그래서 폴리글라 고민하고 이런 거 할 때
아 이것도 해야 되나 저것도 해야 되나
이거 고민하기 전에 자기 분야를 파세요
자기 하나 잘하는 거 한 다음에
어디 가서 면접 볼 때도
어 이거 없잖아요 그러면
아 저는 이거 너무 잘하기 때문에
이 정도 언어는 쉽게 배울 수 있어요 라고 말해요
저도 말하고 들어갈 수 있어요
저도 그렇게 들어왔고 C# 직종 잡을 때
그래서 자꾸만 그
그러니까 자꾸 그런 거에 넘어가지 마세요
새로운 게 나왔다
어 뭔가 새로운 거 이게 앞으로 가야 될 길이란다
책 나오고 막 이러거든요
그냥 보통 무시하는 게 좋아요
한 번 읽어보고 버리는 건 좋은데
일단 검증되지 않은 거에
이렇게 막 흥분되면서 새로운 거 하고 싶어하는 마음에
하면서 회사를 망치지 말아요
자기 인생도 망치지 말고
기본기는 기본기예요
기본기 닦는 데는 시간이 오래 걸려서 사람들이
아 그거 어려우니까 지름길을 찾으려고 해요
문제는 그 지름길 나만 찾는 거 아니에요
그 지름길을 쓰면 누구나 찾았고요
누구나 돈 잘 벌고 누구나 슈퍼 프로그램이 돼야 돼요
오히려 지름길 강한 사람들이 뒤쳐지는 게 프로그래밍이에요
기본기를 닦아야 돼요
그래서 참 상수에 놀아나는 그 온갖 출판 업체와
강의 업체 그리고 불쌍한 개발자들 때문에 그런 비디오를 만들어내요
다시 말하지만 언어는 도구일 뿐이에요
그쵸?
실제 기술은 프로그래밍 기술이에요
그런 걸 배우려면 깊이 봐야 되고요
도구를 이 도구 저 도구 바꾼다 봐야 그렇게 나아지면 크게 없어요
장애는 도구 탓을 하지 않는다고 그러잖아요
제 생각이 그래요
그래서
기본기에 충실하자는 마음에서 포프TV를 만들었습니다
포프였습니다
