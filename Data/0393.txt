안녕하세요 포프입니다.

예전에 이제 몇 번 그런 얘기를 했던 같아요. 프로그래머와 소프트웨어 엔지니어를 어떻게 내가 구분을 할 거냐. 원칙상으로 말하면 지금 제가 엔지니어라고 부르는 사람들은 굉장히 상향된 일이며 사실 프로그래머고, 지금 프로그래머라고 불리는 사람들이 굉장히 많은 사람들이 옛날엔 스크립터라던가 아니면 좀 더 정화된 표현으로 이제 코드몽키. 뭐 이런 식으로 솔직히 얘기하는 게 정상인데, 좋은 게 좋은 거라고 다 프로그래머라고 부르니까 정말 제대로 된 사람들을 엔지니어라고 부르겠다, 이런 얘기한 적이 있어요.

그러고 그런 비슷한 얘기로 예전에 무슨 아키텍트 강의를 들을 때 어떤 아키텍트 강사님이 하셨던, 코드몽키는 어떻게 성장을 해서 아키텍트까지 성장하나 이런 얘기도 했고, 그 분이 보는 코드몽키의 직종, 코드몽키가 하는 일 이런 얘기를 했죠.

그런 생각을 이제 벌써 몇 년째 해오고 있다가 학교에서 최근에 가르친 일도 있었고, 프로그래밍에 대한 이제 그 친구에게도 미래는 어떤 거다, 우리는 직업이 어떻게 되고 살아남으려면 어떻게 해야 되는지. 왜냐면 "너네는 이 직종은 무조건 괜찮아"라는 망상만 듣고 들어와서, "이거면 끝이겠지"라고 생각하고 있지만 정작 잘못 발 들여놓고 잘못 시작을 하면은 10년 뒤에 돌이킬 수 없는 상황이 된다는, 그냥 평생 노예처럼 살아가야 된다라는 얘기를 할 수밖에 없어요.

주변에서 그런 사람도 많이 봤고, 제가 점점 보는 미래도 그럴 수밖에 없고. 그러면 결과적으로는 제가 말한 엔지니어급, 제가 말한 아키텍트급 이 사람들은 우리가 알고 있는 프로그래머들의 그런 혜택? 프로그래머들이 누리는, 누린다고 하기보다는 사회적 지위던가 금전적 지위를 그대로 이어갈 거라고 보지만, 그게 안 되는 사람들 코드몽키들의 미래는 아무도 쉽게 얘기하려고 하지 않고 대충 알고 있어도 모른 척을 하려는 게 있죠.

그래서 그거에 대해서 얘기를 해보려고 해요. 물론 제가 틀릴 수도 있고 세상은 변할 수도 있지만, 여타까지 그냥 제가 봤던 굉장히 많은 직종과 그리고 지금까지 가고 있는 트렌드를 봤을 때 이게 제가 생각할 때는 일어날 일이라고 봐요.

일단 프로그래머가 돈을 잘 번다 그런 얘기는 되게 오래전부터 있었어요 사실은. 왜냐면 옛날에는 프로그램만이 아니라 컴퓨터를 하면 돈을 번다고 했죠. 컴퓨터가 처음 나올 때는 정말 컴퓨터를 할 줄 아는 사람이 별로 없었죠. 하드웨어 엔지니어들이 많았고, 수학 쪽을 했던 사람들도 많았고. 그럼 그 사람들이 그 당시의 다른 직종에 비해 엄청난 돈을 받은 것도 사실이에요.

제가 프로그래머를 시작할 때가 하드웨어에서 소프트웨어로 많이 넘어가던 시기였고, 그래서 이게 돈이 되는데 프로그래머로 어떻게 취직을 해야 할지를 잘 모르는 세상이었죠. 그래서 그 당시의 굉장히 좋은 훌륭한 회사들, 컴퓨터 회사들이 많이 생겨난 것도 사실이에요. 그 사람들도 돈을 많이 벌었고 사회적인 지위를 얻었다거나.

그 중에서 이제 한국에서는 되게 유명한 기업 두 개가 있는데, 안랩 안철수. 지금 국회의원이시죠. 국회의원이신 분이 원래는 바이러스 고치겠다고 꽁짜로 뿌리다가 정부 지원을 받든 어쨌든 모르겠지만 회사를 차렸고, 한국을 대표하는 안티바이러스 회사가 됐죠. 꽤 괜찮은 안티바이러스를 만들었죠. 그리고 그 당시에도 이제 한국에는 잘 없던 워드프로세서 만들던 한컴도 그런 회사 중 하나였죠.

이찬진 그 분은 여전히 IT 쪽 하시는 거 같은데 정확히 뭐 하시는진 모르겠고, 이찬진 씨와 함께 창업한 분들이 있었을 거고 그런 사람들이 성공을 했고. 그다음에 게임 같은 게 좀 들어왔고. 제가 볼 때는 이제 한국 기준으로 이야기하면은, 그런데 유지가 되다가 이제는 2000년도쯤에 갑자기 "이게 돈이 된다" 그러면서 굉장히 많은 학원들이 생겨나기 시작을 했고, 그때도 굉장히 많은 프로그래머들이 사회 진출을 많이 한 것 같아요.

예전에는 어려운 컴공을 나왔고 하니까 그만큼 직장이 많지 않았기 때문에, 산업화가 덜 되었기 때문에 그 일을 할 정도면 굉장히 고급 인력만 필요했는데, 산업화가 되면서 온갖 떨거지 일을 남들에게 줄 수 있으면서 밑을 부품처럼 돌릴 수 있는 계기가 됐고.

그러면서 양질은 아니지만 저렴한 인력들이 나오면서 그 사람들을 쓸 수가 있었던 거고. SI가 다 그런 건 아니지만, SI를 한탄할 때 “SI는 이렇게 돌아간다”며 SI를 부정적으로 보는 이미지가 있잖아요. 그런 게 좀 그쪽 분야로 많이 간 거 같아요. 하지만 그럼에도 불구하고 여전히 제대로 도는 회사, 저렴한 인력보다는 잘하는 인력만 데려가는 회사도 있긴 있어요. 게임에서도 그런 회사들이 있고, 그렇지 않은 곳들도 있으니까 그런 차별이 생기기 시작을 한 거죠.

미국도 비슷한 개념이 있었어요. 미국은 닷컴 버블이 생길 때였는데 사실은 마이크로소프트라던가 이런 엄청난 회사들이 생겨났었고, 애플은 컸다가 잠깐 죽었었고. 엔비디아, 인텔 같은 회사가 원래 하드웨어에 있던 회사들이 장악을 했다가, 실리콘밸리를 소프트웨어로 넘어가면서 뛰어난 사람들일 수도 있고 그냥 시기를 잘 맞은 사람일 수도 있고 비즈니스를 되게 잘 한 사람일 수도 있고. 그런 사람들이 살아났고, 그런 소프트웨어가 생겨났고.

그 다음에 이제 닷컴만 하면 돈이 된다는 이상한 망상이 돌면서 돈이 엉뚱하게 몰리면서 갑자기 말도 안 되는 회사들이 우수수 생겨나고, “너 프로그래밍 할 줄 알아?” 하면 직장을 잡을 수 있는 그런 말도 안 되는 상황이 일어났었죠. 그런 게 몇 년 지속이 되다가 빵 터지면서 침체기가 오고, 프로그래머 봉급이 그때만큼 하이풋 되지 않고 조금 더 조정이 되는 계기가 됐어요. 그래도 여전히 높죠, 높기는.

그거는 또 최근 들어서 다시 한 번 실리콘밸리 지역에서 창업이 좀 더 강해졌고, 지금은 소셜 네트워크 기타 등등. 지금은 VR, AR 이런 것들도 나오고 있지만 그런 건 그다지 믿음이 가는 부분은 아니니까, 그렇게 되면서 물타기를 약간 했는데 확실한 건 점점 산업화가 되어가고 있는 건 맞아요.

그 이유가 뭐냐면 아마도 세상 모든 거에 프로그래밍이 들어가기 때문인 거 같아요. 예전 같으면 내가 집에 가지고 있는 것 중에 프로그래밍이 들어있는, 프로그램을 할 수 있는, 내가 아니라 누군가라도 그런 기기가 많지 않았거든요.

요즘 생각해보면 모바일 폰에도 기본적으로 스마트폰이니까 뭔가를 누군가는 프로그램을 해야 될 거고, 내가 가지고 있는 컴퓨터도 그렇고, 티비도 그렇잖아요. 이런 저런 기능 들어있고 업데이트도 받고, 스마트 티비라고 나오고, 요즘 무슨 시계 같은 것도 와이파이 연결돼서 이상한 짓 하는 것도 있고, 로봇청소기 이런 것도 다 그런 거고, 냉장고도 그렇잖아요.

그런 쪼그만 것들의 프로그래밍이 예전에 하드웨어 쪽에 좀 더 가까웠다면 이제는 프로그래밍에 가까워진 거죠. 모든 그런 프로그램이 예전에, 그럼 이제 그만큼 인력이 많아진 거예요. 그걸 할 수 있는, 일자리도 많아지고.

그리고 또 재밌는 것은, 요즘 제가 보고 있는 게 뭐냐면, 거기까진 저희가 겪어왔던 거고 다음 단계가 정말 재미있어지는 것 같은데, 일반 사무직이 얼마나 프로그래밍을 하겠냐 이거거든요 사실은.

제가 언젠가 한번 이 예를 든 것도 같은데, 제가 어렸을 땐 중학교 때쯤? 아버지 사무실에 경리하시는 분이 있었고, 그때 처음에 이제 경리가 맞을 거예요. 제가 정확히 타이틀은 모르겠는데 저도 어렸어서.

그때 이분이 했던 것 중에 하나가, 처음으로 이제 엑셀 스프레드시트 있잖아요. 그때는 다른 프로그램이었을 거예요, 아마 로터스 이런 거. 그런 걸 가지고 뭔가를 정리하고 계산을 하고 이런 걸 하시는 거예요. 그런 걸 제게 물어보더라구요. “이거 어떻게 쓰는 거냐”고. 저도 잘 몰랐죠, 그때는.

그런데 지금 이 얘기를 하면은 웬만한 사람도 좀 어이없어할 것 같긴 해요. “아니, 엑셀 못 쓰는 사람도 있어?” 제가 어렸을 때는 타자 치는 것도 무슨 자격증이 있었거든요. 타자 9급 이러면 “나 타자 잘 치는구나.” 요즘 타자를 못 치는 사람은 없잖아요. 특히 어린 사람들 중에.

그럼 예전에는 그런 엑셀로 단순하게 셀 만들어서 덧셈하는 것까지를 사람들이 못했는데, 이제는 그건 웬만한 사무직, 경리 직종에 계시는 분들 아니면 사무직이라도 기본적으로 쓸 수 있는 기본 기술이 된 것 같아요. 이거는 프로그램이라고 할 수 없지만, 어쨌든 수를 계산하는 거니까 뭔가 하긴 하는 거죠.

근데 엑셀이라는 거 자체가 그 안에서 엄청난 프로그래밍을 할 수가 있어요. 제가 예전에 대학 다닐 때, BCIT 다닐 때 컴퓨터그래픽 3D 컴퓨터 그래픽으로 할 때, 엑셀에서 했어. 엑셀에서 점 찍고 3차원 도형 회전하는 거까지 보여줬거든요. 그 정도까지 가능해요.

그러면 그 안에서 프로그래밍을 조금 잘하면 할수록 내가 할 수 있는 일들이 많아져, 간단하게 할 수 있는 게 많아지고요. 그리고 제가 볼 때는 지금 많은 분들이 프로그램을 이용해서 엑셀을 하고 있을 것 같아요. 저도 가끔 쓰지만, 저는 사무직에 있는 사람은 아니죠. 사무직에서 다양한 계산을 하는 사람들은 그걸 하고 있을 것 같아요. 그리고 손으로 다 해야 했던 것을 자동화 시키는 사람도 분명히 있을 거고.

그래서 “아, 사무직도 점점 코딩을 하긴 하겠다.” 또 하나 재미있는 게, 코딩 교육이 들어오잖아요. 중학교가 됐던, 고등학교가 됐던, 초등학교가 됐던. 저도 그래서 책을 냈고, 그것에 관해서.

그러면 이제는 중·고등학교를 졸업하는 사람들이 웬만한 프로그래밍을 한다는 거예요. 그게 무슨 되게 복잡하게 OOP를 하고 클래스를 만들고 이게 아니라, 그냥 단순하게 스크립트 짜듯이, 파이썬에서 스크립트 짜듯이, 길게 짜놓고 자동화 하기 위해서, 하드를 긁기 위해서 이런 일을 한다.

그럼 그런 사람들이 이제 프로그래밍을 하기 시작하는 거예요. 예전에 엑셀 쓰는 사람이 드물었지만 이제는 아무나 쓰듯이, 예전에는 글을 쓰는 사람이 적었지만 이젠 다들 쓰듯이. 프로그램이란 거 자체가 어느 정도 기본 기술이 되는 것 같아요.

옛날에 이제 스마트폰 처음 나올 때 못 쓰시는 분 많았잖아요. 지금 스마트폰 못 쓰는 사람 거의 없을 것 같지 않아요? 애들 중에 주로 알아서 하잖아요. 켜고 끄고, 와이파이 찾아볼 줄 알고, “네이버에서 보니 이렇대” 뭐 이런 거부터 시작해서.

그럼 결과적으로는 간단한 프로그래머는 그렇게 될 거라고 보거든요. 그럼 그게 이제 새로운 급이 생기는 건지, 아니면 지금 있는 코드몽키가 범위가 넓어지면서 숫자가 많아지는 건지 모르겠지만, 그렇게 또 저렴한 인력이 생긴다는 거예요. 누구나 다 하니까 이게 비쌀 리가 없잖아요.

그러면 저는 이제 이런 얘길 해요. 코드몽키가 과연 어떤 직종이 되냐. 절대 누군가를 비하할 생각은 없지만 제가 매일 보는 것에서 단순하게 예를 들 수 있는 것 얘기할게요.

그럼 저는 이제 어떤 체인 커피숍에서 버튼 누르면 에스프레소 나오는 기계들이 있잖아요. 그러면 그 사람들이 그걸 따르잖아요. 그 직종을 지금 바리스타라고 부르긴 하는 것 같은데, 자격증이 따로 있는 건지는 모르겠어요. 제가 본 이 나라에서는 그냥 교육만 받으면 되는 건데, 실제 하고 있는 걸 보면은 커피가 들어왔다고 하면 버튼을 누르고 이제 갈아서 떨어지죠, 물하고. 물 또 추가해서 넣고, 복잡한 드링크 아니면 뚜껑 덮어 주는 게 전부죠. 그리고 빼서 털고, 여러 가지 세이프티 이슈가 있겠지만 어찌 보면 좀 기계적이고 단순한 작업 중에 하나가 됐잖아요.

그러면 코드몽키도 그런 그룹이 될 수 있겠다는 생각을 하긴 해요. 아까 처음 시작할 때 말했던 그 아키텍트 강의 하시던 그분도 그런 얘기했거든요. “너희들은 함수 대가리만 짜주면, 코드만 짜서 오는 게 코드몽키 일이 될 거라고. 그것보다 단순한 게 코드몽키 일이 될 수 있다. 정형화될 수 있고, 그 정형화된 일을 많이 줄 수 있다면 충분히 될 수 있겠구나.” 라는 생각을 하는 거예요. 어찌 보면은 코드몽키라는 게 일반 사무직까지 포함하는 개념이 될 수도 있다는 거죠.

다시 커피 얘기로 돌아가면, 아무리 그런 자동화된 커피가 많아지고 뭐가 많아지고 그래서 직접 커피를 만드는 사람이 임금이 작아지더라도, 정말 제대로 커피를 만들었던 사람들, 커피 장인이라고 하죠. 그런 사람들은 여전히 가치가 있을 것 같아요. 그렇기 때문에 손으로 직접 로스트한 커피를 파는 사람도 있는 거겠고, 아니면 손으로 갈아서 파는 커피숍도 있잖아요. 거기가 더 맛있다고 가시는 분도 있을 거고.

그 사람들이 받는 금액이 이제 봉급을 받는 거, 이윤으로 받는 게 절대 이제 체인점 커피숍에서 커피를 만드는 사람보다 낮진 않을 거라고 생각하는 거예요. 그럼 제가 보는 코드몽키와 엔지니어의 차이도 결과적으로 이렇게 가는 게 아닐까.

“그래, 단순한 건 누구나 할 수 있어. 그럼 단순한 건 그 사람들 주면 돼. 근데 복잡한 건 어떻게 할까?” 이런 얘기들이거든요. 그래서 그런 생각을 할 때마다 이게 사회적인 문제고, capitalism의 문제인지 모르겠지만 여러 번 봤고 여러 직종에서 우리도 그렇게 가고 있구나.

그만큼 코드몽키가 많아지면 많아질수록 학교에서 정규과정은 쉬워질 수밖에 없죠. 일반적인, 좋지 않은 학교들은. 그런데 이제 문제는 그런 학교에서 가르치면서 “야, 너희는 코드몽키가 될 거야” 그런 얘기는 안 한다구요. 결과적으로 그런 학교는 코드몽키를 만드는 학교고, 코드몽키가 많아져서 졸업생은 많아지고 질보다는 양으로 처리하는 학교가 되는 거고.

그런 변화를 보고 있고 제가 사실은, 그러면서 이제 더 훌륭한 학교들이 있잖아요. 잘 가르쳐서 훌륭한 거든, 입학 점수가 훌륭한 거든 뭐든 간에, “이 학교 출신 학생보다 이 학교 출신 학생이 훨 낫다.” 이런 게 보이는 경우가 있잖아요.

그 이유가 걔들이 원래 잘 나서인지, 학교서 잘 가르쳐서인지는 잘 모르겠지만 이거의 양극화도 커질 것 같아요. 제가 볼 때는 다른 업종에서 이미 그랬던 것 같고, 굉장히 많은 학원과 굉장히 많은 학교가 생겨났지만 그러면 그럴수록 모든 사람이 “아, 나도 교육을 받았다”는 만족감은 있고 그런 건 있지만 삶의 질에서는 크게 차이가 없어지지 않나. 오히려 그 양극화가 커지지 않나, 좋은 학교와 나쁜 학교 간에. 그런 생각도 들긴 들어요.

그래서 코드몽키도 그렇게 가고 있구나. 제 생각은 그렇고. 결과적으로는 삶의 선택이거든요. 내가 그렇게 적당히 살아남을 수 있는 봉급을 받고, 그리고 어찌 보면 그렇게 스트레스 받지… 뭐랄까 사람 때문에 스트레스는 있겠지만, 일의 강도라던가, 복잡해서 “아 내가 생각하기 싫은데 생각해야 되나” 이런 스트레스를 받기 싫다면은 그런 일을 하면서 나쁘지 않은 봉급을 받으며 살 수 있죠.

근데 그 나쁘지 않은 봉급이라는 게 지금 볼 때는 아직 산업화가 덜 됐기 때문에 괜찮은 봉급이지만, 산업화가 더 되면 될수록 그 봉급이 상대적으로 이제 질이 떨어지게 되겠지. 그것까지도 보면서 “내가 과연 프로그램을 배워서, 아 그냥 편하게 살래 이건지, 아니면 난 여기서 좀 더 올라가서, 뭐랄까 지금 일은 힘들지라도 나중에 내 노후를 내가 좀 더 잘 보장하고 싶다.” 이런 차이에 따라서도 사람들이 어디로 갈지도 결정이 될 것 같긴 해요.

현재 있는 부도덕한 학교 시스템과 이런 걸 봤을 때, “너희는 나중에 코드몽키가 되고 10년 뒤에 어려워질 거다” 이런 얘기를 하질 않죠. 그냥 제가 보는 코드몽키와 미래에 대해서 언젠가는 얘기를 하려고 했는데, 학교에 몸담으면서 학교가 어떻게 변했는지. 학교의 학생으로 있을 때보다 같은 학교니까 느끼죠. 그러고 어떤 방향으로 학교가 자꾸만 가려고 하는지, 이를 보고 예전에 비해서 프로그래머가 받던 봉급과 지금 받는 봉급의 차이가 얼마나 나는지 비교하면서 보다 보니까, 대충 그냥 “이럴 수 있겠구나, 이럴 것 같구나.” 그런 생각이 들어서 암울한 비디오를 만들었어요.

어찌 보면은 되게 불편한 진실을 말하는 걸 수도 있고, 어찌 보면은 괜히 공포심을 조성하는 것일 수도 있는데, 다 알아서 생각하고 판단할 문제겠죠.

제가 생각하는 말도 안 되는 우리 암울한 미래는 그거다, 라는 생각을 하면서 포프티비를 마치겠습니다. 포프였습니다.