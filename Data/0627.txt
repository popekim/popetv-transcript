안녕하세요, 포프입니다.

얼마 전에 제가 DB 드랍하고 결과적으로는 업계를 떠난 주니어 이야기를 한 적이 있죠? 그때 그 비디오에서 제가 그런 얘기했어요. 'CC++에서 메모리 누수를 절대 일으키지 않는 사람은 prod DB를 드랍하는 일도 없다' 라는 식으로. 같은 성향을 보이는 거기 때문에.

하지만 그거하고 상관없이 그 회사 내의 빌드를 여전히 그 사람들도 뽀개요. 왜냐하면 내 컴퓨터에서 뭐가 잘 돌았지만 다른 컴퓨터에서 안 도는 경우도 있고, 내가 예전 버전에서 코드를 작업해서 넣었는데 새로 바뀐 버전에서는 그게 좀 바뀌면서 컴파일이 안 된다던가 빌드가 뽀개졌다던가 데이터가 제대로 안 읽힌다던가 이런 문제 때문에 문제가 생기는 경우들도 있어요. 그리고 이게 굉장히 대규모의 협업 과정이고, 그리고 그 내부에서 쓰는 뭔가 코드들을 빌드하는데 시간이 오래 걸린다면 잘못된 코드가 들어가는 순간 회사 팀 내에 한 100여 명이 일을 못 하고 2시간, 3시간 동안 일을 멈추는 경우도 있어요.

그래서 회사에서 효율성의 문제로 따질 때는 그게 굉장히 큰 문제 중에 하나긴 하거든요? 근데 이 고장 나는 걸 방지를 100% 하는 회사는 제가 본 적이 없어요. 내부 팀에서 돌리는 무언가가 그런 경우는 거의 본 적이 없어요. 그러기 위해서 갖춰야 하는 시스템이 너무 복잡하고, 그렇게 하는 것보다는 가끔 '삽질하는 게 편하다'는 생각을 하는 것도 같고, 그리고 이제 모든 걸로 완벽하게 자동으로 코드가 들어오고 그냥 확인을 못 하는 경우도 많고, 그리고 코드가 들어오기 전에 최종적으로 Merge가 되기 전에 확인하는 시스템을 갖추면 또 개발자의 효율성이 줄어드는 경우도 있어요. 그래서 하나에 맞춰갈 수 없는 부분들이고, 결과적으로는 언젠가는 무언가 깨지고, 그것 때문에 팀이 일을 못 하는 일들이 생긴다는 건 당연히 가정하고 진행하는 게 어쩔 수 없는 개발 환경의 일부고요. 하지만 이제 그 다운되어 있는 두 시간 동안에 그거를 열심히 고치려고 하는 개발자가 있고, 자기가 뽀개 놓고는 '난 모르겠다. 탁구나 쳐야지'라고 두, 세 시간 동안 아예 보지도 않는 개발자도 있고  그런 경우는 있죠? 하지만 누구나 빌드는 뽀개지만 여기서 이런 차이는 생겨요. 이건 경력이 쌓이면서 생기는 거예요. 내가 그 빌드 뽀개진 것 때문에 한두 시간이 아니라 12시간, 24시간 동안 무언가가 안 되는 일은 없는 사람들이 점점 나오기 시작해요.

근데 이런 것들은 그냥 경력이 쌓여가면서 나오고, 경력이 없을 때는 다 그냥 이것저것 다 뽀개요. 어떤 경우냐? '내가 퇴근하기 몇 시간 전에는 코드를 넣지 않는다'는 명백한 원칙을 만드는 사람, 아니면 '그때 코드를 집어넣으면 내가 몇 시간 동안은 회사에 추가로 있겠다'는 원칙을 만드는 사람들이 그래요. 인간의 오감은 굉장히 불확실하고요, 그리고 사실은 내ㄴ가 아닌 다른 이유로 빌드가 깨지는 경우들도 있어요. 근데 그거 책임이 나한테 온 것뿐이고, 내가 봐야만 되는 경우도 있어요. 내가 그 코드를 마지막으로 고친 사람이니까. 하지만 그 사람이 코드를 넣어놓고 자리에 없다는 거, 밥 먹고 오는 건 괜찮아요. 퇴근한다는 거? 주말이예요. 주말에 와서 야근하는 사람도 있는데 나 때문에 일을 못 해요. 아니면 난 3주 휴가 가기 하루 전날에, 퇴근하기 전에 코드 넣고 갔는데 다 깨지는 경우들.

그런 경우들이 문제인 건데, 경력이 쌓이면 쌓일수록 내가 아무리 열심히 노력해도 내가 넣는 코드가 깨질 수 있다는 걸 알고, 그래서 그런 경우에 퇴근하기 어느 정도에 있는 사람들은 안 해요. 다음 날 아침에 출근해서 그제야 코드를 넣고 점심시간까지 다 빌드되고 보는 걸 보게 되죠. 진짜 업계에서 열심히 일을 하다 보면 '몇 시 이후에 코드를 넣지 않는다'는 원칙이 사람마다 생겨요. '정말 어쩔 수도 넣어야 한다면 내가 2시간 초과 근무한다.', '3시간 초과 근무한다.' 이렇게 돼요. 아니면 뭔가 크게 들어가야 하는 것들이 있다면 반드시 주 초에 넣고 목요일, 금요일 이때는 안 넣는 것들이 생겨요. 이거 회사 다니면서 누구나 다 겪어본 문제일 거예요.  원칙을 세우셔야 합니다. '내가 몇 시 이후엔 코드 넣지 않겠다.', '저녁엔 코드 넣지 않는다.' 그러면 내가 이런 것들을 일찍 끝내는 습관을 만들 수밖에 없어요. 데드라인이 금요일이에요. 금요일 날 끝내면 대부분 또 저녁에 놓쳐요. 그럼 데드라인 관리 못 한 거예요. 중요한 일을 앞서 당겨서 끝내놓고, 그 뒤에는 자잘한 일을 하거나 다음 주로 넘어가야 하는 일들을 하는 게 되게 중요한 겁니다. 그게 아니면 무조건 야근 확정. 그렇죠? 남한테 피해를 안 줘야 하기 때문에. 예전부터 부모님들이 그런 말씀하셨죠? '남한테 피해는 주지 말아라.' 개발자도 남한테 피해는 주지 마세요. 잘못 피해 주면 100명의 3일 치 셀러리가 날아갈 수 있습니다. 조심해야 합니다.