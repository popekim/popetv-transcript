안녕하세요 포프입니다 오늘 얘기할 거는 어떤 프로그래머 어떤 종류의 프로그래머 어떤 스타일의 프로그래머 그런 프로그래머들한테 좀 안좋은 얘기를 하는 걸 수도 있어요
그래서 좀 기분 나쁜 얘기가 될 수도 있지만 이미 멍석을 제가 깔았으니까 그러시더라도 제가 나쁜 의도를 가진 건 아니니까 이해해 주시고 그냥 거기서 교훈을 얻어 가시면 좋겠어요
뭐였냐면은 최근에 이런 일을 제가 맡길 일이 있었어요 어떤 프로그래머한테 제 직원이겠죠
그 저희가 POCO 아카데미에서 하는 것 중에 컴파일 도중에 굉장히 많은 걸 해야 되는 것들이 있어요
저희가 학생 평가를 할 때도 프로그램이 깊게 들어가서 이 사람들이 제대로 하냐 마냐 이런걸 테스트를 하기 때문에 저희는 컴파일러 수준에서 뭔가를 정보를
뽑아내고 바꾸고 있던 컴파일러도 고쳐 쓰고 이런 일들이 꽤 많거든요 요번 거는 뭐였냐면은
함수
같은 게 있잖아요 그래서 어떤 cc 나 c++ 함수를 컴파일 할 때 그 안에 이 함수 안에서 사용하는 메모리가 얼마나 되는지 즉 스택 프레임 사이즈가 얼마가 되는지를 찾아오는 게 업무였어요
그리고 당연히 저는 실행 중에도 그걸 찾을 수 있다고 생각을 했고 실행 중에 찾을 수 없다면 컴파일러에서 컴파일하는 도중에 찾을 수가 있다고 생각을 했어요
우리가 직접 안 만들어도 될 수도 있고 우리가 만들어야 될 수도 있다 그 방법을 찾아와라
근데 그 일을 받은 그래도 그 경력이 있는 프로그래머죠 뭐 많이 있진 않지만 23년 되는 받은 사람이 cc++ 할 줄 아는 사람이고 그 정보를 계속 못 찾고 이상한 해결하고 막 계속 이러는 거예요 정보를 찾는 게 아니라 다른 쪽으로 이상하게 해결하고 그래서 아니 이거 찾을 수 있는 거다 해라
그래서 못 찾더라고요 그래서 못 찾아가고 제가 검색을 해서 스택 오버플로우에 검색해 보니까 한 대여섯 번 읽으니까 정보가 나와요 그래서 그 정보를 주고 이걸 시도해보라 라고 했었죠
근데 뭐 그 뒤에 자세한 얘기하면 너무 복잡해지는데 뭐 어쨌든 간에 처음엔 된다고 했다가 나중엔 안 된다고 했다가 이런 얘기도 되게 많았거든요
처음에는 그 방법이 된다고 해갖고 오케이 되는구나 하고 그럼 이대로 다 만들고 넘어가라 라고 끝났어요 근데 일이 안 끝나고 자꾸만 아 그게 아니라 다른 방법으로 하겠다는 식으로 얘기를 하는 거예요 계속
그래서 왜 그렇게 다른 방법으로 하냐 그랬더니 아 이게 뭔가 잘 안 된다 뭐가 잘 안 되냐 아 그 정보가 분명히 있는데 그 정보를 읽어오는 방법을 모르겠다
스택 오버플로우에서 하는 방법을 했는데 그 정보가 안 나온다 이런 식의 얘기를 하는 거예요 그래서 잘 이해가 안 돼 하고 아니 그 정보가 있으면 그 정보를 못 읽을 가능 방법이 없는데 그건 말이 안 되지 않냐
그래서 제가 직접 봤어요 보니까 결과적으로 그 정보가 속에 없는 거야 그러면 대체 너는 그 정보가 왜 있냐고 얘기했니 그러니까 아 자기는 그 문서에서 그게 된다고 했으니까 정보가 있다고 생각을 하고 있다고 저한테 얘기를 한 거라 그러더라고요
근데 결과적으로는 컴파일드에서 나오는 정보가 없다는 거예요
제니가 kid 카�.- ACCktjh Pr木 blasting several forum
지식과 정부가 바이너리 발음 키우며 바� ׽�블�통령 ጄ�White
바이너리 파일이잖아요 그 제가 그 정보를 뽑아내는 파일럿 플레익을 놓고 컴파일 하는 거와 그거를 안 놓고 컴파일 한 다음에 나온 파이널이 가격을 파이트 를 비교해 봤어요 똑같아요 그럼 그 정보가 안 나온다는 거 거든 이미 그럼 제가 그때 쓴 생각은 Our
TRS세트의 아들이 개발자는 무엇이 있느냐 엄냐 그 정보가 속에 있느냐 없냐를 물으면 그게 있는지 없는지를 판단하는 방법들은 굉장히 많아요 지금 말한 것처럼 그 정보 말들은 플랜을 놓고
팔고.
정보만들지 Тут ziem 아 배!
만드는 플랫 안 넣고 컴파인 한 다음에
바이너리 비교해도 되고
텍스트 파일로 비교해도 되고
여러 가지 방법이 있는데도
그냥 없이 누군가 된다고 했으니까
스택 오프로 된다고 했으니까
나는 확인도 안 하고 된다고 말을 한 거야
그리고 나중에 그게 본인이 안 되는데
정말 안 돼서 다른 쪽으로 간다고 한 건지
아니면 정보가 없는 걸 나중에 깨달았는데
그 사실을 인정을 못 해서
자꾸만 다른 쪽으로 끌고 가려고 했는지
저는 그건 잘 모르겠어요
어쨌든 그래서 거기서 결론은
그 정보가 처음 했던 방법으로 안 나온다
결론이었어요
그래 오케이
그리고 제가 그때부터 또 본 게
그러면은 다른 방식
컴파일러가 지원하는 다른 방식으로
할 수 있는 게 없을까라고
그 컴파일러의 문서를 읽어봤어요
근데 컴파일러 문서 보니까
이미 그 문서에 딱 적혀 있어요
이거를 넣으면은 스택 사이즈를 보여준다
그래서 야 그럼 이거를 넣어보라
라고 알려줬어요
근데 그것도 이제 안 되는 거야
왜냐하면은 그 컴파일러
리눅스에서 돌릴 땐 되는데
윈도우에서 안 된다 이런 식으로 하더라고요
근데 좀 말이 안 되는 게
과연 이게 안 되는 게 말이 될까?
그 함수를 컴파일러로
컴파일러가 어셈블리어가 나오는 순간에
스택 사이즈를 모르면
어떻게 링킹이 될까라는 생각이 들고
그리고 분명히 컴파일하는 도중에
어셈블리어 뽑아낼 수 있는 플래그가 있잖아요
C나 C++은
그럼 그 안에서 뭔가 나올 텐데
정말 모를까?
그래서 제가 어셈블리어를 나오게
텍스트로 나오게 하는 컴파일을 해봤어요
했는데 그 안에 갑자기 숫자가 보이는 거예요
스택 사이즈는 이거다라는 숫자가
그걸 보고 나서
어 그러면은 이 플래그가 된다
라고 해서 다시 알려줬어요
그러면 이제 그 플래그를 기반해서
우리가 만들려고 했던
기능을 만들면 되는 거거든요
근데 또 한참이 지났는데
일이 안 끝나는 거야
그래서 왜 안 끝나냐 물으니까
아 니가 준 플래그는
그 컴파일러 할 때
컴파일러 호출하는 exe 파일이 여러 개가 있어요
그 중에 우리가 개발 중에 사용하는
그 exe 파일에 넣으면 되는데
다른 거
컴맨드 라인에서 돌리는 건 안 된다는 거야
근데 문서를 읽어보면은
저희가 개발 중에 사용하는 exe 파일이
내부적으로 다시
그 컴맨드 라인에 하는 거를
어떻게 호출한다고 되어 있거든요
그러면은 여기서 받는
플래그가 여기서 받는 플래그가 다른 거고
그럼 여기서 받는 플래그는
다른 게 있다는 거거든요
근데 그거를 모르겠다고 손을 놔버리는 거예요
그래서 제가 아까 좀 전에 말했던
그 컴파일러 문서를 다시 열었어요
다시 열었으니까
그 내부에 그 플래그가 또 나와요
그래서 그 플래그 이게 맞다 라고 전해줬어요
그제서야 일이 끝난 거야
근데 엄밀하게 말하면
제가 검색하고 뭐하고 뒤지고 한 시간은
다 따져도 한 시간 미만
실제 제가 시도하고 뭐하고까지 따져도
한 시간 미만이에요
그러면 그거는 결과적으로는
시도한 거 갖고 갖다 쓰면 되는 거거든
그래서 보면서
아 이거는 뭘까라는 생각이 들었 고
두 번째는 왜 이 사람은 그 정보를 못 찾을까
처음에는 내가 뭘 해야 될지 몰라서
해결하고 그럴 순 있어
누군가 그 답을 줘요
그러면은 그게 정말 작동한다 안 한다
확인하는 거
그건 첫 번째 할 줄 알아야 되는 거죠
그걸 객관적으로
내가 뭔가 어떤 거에 신념을 가지고
무슨 세상에 존재하지 않는
뭐 절대신을 믿듯이 그렇게 믿고 하는 게 아니라
실제 데이터로 보고 확인하면 되는 거
왜 그걸 못 할까
두 번째 문서를 제가 줬어요
이 문서에 있다라고 하고
플래그가 있는지도 알려줬어
근데 그 플래그가 exe 파일은 작동을 안 해
근데 그 문서에 exe 파일은 내부 적으로
다른 exe 파일을 호출한다고 써있어
그럼 그 플래그 찾으려면
다시 문서 가서 읽으면 되는 거 잖아요
물론 그 문서에 플래그가 한 50개 60개는 있어요
근데 50개 60개 읽던
아니면 텍스트로 검색을 하던
시간은 오래 걸리지 않거든요
근데 그걸 안 하는 걸 보고 나서
아 스택 오버플로우가 없으면
코딩을 못 한다는 사람들이 있긴 있어요
제 주변에 많지 않지만
그 사람들이
이런 게 아닐까라는 생각이 들기 시작한 거예요
기본적으로 내가 찾고자 하는 무언가
그걸 답을 찾았을 때
그게 맞는지 확인하는 과정들이 있잖아요
그 과정을 모르는 거야
데이터 검증하는 법을 모르는 거야
첫 번째야 그거
두 번째 문서가 있어
문서를 읽으면 답이 나오는 상황에도
문서를 읽지 않는 거예요
왜 갑자기 글자가 너무 많아
나는 글자 보면은 울렁증이 와
이런 사람이 있거나
다양한 것들이 있죠
그래서 그런 문제들을 가지고 있는 사람들
문서를 잘 안 읽어요
안 읽는 사람들
그런 사람들을 보면은
언어 능력 의사소통력에 문제가 있는 경우들이 사실 있어요
그래서 이 사람들은 그런 걸 두려워하는 게 아닐까
아니면 똑같은 걸 읽더라도
대충 읽고 넘기고
그 내용을 이해를 못 하는 게 아닐까
그 내용을 이해 못 하는 것도 뭐냐면은
굉장히 많은 이야기가 있죠
그럼 그중에서 뭐가 중요하고 중요하지 않고
쳐낼 줄 알아야 되고
지금 나한테 적용이 되고
적용되지 않는 거 쳐낼 줄 알아야 되는 거야
근데 아까 말씀드렸듯이
어떤 데이터가 있어도
데이터 검증하는 법을 생각을 못하죠
그럼 문서에서는 어떻게 생각하겠어
뭐를 쳐내고 뭐를 확인하면 된다는 인과관계
그런 걸 생각을 못 하는 거예요
그래서 그런 게 아닐까
제가 못 하는 거야라고 말하면 안 되고
그런 생각을 하기 시작했어요
지금 이 비디오에서 말했던 거
어떤 이런 이상한 행태를 보이는 사람들에 대해서
제가 좀 이상하다 이해가 안 된다는 얘긴 했지만
이렇게 보는 입장이 회사에서 상사들
선임들이 보는 입장이고
사수님들이 보는 입장이에요
프로그래머 당연히 처음에 모르고
그래서 알려줘요 하나씩
알려줬는데
분명히 그 정보가
네 눈앞에 있어
근데 너는 그것도 모르겠다고 하고 있는 거야
그러면 내 기준에서는
주니어 프로그래머면 이 정도는 알아야 돼
2년 차라면 이 정도는 알아야 돼
근데 너는 그 정보를 흡수를 못 하고 있어
그 이야기는 뭐예요
언어능력이 안 되거나
기본기가 없거나
그리고 눈 가리고 아웅하다가
스택 오버플로에 있는 거만
어떻게 카피해서 복붙해서 돌리는 거고
거기서 문제 하나라도 생기면
해결을 못 하는 경우들이 나온다는 거죠
이렇게 되면은 직장에서 사수 밑에 있다가
계속 거기 머물러 있고
못 올라가는 사람들
그리고 요즘 힘들다고
하는 프로그래머도 있죠
그런 사람들이 되는 걸 수도 있어요
잘 생각을 해 보세요
본인이 어떤 기본기를 쌓아야 되는지
그리고 그런 걸 들으시고
이렇게 자극이 되시면은
POCU 아카데미 오셔 갖고
기본기를 들으시면 됩니다
POCU 아카데미는 기본기를 가르칩니다
야 광고 끝났다
끊겠습니다
보부였습니다
