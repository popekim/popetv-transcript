안녕하세요, 포프입니다.

제가 라이브를 하다 보면 많이 받는 질문 중에 하나가 포프님은 노트 정리하는 앱을 어떤 거 사용하세요?라고 말을 합니다. 엄밀히 말하면 노트 정리만 얘기하는 게 아니라 문서화까지 말씀하시는 거 같아요. 그래서 그걸 제가 라이브 몇 번 말씀을 드렸는데, 그걸 정리해서 그냥 동영상을 만들려고 합니다.

일단 몇 가지는 제가 짚고 넘어가야 할 거 같아요. 한 가지 앱으로 모든 필요한 것을 다 할 수 있다. Todo부터 노트 정리, 회사 내부 문서 정리 이런 것. 시도하는 회사 많이 봤고 실제 저도 한두 번은 시도해 봤지만, 그런 건 없습니다. 요즘 그런 얘기가 돌고 있는 이유는 한동안 조금 한국에서 핫 했던 그 엔 어쩌고 하는 그 앱 때문에 얘기가 돌고 있는 거 같고, '거기서 뭐든지 할 수 있다', '와 신난다' 이러고 있지만, 모든 걸 거기서 할 수는 없어요. '거기에 이력서를 적은 다음에 그거로 가는 링크를 제출하면 이력서가 필요 없다'라고 하지만 보안을 중시하는 회사에서는 그런 이력서는 열어보지도 않아요. 그래서 그런 이상한 생각은 하지 마시고, 그냥 다 필요에 따라 써야 되는 앱들이 있고 서비스가 있는 겁니다. 그건 확실히 잡고 넘어가면 좋을 것 같고 그래서 저도 여러 가지를 쓰고요, 협업에서도 여러 가지를 쓰긴 합니다. 그걸 쭉쭉 말할게요.

일단 넘버원, 회사에서 어떤 정형화된 문서를 적어서 프로세스 doc을 적는다던가 어떤 설계가 나오고 뭐가 나온 다음에 회사 내에서 다 구현이 되고 이 정보를 공유하기 위해서, 남겨두기 위해서 문서화를 하는 경우들. 그런 경우에는 저는 마크다운 기반과 Git 기반의 위키를 사용합니다. 저는 그냥 Azure Devops에서 자체적으로 제공하는 Git 기반의 마크다운 위키 페이지가 있거든요? 그래서 그걸 사용해서 모든 걸 정리하고 마크다운에서 다이어그램을 넣고 싶으면 Mermaid로 좀 넣을 수 있고 이런 것들이 있습니다. 코드 포맷팅도 요즘 잘해주고요. 단, 여기에는 이미지를 지원하지만, 제가 직접 업로드해서 삽입하는 경우는 없어요. 그 이유는 이 마크다운 기반의 위키를 딴 데로 나중에 옮겨갔을 때 이미지가 똑같은 방식으로 지원된다는 확신이 없어서 그런 경우는 여기를 사용하지 않고 다른 문서로 보통 링크를 겁니다. 그래서 어쨌든 간에 회사에서 Knowledge Sharing용으로 문서를 남기기 위해서 하는 건 마크다운 기반의 위키 페이지를 사용해요. 옛날에는 이것도 구글 Docs를 사용을 했어요. 근데 구글 Docs를 사용을 하니까 검색이 더럽게 안 돼요. 지금 말한 Azure Devops에 있는 마크다운 기반 위키에는 검색이 너무너무 잘 돼요

그럼 두 번째 구글 Docs을 얘기해야죠? 구글 Docs 공짜고 뭐 어쩌고 저쩌고 해서 많이 사용해요. 옛날에는 이걸로 모든 회사 문서를 남기긴 했지만 이제는 그러지 않고요, 정말 그림이 들어가거나 이런 것들은 여전히 여기 좀 남겨두고 스프레드시트 필요한 경우 그런 경우 남겨두고 위키 페이지에서 링크를 겁니다. 그리고 구글 Docs이나 스프레드시트, 거기서도 이 위키 페이지에서 이걸 사용하고 있다고 링크를 박아놔요, 나중에 어디서 뭘 사용하는지 알 수 있게.

또 하나는 지금 작성하고 있는 문서가 있고 여러 명이 협업해야 할 때. 서로 의견도 주고받고 코멘트도 여기 달고 '이거 뭐야?' 물어보기도 하고 '이것 좀 해주세요.' 이렇게 해야 할 때는 구글 Docs를 사용해요. 한마디로 여러 명이 작업해서 Working Collaboration을 해야 하는 것들은 구글 Docs로 작업을 해서 나오고 그걸 최종화는 위키 페이지로 다시 옮기는 방향으로 가고 얘를 지워버리죠. 그래서 그런 식으로 일단은 회사 업무 방식들을 주로 해요.

세 번째는 이건 제가 개인적으로 작성을 하는 것들, 어떤 새로운 걸 Evaluation 해본다거나 아니면 새로운 아이디어를 써 본다거나, 아니면 여러 가지 로그 남기는 경우들. 버그가 나왔는데 버그 로그를 남기고 회사에 공유를 하고 싶어요. 하지만 작성자는 저죠? 그리고 테크적인 어떤 뭐를 했고 그거에 대한 결정을 내렸어요. 그 결정을 왜 내렸는지를 어딘가 적어두고 싶을 때, 한마디로 이게 일반적으로 생각하는 노트죠? 리서치 뭐 이런 것들 다. 그럴 때는 저는 원노트를 사용합니다. 원노트를 사용하는 이유는 검색이 어마어마하게 빨라서. 웹 기반의 노트 다 좋은데 검색하면 결과는 되게 오래 걸리잖아요? 그게 굉장히 많은 효율을 뺏어 가더라고요. 그래서 키보드 숏 컷 하나만으로 딱 컨트롤 E든 뭐든 누르고 검색 하는 순간 곧바로 검색이 쫙 뜨는 거, 인덱스가 되어 있다는 거죠? 그렇게 해서 곧바로 그 페이지 가서 뭔갈 쉽게 찾아서 고칠 수 있는 거, 검색어를 10번을 쉽게 바꿔가면서 쉽게 차에서 할 수 있는 것들, 그런 것들이 이제 이슈 로고 이렇게 박혀 있는 거라던가, 버그 로그 박혀있는 거라던가, 어떤 결정이 어떻게 내렸고 어떤 Evaluation을 예전에 한 것 같은데 뭐가 어떻게 됐고 이런 것들, 그리고 지금 제가 디자인하고 있고 여러 번 바뀌는데, 어쨌든 제가 혼자 하는 그런 것들은 다 원노트에 들어갑니다. 원노트를 제가 열심히 정리하다가 정리가 됐고 이 어떤 새로운 디자인이 나왔거나 이랬을 때 그것도 구현이 됐고 최종안이 나왔고 이럴 경우에는 그 원노트를 위키로 옮겨서 정상 문서로 만들어요.

원노트가 마크다운으로 내보내기가 잘 안되는 단점은 있어요. 그것 좀 지원해 주면 좋겠는데, 그거만 잘 되면 아마 좀 더 편하지 않을까 생각해요. 그러면 그냥 복붙 해갖고 넣기만 하면 되니까. 근데 그게 아니기 때문에 최종 문서가 현재 할 때는 복붙한 다음에 포맷팅을 좀 바꾸거나 이런 이상한 짓을 해야 되죠? 하지만 그게 여전히 나아요. 그리고 일단 원노트 같은 경우에 새로운 스펙 뽑을 때, 유저 스토리 스펙 뽑을 때, 그런 경우에는 유저 스토리 보드가 있을 거 아닙니까? 거기에다 그냥 Description에 갖다 복붙 해요. 그럼 포맷팅은 좀 깨지는데, 그래도 없는 것보다는 나으니까 원래 여기 이 원노트가 어디서 왔는지 링크도 달아두고, 원노트에도 '이 유저 스토리에서 복붙 했어.'라고 크로스 레퍼런스 되게 적어두고, 이제 모든 일이 끝나면 원노트는 지워지고 요런 식으로 작업을 합니다.

그래서 그게 저희 세 가지의 이제 노트 정리나 문서화의 그 방법이 되고, 이 외에 저희가 회사 내에서 뭔갈 하고 개인적으로 사용하고 있는 문서화나 노트 같은 건 없어요. 근데 이제 그 외에 또 한 단계 더 나아가면 '프로젝트 관리 어떻게 합니까?' 이런 얘기 하잖아요? 제가 진짜 프로젝트 관리 도구 정말 많이 사용해 봤어요. Jira도 사용하고, 뭐도 사용하고 현존하는 모든 것들을 거의 한 번씩은 사용해 본 거 같아요. 회사에서던 다른 회사에서 일하던, 아니면 제가 외주를 나가서 해주던, 우리 회사던. 근데 결과적으로는 프로젝트 관리 기법 도구들이 굉장히 많지만, 회사에서는 이 프로젝트가 어떻게 진행돼 가고 있는지 리포트가 잘 나고 스탯이 잘 나와야 해요. 그러기 위해서는 툴 지원도 중요하지만, 회사 자체에 가지고 있는 프로젝트 관리 기법도 되게 중요해요, 어떤 걸 어떻게 수치화하는지. 그 수치화가 나오면 걸 통계로 뽑아줄 수 있는 툴들이 있어야 하거든요? 굉장히 많은 Kanban 기반의 프로젝트 관리 도구는 그게 안 돼요. 그래서 '이런 To Do 목록 좋다더라', '이거 좋다더라' 이런 거 말고, 원래부터 프로젝트 관리용으로 나왔던 애들, 그중에 하나를 골라서 사용해야 하는 거 같아요. 저희는 Azure DevOps를 사용하고 있고, 그게 'Jira가 돼도 문제는 없지 않을까?' 생각은 하는데 리포팅 기능 자체가 Jira도 나쁘진 않은데 Azure DevOps 리포팅 기능이 굉장히 좋아요. 근데 뭐 비슷한 걸로 Redmine, Open Source 이런 것도 굉장히 좋고, 리포팅 잘 나오고, 그냥 수치 트렌드 보이고, 이게 얼마나 끝났고, 얼마나 일이 남았고 이런 거 잘 뽑아주는 애들, 그런 애들이면 상관없고, 그래서 좀 더 정상적인 프로젝트 관리 도구를 사용하고요, 여기에 들어가는 내용들은 Bug Tracking, 그리고 새로 만드는 기능들에 대한 그런 것들이 들어가요.

하지만 이것만으로 안 되는 것들이 있는 게 일반적으로 운영을 하면서 반복되는 것들. 개발팀이라면 반복적으로 해야 하는 일들이 있을 거고요, 이것도 괜히 쓸데없이 그런 유저 스토리에 넣고 뭐 이렇게 하려고 하는데 안 되더라고요. 반복되는 Task는 계속 반복적으로 생성이 돼야 되는데, 전통적인 프로젝트 관리 기법들은 그걸 잘 지원을 안 해요. 그래서 그런 걸 저희가 관리할 때는 Quire라는 걸 사용해요. 이게 Asana와 비슷한 건데, 그것보다 조금 더 첫 개념을 잘 잡고 들어간, Todo 목록이 있고 그 안에 Sub List 만들 수 있는 건데, 이걸 Kanban만 목록으로도 보여줄 수 있고, Calender View로도 보여줄 수 있고 Timeline View로도 보여줄 수 있고, 되게 개념을 잘 잡았고, 자기가 잘 커스터마이징하면 잘 쓸 수 있고, 마크다운 기반이기도 하고, 그리고 자동 생성되는 Task도 설정할 수 있어요. 그래서 저희는 반복되는 것들을 많이 하고 그 외에 저희 회사가 학기제로 운영이 되거든요? POCU 아카데미가 1월, 5월, 9월. 그럼 매 학기마다 특정한 주차, 특정한 날에 반복돼야 하는 일들이 있어요. 그런 경우는 어떤 템플릿을 구글 스프레드시트를 잘 만들어서 Term, 학기제만 딱 넣으면 날짜 별로 어떤 일이든지 쫙 뽑아주고 태그도 예쁘게 달아줘요. 스프레드시트에 있는 거죠? 그 스프레드시트 복사 해서 Quire에 붙여 넣기 하면 Task 목록 쫙 만들어 주거든요. 그래서 그런 식으로 템플릿 만들어서 학기 시작할 때 다 복붙 해 놓고 그럼 그 학기 해야 될 일들 100가지, 200가지를 한 번에 붙이고 시작을 하죠. 그런 식으로 뭔가 반복되고 이런 것들, 신규 개발 아닌 것들, 그런 것들은 Quire를 사용을 합니다.

그래서 노트 정리나 문서화 3개, 그리고 프로젝트 관리 이거 2개, 저희는 그걸로 운영을 하고 있고, 많은 회사에서는 프로젝트 관리 기법 도구를 2개를 사용하지는 않을 거예요. 근데 제가 볼 때는 Maintenance, 유지보수, 반복 작업 많은 회사, 기타 등등 업무들은 정말 Todo 기반의 요런 것들, 특히 Ctrl + c, v해서 다른 도구에 붙여넣기 쉬운 것들 이런 것들이 꽤 도움이 되는 것 같고요, 신규 개발,버그 고치기 이런 것들은 프로젝트 관리도구 제대로 된 거, 전통적인 것들로 하면 훨씬 더 효율적으로 되는 것 같아요. 보통은 이거 두 개 합쳐서 '일이 얼마나 처리되는지 보자' 이런 얘기하는데, 중요하지 않아요. 실제 봐야 하는 건 버그가 얼마나 잘 고쳐지는지 새로운 기능이 얼마나 나가는 건지고, 이런 잡무가 많아져서 일이 많다는 걸 여기에 합쳐서 하나로 통계를 낼 방법은 쉽지 않더라고요. 이건 그냥 따로따로 통계한 다음에 나중에 합쳐 보면 되는 거고, 굳이 처음부터 해서 하는 건 아닌 거 같아요.

그래서 저희는 그렇게 합니다. 이게 많은 분이 되게 궁금해하시는 부분이더라고요? 저희도 온갖 제품 다 써보고, 온갖 프로세스 다 써보고 결론적으로 왔던 방식이 여기기 때문에. 그리고 매우 행복합니다. 이걸 바꿀 생각은 지금은 없어요.

포프였습니다.