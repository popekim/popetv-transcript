또 이번에도 빼먹지 않고 만들게 됐어요. 제 생각에는 이거하고 이거
다음 편만 만들면 저한테 7월 말이 지나갈 것 같아서 그 다음부터는
시간이 좀 여유롭게 포프팀을 만들 수 있지 않을까 하는 생각에 조금
더 마음이 놓이고요. 그리고 아무래도 일이 덜 바빠지니까 술을 남용하는
일이 좀 적을 것 같아서 그럼 좀 더 맨정신으로 열심히 만들 수 있을
것 같아요. 처음부터 시작해서 얼굴에 좀 이상한 게 많이 났는데 제 생각
에는 절반의 이유는 일에 바빠서 피곤한 것도 있었고 다른 쪽 절반
의 이유는 제 생각에는 일이 바빠 지고 이러면 제가 은근히 알코올
에 의존하는 경향이 있기 때문에 그것 때문에 피부가 굉장히 안 좋아
했던 게 아닌가 하는 생각도 들고 어쨌든 간에 아 오늘 할 얘기 맞아
. 오늘 할 얘기는
제가 예전에 좀 오래된 얘긴데 사실 트위터에 한 번 이 얘기를
했다가 조금 논란이 된 적이 있어요. 제가 의도하는 거에 본질을 못 보고
본질 외에 곁다리를 자꾸만 보고 거기에 뭐 왜인지는 모르겠지만
나름대로 열받아 하시는 분이 있었는데 뭐 그거야 별로 중요한 얘기는 아니고
사실 게임 개발자들이.
.
뭐 반드시 게임 개발자 쪽은 아니 겠지만 뭐 게임 개발이라던가 아니면
리서치 연구가 굉장히 많이 들어가는 그런 분야에서 실제 실무에서 일을
하시는 분들은 학계 쪽 자료를 볼 일이 가끔 있어요. 그 이유가 뭐냐
면 이제 학계 쪽은 아무래도 바로 현재 실현 가능한 그런 알고리즘
이나 뭐 그런 새로운 방법을 만드는 것보다는 어느 정도 시간이 걸리더라도
이제 미래에 이런 가능성이 있다 싶으면 그거에 대한 연구를 하고
자료를 발표하고 그게 학계에 나오는 거고 이제 그게 뭐 어느 정도 시간이
지나서 하드웨어 발전이 있거나 아니면 정말 우리가 그 필요한 상황이
왔을 때 그거를 이제 실무자들이 많이 가져다 쓰는 경향이 있거든요
물론 요즘 같은 경우는 또 실무자들이 새로 발견한 그런 기법들을 또 어디
가서 발표를 하기 때문에 그게 이제 학교 자료 학계 자료와 거의 동등한
수준으로 발표가 되는 경우도 물론 있고 이제 그 가장 좋은 예가 이제
씨그래프라고.
.
.
대한 세계에서 가장 유명한 컴퓨터 그래픽스 쪽이죠.
뭐 여기서 그래픽스라고 하면 그냥 단순히 디자인을 의미하는 게 아니라
실제 3d 그래픽 뒤에 들어가는 모든 기술이나 그런 것들 포함하는 거 가고
그래서 이제 애니메이션 업계나 아 게임업계 이런 쪽에서 많이 가
게 되죠.
그래서 저도 아무래도 그래픽 프로그래머 일을 되게 오래 해왔기 때문에
결과적으로 저희가 이제 3d 그래픽 이론이라고 해서 거기서 배우고
공부하고 구현하고 게임 속에 넣고 이런 것들이 사실은 그런 데에서
가져온 거였어요.
썼던게 3d 그래픽에서 저희가 흔히 쓰는 그런 기법들 있잖아요 그게
길게 보면은 거의 50년 60년 70년 전에 수학자들이 개발한거를 저희가
이제 드디어 뭐 3d 하드웨어 있고 뭐 이렇게 돌릴 수가 있어서 돌리는
것 뿐이거든요 실제 지금 쓰는 조명 계산이나 이런 것들을 보면은 굉장히
오래된 조명 계산들이 많아요 그래서 중요한 거는 그 지난 60 50 뭐 70년
중에 그 하드웨어 개발이 굉장히 느렸던 적이 있었고 그 순간에 이제
그 어느 정도 뒤부터 갑자기 하드웨어 발전이 굉장히 빨리 일어난 적이
있어요 이제 그게 제가 봤을 때 지난번 콘솔 세대가 그런 세대였
거든요 그래서 그동안에 굉장히 많은 기술들을 저희가 접목을 했
고 그거를 실제 3d 그래픽에서 많이 이용을 했죠 저희가 반드시 3d 그래픽
을 얘기하는 게 아니라 뭐 게임 플레이 프로그래머 하시는 분들은
분명히 길찾기 알고리즘이라든가 이런 모든 것들이 아 예전에는
옛날에 개발된 거를 지금에서 열심히 쓰게 되는 경우도 있고
뭐 ai behavior tree 뭐 기타 뭐 애니메이션 뭐 이런 behavior 이런 것들 전부 다
사실은 학계 쪽에서 나온 자료가 굉장히 커요 그래서 게임 프로그래머
하시다 보면은 어느 순간에는 그런 학계 자료를 볼 일이 있을 거예요
왜냐하면은 게임은 언제나 새로운 걸 추구하니까 아 이 게임에서 좀
이렇게 새로운 걸 해보자 그러면 그거를 어떻게 구현해야 할지를
고민할 때 개인이 처음부터 만드는 법도 있지만 당연히 다른 사람이
해 놓은 그런 업무가 있으면 그 업무를 어떻게 구현해야 할지를

그 업무를 보고 거기서 뭐 필요한 건 받아오거나 아니면 그 사람은
이미 뭔가를 뭐 experiment 실험을 했고 그 결과를 논문 등으로 발표
해놨기 때문에 그거를 참조해 줬 으면 참 좋은 거죠 그래서 그건
굉장히 좋은 건데 제가 그때 트위터 에서 했던 얘기는 그거였어요 학
계에서 가끔 자료를 낼 때 이게 실시간으로 돈다 아니면 이게 정말
뭐 interactive frame rate라고 돈다고 하거든요 실시간은 리얼타임이고
interactive frame rate는 아 그 정도 속도 까지는 아니어도 그래도 상호작용이 가능한 프레임이 되거든요 그래서


1초에 10프레임 정도 그니까 뭐 아무리 제가 실시간이라고 말할 수
있는 31초에 30프레임이 안 나오면 저는 실시간이라고 못 보거든요
실제 그게 업계에서 흔히 받아들이는 아 그런 뭐라 그래 통념이기도 하고
그리고 interactive 아까 상호작용이 가능한 그런 프레임 레이트는 10프레임
레이트까지는 줄 것 같아요 1초 에 10프레임 정도 업데이트가 가능
하면 근데 중요한 거는 이게 학계 에서 용어를 굉장히 느슨하게 써요
그리고 왜 그렇게 하는지도 대충 알겠지만 학계에서 일단 느슨하게
쓴 경우는 자기 홍보 효과가 꽤 있다고 봐요 내가 논문을 내면서
이게 실시간으로 돈다라고 하는 거와 실시간으로 안 돈다고 하는
거에 그 의미의 차이가 크잖아요 그러면 저는 한 20프레임만 돌아도
실시간으로 돈다라고 말하고 싶 죠 그리고 어떤 의미에서는 뭐
tv 애니메이션이나 이런 경우에선 솔직히 24프레임 20프레임만 도는
경우도 있기 때문에 그걸 실시간 이라고 말할 수도 있기는 있어요
근데 이제는 컴퓨터 그래픽 업계 에서 최소한 30프레임은 돼야 실시간
으로 60프레임까지 돼주는 걸 바라는 경우도 꽤 있죠 그래서 저는
그거에 대한 불만이 일단 있는데 제가 하고 싶은 말은 학계에서 어떤
자료가 실시간으로 돈다라고 나왔 을 때 실무자 입장에서 그걸 그냥
곧바로 보고 아 이게 되는구나 라고 그냥 데모 프로그램을 대충
한번 돌려보고 그래 게임에 놓쳐라 고 결정을 하지 마시라는 거예요
언제나 학계에서 나오는 자료는 검증과 검토를 하라는 말씀을
드리고 싶어요
학계 문화가 서로 다른 다른 그런 논문을 뭔가 잘못 있을 때 까는
문화는 솔직히 아니에요 오히려 그것보다 나은 거를 만들려고 하는
문화지 사실 보면 굉장히 좋은 공생 과개라고 저는 생각을 드는데
저희 실무자 입장에서는 아무래도 여기서 실시간으로 돈다라고 했으면
저는 믿고 실시간으로 썼으면 좋 잖아요 근데 그게 안 되기 때문에
언제나 그거를 받아보고 그 기법 을 직접 돌려보고 심지어는 게임
에 넣어보고 테스트로 반드시 제대로 처음부터 넣을 필요는 없죠 어떻게
든 프로타임 안에서 넣어보고 그게 정말 논문에서 주장하는 실시간이
맞는지를 확인한 뒤에 그게 정말 자기 게임에 도움이 되면 넣겠다고
결정을 하라고 말씀드리고 싶어요 제가 이 말씀을 드리는 이유가 제가
그랬잖아요 지난 몇 년 동안에 저번 콘솔 세대에 굉장히 많은
하드웨어적의 발전이 있었고 그래픽 쪽에서 그래서 많은 그래픽 프로그래머
들이 그런 함께 나오는 그런 자료 들을 열심히 적용을 하려고 했고
그리고 그런 과정에서 그런 실수를 저지르는 사람들을 많이 봤어요
아 이거 되는구나 멋지구나 그래서 도입하겠다고 결정을 하고 도입
하다 보니까
그게 안 도는 거야 그럼 그때 아무 생각없이 빼면 되는데 또 사람이란
게 일단 결정을 내리고 하겠다고 마음먹은 상황에서 중간에 포기하는
게 더 어려운 것 같아요 그래서 이미 뭐 아티스트나 누구한테도
이걸 하겠다고 말을 해놨기 때문에 그걸 또 맞추려고 열심히 노력하다가
결과적으로는 맞추지도 못하고 적당히 절반짜리 구현해갖고 실제
안 하느니만 못한 그런 경우도 봤 고 그래서 실제 몇 개월 동안 낭비
를 하는 사람들도 봤고 프로그래머 중에 그래서 그런 게 있기 때문에
그 부분을 좀 한번 언제나 확인을 하고 가시라는 말씀을 드리고 싶어
요 그리고 또 하나하나 주의해야 될 거는 뭐 인터랙티브 프레임 레이터
도 충분한 경우가 있죠 10프레임 포 세컨드만 나와도 뭐 실제 뭐 라이트
맵을 만든다거나 뭐 aomap을 만든다 거나 이런 거는 충분히 속도가 느려
도 천천히 뭐라 그러죠 반복하면서 업데이트하면서 괜찮은 뭐 비주얼
을 만드는데 도움이 될 순 있어요 근데 여기서 또 한 가지 주의해야
될 게 학계에서 말하는 실시간은 진짜 실시간인 경우도 있어요 초당
30프레임 나오는 실시간.
근데 여기서 정말 중요한 점은 그거는 말 그대로 그 학계에서 논문에서
주장하는 내용을 하는 게 실시간 이죠 예를 들어서 그래픽의 얘기를
든다면 화면에 그래픽을 그리는 것만이 실시간이에요 1초에 30장을
그릴 수 있을 정도 근데 게임은 그래픽만이 아니잖아요 그래서
영화계획에서는 쓸 수 있을지 모르겠지만 게임에서는 이건 실시간은 아니에요
실제 ai도 돌려야 되고 뭐 애니메이션 같은 것도 업데이트 해줘야 되고
ui도 그려주는 것보다 ui도 업데이트 해줘야 되고 뭐 로직도 돌려줘야
되고 이거 저것 저것을 다 합해서 저희는 30프레임이 나가게 되거든
요 그래서 엄밀하게 따지면 모든 일을 진짜 gpu에 완벽하게 쏟아붓고
cpu 쪽에 부하가 전혀 없지 않는 이상은 학계에서 30프레임의 실시간이라고
나오는 거는 게임에서 곧바로 접목 이 거의 불가능해요 그리고 물론
그거를 누군가가 발전시키고 개선 시켜서 그걸 빠르게 만들 수도 있고
그게 저희의 임무가 될 수도 있죠 실제 저희가 그러는 경우도 있고
근데 제가 지금 드는 한 가지 우려 는 그거예요 진압 콘솔까지 제가
굉장히 하드웨어가 발전시켰어요 .
발전이 빨랐다 그랬잖아요 그러면 그 발전이 다음 콘솔 세대도 이어질
거냐 이미 아니라는 게 판명이 났 죠 지금 ps4나 xbox one 정도에 들어가는
하드웨어 수준이 실제 웬만한 컴퓨터 보다 못하니까 그러면 일반 사람들의
컴퓨터는 더 발전될 거냐 발전이야 되겠지만 컴퓨터를 그렇게 많이
살까라는 의심이 드는 거예요 이제 가면 갈수록 왜냐하면 저도 제가
가지고 있는 컴퓨터가 팬티엄4 아니 i7 처음 나왔을 때 그거예요
2008년 2009년인데 그것도 아직까지 아무 무리 없이 쓰고 있고 실제
뭐 다른 컴퓨터를 쓰더라도 제 컴퓨터 가 빠르다는 걸 못 느껴요 ssd 들어간
컴퓨터만 좀 빠를 뿐이지 그러면 저도 개발자의 입장인데 업그레이드
할 필요를 못 느끼는데 실제 그냥 컴퓨터를 쓰는 유저의 입장에서
진짜 진짜 진짜 하드코어 게이머 가 아닌 이상 굳이 뭐 그래픽카드
도 좋은 거 올라오고 cpu도 좋은 거 올라올까 좀 의심스러워요 그리고
어찌 보면 그래픽카드의 성능도 발전시키는 것도 어느 정도 이제는
좀 느려지고 있고 그리고 이제 뭐 그보다는 저효율 저효율 아니죠
이제 저전력 이런 쪽에 좀 더 노력 을 기울이고 있고 그거보다 또
굉장히 많은 클라우드 쪽을 기반으로 한 그런 서비스가 또 발전하고 있는
상황에서 뭐 그런다고 제가 클라우드 게이밍이 완벽하게 지원될 거란
생각은 안 하지만 그쪽이 어떻게 보면 게임 쪽에 접목이 돼서 뭔가
또 뭐라 그래요 cpu 파워를 더 가져오는 법은 있겠지만 제가 생각할 때 그래픽
쪽에서의 발전은 예전만큼 빠르지 않을 거예요 그러면은 지금부터
역시 리서치 하는 사람들이 이제 또 계속 앞서 나갈 거고 저희
실제 실무에서 쓸 수 있는 거는 그만큼 못 따라잡는 경우가 올 수도 있기
때문에 제 생각에는 저번 세대에서 아 이거는 우리도 다 할 수 있다라는
마인드셋을 가졌다면 요번 세대 는 조금 주의하고 약간 뒤로 물러
서서 그런 거를 좀 더 검증하는 자세가 중요할 것 같다는 생각에서
비디오를 만들었고 뭐 이 비디오를 보고 제가 트위터에서도 그때 오해
는 그거였던 거 같아요 이 비디오를 보고 제가 학계를 깐다고 생각하시는
분들이 있었어요.
물론 제가 학계를 안 깔 이유도 없고 깔 이유도 없어요 학계도
분명히 일 제대로 하시고 멋지게 하시는 분들이 있고 저는 그분들
존경하고 그분들이 해주신 수많은 일 때문에 제 일도 쉬웠고 그만큼
제 게임도 좋게 나오고 매우 고맙 고 그에 비해 뭐 어느 업계나 똑같이
얘기하잖아요 어느 업계나 일 제대로 하는 사람은 20% 미만이라고 저는
학계도 마찬가지라고 봐요 그래서 그만큼 수많은 쭉쩡이의 자료들이
또 있고 그 수많은 쭉쩡이를 대부분은 보지 않지만 어쩌다가 진짜 멋있게
보이는데 여태까지 아무도 검증 을 안 했는데 제가 검증을 했는데
솔직히 논문에서 주장하는 것만큼 사실은 아니었다라는 게 제 눈으로
발견을 하게 되면 저는 아무래도 깔 수밖에 없는 거고요 그래서 일단
게임 프로그래머들 쪽한테 그리고 다른 실무자들한테 하고 싶은 말
은 그런 학계 자료가 나왔을 때 100% 믿지 말고 검증을 통해서 확인
을 하라고 말씀을 드리고 학계에 계시는 분들은 그 예전에 생각하던
그런 실시간하고 인터랙티브 레이트 의 개념을 좀 벗어내셨으면 해요
.
.
그 개념이 최소 30프레임이 나오고 인터랙티브도 최소 10프레임 15프레임
이 나오는 게 사실이기 때문에 그 정도의 마인드셋을 가지고 용어
정립을 한번 좀 제대로 해왔으면 좋겠다는 생각을 하고 그러면 아무래도
서로 피곤한 일이 좀 적어지고 그리고 다른 사람들이 본인을 욕하는 일도
적어지잖아요 사실 그러면 그래서 그런 부분에서 좀 신경 썼으면
하고 그 정도 얘기하면 될 거 같아요 오해도 대충 그 정도면 풀릴 거
같고 그래서 마지막으로 그냥 다시 하고 싶은 말은 학계 쪽 정리도
자료를 쓸 때 언제나 좀 한번 검증 을 해보고 쓰시라고 뭐 몇 번 이미
데이신 분도 계실 거고 이미 그거를 처음부터 잘하시는 분도 계실 거
지만 꽤 경력 많고 실력 좋은 그래픽 프로그램에도 그런 실수를 저지른
걸 봤기 때문에 우려의 말씀에서 한번 의향 만들었고요 예 포프였습니다
