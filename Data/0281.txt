안녕하세요.
포프입니다.
이번에는 또 격으로 나가죠.
음질 나쁜 방송 지금 어쩌면 실리콘밸리 쪽에 출장중이라고 얘기할 수 있어서
또 이렇게 음질 나쁜 방송을 만들고 그러나 이거는 만든지 1시간 만에
올라가는 따끈따끈한 방송이 될 거예요.
편지 필요가 없으니까 좋잖아 오늘 할 얘기는 최근에 이제 또 새로운
일을 조금씩 하다 보니까 거기서 다시 한 번 느끼게 된 여러 가지
그 뭐라 그럴까 문제라고 하나 아니면 제가 이제 특정 테크 스택
아니면 특정 회사의 제품을 더 즐기는 이유를 말하려고 해요.
그리고 저의 이제 주장은 개발자 라면 뭐라 그럴까 개발에 집중할
수 있으면 더 좋은 거지 그 외에 그 개발에 전혀 상관이 없는 그냥
남 그 테크를 제공하는 사람들이 뭐라 그래 게을러서 깽판 쳐놓은
거를 우리가 다 고쳐주면서 해야 되나
그런데 왜 시간을 다 걸리지 않냐.
왜 시간을 낭비해야 되지 내 귀중한 시간을 이런 개념에서 시작을 할
것 같아요.
이 이야기를 하게 되는 계기가 솔직히 최근에 새로 연 그 유튜브 채널
있잖아요.
일상 라이브라고 이제 제가 일상의 얘기를 막 비디오로 올리기도 하고
가끔 일하다가 여기서 심심하면 라이브를 열기도 하고 사람들 채팅
하고 아무것도 안 하고 그런 거의 아프리카 방송급의 그런 채널이
나왔는데 거기서 라이브가 안 되는 거예요.
그러니까 라이브를 할 때 우리가 어떻게 하는 법이 있냐면 유튜브
에서 라이브를 걸어두고 이제 그거를 이제 유튜브에서 유튜브가 아니지
구글에서 제공하는 행아웃이라는 프로그램이 있잖아요 거기 들어가면
10명까지 자동으로 가입 그러니까 채팅을 할 수 있고 화상채팅이죠
그리고 그거를 자동으로 스트리밍 을 해줘요 유튜브에 그래서 제
컴퓨터 이제 밴드위스트를 거의 안 쓰고도 쉽게 라이브를 할 수 있는
방법인데 음.
그.
뭐라 그래.
그.
뭐라 그래.
그게 안 되는 거예요.
시작만 했다 하면은 이제 행아웃 을 시작을 하잖아요 그러면 아 네가
잘 뭔가 에러가 있었다 나오고 그다음에 한 번 더 이제 화면을 리프레쉬
하면은 아 너는 이 뭐라 그럴까 행아웃 을 시작할 그 권한이 없다 이렇게
나오는 거예요.
그래서 이게 뭔가 몇 주 동안 계속 돼서 그거를 찾아봤어요.
그러니까 이미 한 1 2주 정도 이미 문제가 있는 부분이고 예전에 있던
문제도 있는데 몇 년 전에 비슷한 에러 메시지로.
그게 같은 문제라고 보이지는 않고 1 2주 동안 이게 계속 문제가 있는
거예요.
그래서 제가 서포트 티켓을 열어보고 포럼에도 물어보고 했는데 이제
그게 음.
아무런 반응이 없어.
걔네도 모르는 거야 막 이상한 질문 하고 계속 야 네 거 뭐 뭐
여기저기서 해봤어 다 해봤어 내가 뭐 캐시도 지워보고 다 해봤지
그럼 내가 안 했겠냐 강을 못 잡 아서 하도 열 받아서 제가 디버깅
을 시작을 했어요 그냥.
얘가 시작될 때 왜 리퀘에스트를 어떤 걸 쏘는지.
그리고 제대로 작동하는 다른 라이브 채널이 있거든요.
지금 나가는 채널도 그러고 그것도 디버깅을 해봤어요.
그러니까 뭐가 차이가 있는지 보다 보니까 재밌는 게 이제 뭐 무슨
키를 가져오고 이럴 때 이제 에러 가 나요.
인터널 에러가.
그래서 아 이거 이상하다.
그래서 이게 또 지금 특징 중에 하나는 이 채널이 브랜드 페이지로
나가는 거거든요.
지금 채널 말고 다른 채널 그러니까 원래 제 구글 계정이 하나가 있고
거기다가 이제 구글 플러스에다가 브랜드 페이지로 나가는 거거든요.
그래서 거기에 브랜드 아카운트를 만들 수 있어요 자기 회사 홍보하기
위해.
그래서 그거를 만들면 거기에 유튜브 채널을 연동해서 한 개인 계좌
계좌 이메일 계정에 브랜드 아카운트 를 여러 개 만들어서 유튜브도 여러
개 만들 수 있게 돼 있거든요.
그래서 아 이게 어차피 로그인하는 거는 그 브랜드 아카운트를 로그인
을 하니까 구글 플러스에서 문제가 되면 또 문제가 있겠다.
구글 플러스에 들어가 봤어요.
근데 재밌는 게 구글 플러스에 들어가 보니까 메뉴가 거의 안 나와요.
제가 로그인된 건 나오는데 그 외에 메뉴가 안 나와.
구글 플러스에 있으면 뭐 포스트도 해야 되는 것도 있고 그런 메뉴가
전혀 안 나오는 거예요.
그래서 아 이게 뭔가 구글 플러스 에서 이상이 있구나 그래서 좀 더
뒤져봤어요.
그랬더니 결국 뭐 한 세 네 시간 뒤 져서 찾은 건데 더 이상 구글 플러스
에서 브랜드 아카운트 생성이 안 돼요.
그 대신 얘네가 이 브랜드 아카운트 생성을 마이 비즈니스 쪽으로 옮겨
버린 거야.
구글 마이 비즈니스가 새로 나왔 거든요.
근데 이제 브랜드 아카운트 생성을 다 그리로 옮겨 버린 거예요.
그래서 생각을 해보니까 아 그러면 이게 왜 문제일까 그래서 보다
보니까 아 얘네가 구글 플러스로 연동을 해서 이제 옮겼는데 유튜브
에서는 기본적으로 새로운 채널을 만든다 그러면 브랜드 아카운트를
자동으로 만들어줘서 거기 연동 을 해주는 거거든요.
내부적으로 브랜드 아카운트를 만드는 데 페일을 했던 것 같아요
.
그래서 좀 더 뒤져보니까 제가 지금 이 비디오가 나가는 채널은
구글 앱스 있잖아요 계정 회사에 이제 gmail 연동해주는 그런 거 내
도메인으로 제가 그거를 써요.
그래서 그거 보면은 지금 니네 회사에서 사용 가능한 서비스를 enable disable
할 수 있게 하고 할 수 있거든요 그러니까 이제 제 회사 계정에서
유튜브를 가입을 못하게 막을 수도 있고 이런 게 있어요.
그래서 그걸 봤지 봤는데 다른 건 다 활성화되어 있는데 제가 옛날에
활성화 해놨으니까 구글 마이 비즈니스는 활성화가 안 돼 있는 거예요.
그럼 보면은 생각이 되잖아요.
아 그러면 유튜브에서 계정을 만들 려고 그랬어 브랜드 아카운트를.
근데 만약에 내가 일반 gmail이었다 면 회사 계정이 아니라 그러면
분명히 마이 비즈니스가 기본적으로 enable 되어 있을 테니까 거기서 생성을
완성을 해서 브랜드 아카운트 제대로 만들고 그 다음에 유튜브 채널
도 활성화해서 연결을 시켜줬을 것 같아.
근데 저는 기본적으로 새로 추가되는 서비스는 무조건 disable 하는 게
기본 설정이거든요.
그럼 유튜브 채널을 만들었어.
만드는 순간 브랜드 아카운트로 만들려고 했는데 그게 실패를 한
거야.
마이 비즈니스 페이지가 없으니까.
활성화 안 돼 있으니까.
근데 그럼에도 불구하고 유튜브 채널
은 만들어졌기 때문에 난 만들어졌다고 우기고 있고 이벤트를
시작하려고 할 때 로그인하려고 했는데 로그인이 실패하는 거죠.
마이 비즈니스 페이지가 없기 때문에.
그래서 그거 이제 다 정보 모아서 구글 쪽에 보내줬어요.
야 넌 엔지니어한테 그거 보내라.
근데 이제 서포터 하는 애들이 이해를 못 해.
그래서 아 뭐 이것저것 물어봐요 .
잔소리 말고 나 귀찮게 하지 말고 그대로 보내면 니네 엔지니어가
고칠 수 있는 문제니까 보내라고.
두 번이나 이메일 보냈고 좀 쏴 준 적이 있어요.
그러니까 뭐 아 좀 더 많은 정보를 달라고 해서 필요 없다고.
엔지니어는 그것만 알면은 무조건 고칠 수 있다고.
그래서 결과적으로 이제 저는 어떻게 고치냐면은 마이 비즈니스
이네이블하고 이미 채널 만들었 잖아요.
그러니까 이거를 새 걸 또 만들 수가 없어.
그래서 그다음에 이제 이 새로 비즈니스 만든 거를 매뉴얼하게
만든 거에 이제 채널을 트랜스퍼 할 수가 있거든요.
그래서 했어요 하기는.
그래서 된 거예요 라이브가.
그래서 제가 이걸 보면서 느낀 게 아 얘네 구글은 도대체 뭐 하는
애들일까 지금.
얘네들이 이제 옛날에 구글 플러스 밀겠다고 구글 플러스에 모든 걸
연동을 시켰거든요.
그래서 지금 구글 플러스가 안 되니까
하나씩 끊으면서 다른 서비스로 옮기려고 하는 거 같은데 그건 좋아요
.
근데 이게 그 서비스에 연동이 됐다 는 걸 알고 있잖아요 누구나.
그러면은 그걸 바꾸는 사람 입장에서 pm이든 뭐 엔지니어 디렉터든 아
그러면 연동이 됐을 때 이거를 바꾸므로 인해서 다른 기능이 뭐가
뽀개지는지를 테스트해야 된다고 보거든요.
그리고 지금 뭐 구글 앱 수가 굉장히 많이 쓰고 있는데 그거 테스트 안
하고 이 서비스를 이렇게 올릴 수 있나.
그리고 버그가 났을 때 이거를 못 고치고 있나.
2주 3주가 지나도록 엔지니어한테 보내지도 않고 뭐 하고 있는 거지
라는 생각이 드는 거예요.
그리고 이거는 오늘 그래서 제가 구글을 고치는 얘기고.
그 다음에 이제 최근에 이제 자바 스프링 서버를 좀 많이 만졌어요
.
왜냐면 그전에 있던 여기 있던 스택 이 좀 자바 쪽에 있어갖고 조만간
갈아엎을 거긴 한데 만지면서 자바 가 정말 구리구나를 다시 한 번
깨달았어요.
그 깨달은 게 뭐냐면 자바가 정확히 오픈소스가 아닐 수도 있는데 지금은
어쨌든 오픈소스도 시작을 했고 자바 스프링도 제 생각에는 오픈소스
쪽 진영인 거 같아요.
근데 이제 얘네들이 이걸로 갖고 이제 뭐 흔히 유행하는 뭐 mbc다
뭐다 이런 여러 개를 하려다 보니까 자바 자체 지원으로 안 되는 게
많잖아요.
그러면은 이제 자바에서 지원하는 다른 거를 이용해서 새로운 기능을
지원하려고 되게 노력을 많이 했어요 .
애노테이션이라던가 뭐 자동으로 getter setter 만들어주는 그런 애노테이션
을 받는다던가 뭐 오토와이어에 갖고 뭐 디펜던스 인젝션을 하려고
또 한다던가 그런 경우에 이제 굉장히 매직 키워드잖아요.

어찌 보면은.
막 그거 하나 넣으면은 되니까 근데 제가 이제 그래서 이제 저도 예전에
자바 스프링을 약간 만져보긴 했 지만 또 다시 보면서 느낀 게 뭐냐
면 일단 문서화가 드럽게 안 돼 있어요.
그리고 뭘 하나 하고 싶으면 사람들이 이제 찾아보잖아요 외도에서 아 뭘
어떻게 해야 될지.
그러면 보통 스택 오버플로우를 많이 보게 되는데 다른 데 완만한
게 없으니까 스택 오버플로우에서 똑같은 일을 하는 방법을 대여섯
개를 알려줘요.
여러 사람이 얘기하니까.
.
이 중에서 과연 뭐가 최고지 뭐가 지금 작동을 하고 뭐가 안 되는
거지라는 개념도 없고 베스트 프랙티스 라는 가이드가 없어요.
그래서 다 중구난방이야.
그리고 심지어는 아까 말했던 애노테이션 에 오토와이어하고 막 이런 거 보면
은 오토와이어의 기본 동작이 뭐야 싱글턴이에요.
제가 얼마 전에 싱글턴 얘기했었 잖아요.
그러면 리퀘스트마다 이거를 스레드 를 뽑아서 하는 게 스레드가 아니라
잡이죠.
태스크를 뽑아서 하는 게 훨씬 나는 경우가 더 많다고 저는 보는데.
.
.
요 겹겠습니다.
.
.
.
.
.

.
.

.
.

. .
. .
.
. . . . .
. . . . . . . . . . . . . . . . . . . . . . . . . . . . especially
.
.
.
.
.
.
.
.

.
.
진영에서 요즘 한국이 SI쪽에 자바를 많이 쓰고
그쪽에 품질이 구리다는 얘기를 솔직히 많이 하잖아요
그럴 수 밖에 없는 이유가 이 언어의 중구난방성 때문이구나 라는 생각을 하게 돼요
뭐 ID부터 시작해서 뭐 패키지 관리부터 시작해서
뭐 온갖 것들이 그냥
아 이거 필요하니까 누가 만들어서 오픈소스로 만들었어
많이 써 다음 버전 올라가면 망가져
그럼 또 누가 또 다른 버전 만들던가? 새 걸 만들어 또 써
그러면 베스트 프레티스 없이
야 이거 옛날 것도 지원되고 요즘 것도 지원이 되는데
이거는 실행 중에 어쩌다가 뻑이 날 수도 있는 거야
그니까 예전에 제가 DI 이제 좀 많이 안 좋아할 때
디펜던치 인젝션 좀 많이 얘기할 때
왜 컴파일에서 할 수 있는 걸 자꾸만 런타임에 하려고 하냐
어차피 실행하는 거 뭐야 임플레멘터리 하나밖에 없는데
그러고 그런 얘기도 많았잖아요
이거 뭐 디버깅을 왜 이렇게 어렵게 만드냐
그 문제가 이제 그런 프레티스에 엄청 나오는 거예요
그래서 뭐 예전부터 이제 훌륭한 엔지니어들은
솔직히 역사적으로 시퍼블 쪽에 많았잖아요
여태까지 이제 이 사람들이 뭐 다른 쪽을 하면서
웹 쪽을 많이 하고 있지만 이제는
근데 그 사람들이 자바를 선택하지 않거든요
그래서 자바는 말 그대로 제가 한참 전 얼마 전에
스크립트 언어를 되게 좀 안 좋게 얘기한 적이 있어요
그거에서 봤듯이 그거에서 말했듯이
예전에 자바의 존재는 그거였던 게 아닌가 싶어요
그냥 그렇게 코딩을 빡세게 잘할 수 없는 사람들이
쉽게 선택할 수 있는 언어
쉽게 뭔가를 뚱땅뚱땅 만들 수 있는 언어로 골랐는데
문제는 이걸 보면 볼수록 저는
아 이게 여기서 터지겠구나 저기에서 터지겠구나
이렇게 보이는 거예요
그래서 이거를 갖고 서비스하다가
중간에 터지는 애들이 많잖아요
이제 이해를 해요
왜냐면은 일단 도니까 냅두는 거야
그러다 터지면 막아야지 하는데
나중에는 정말 힘들어지는 거예요
그래서 그것도 보면서 아 이렇게 뭐라고 그럴까
언어가 디폴트 behavior가 굉장히 좋지 못하고
그리고 누군가가 확실한 가이드라인을 주지 않는 상황에서
언어는 이렇게 정말 뭐랄까 스크립터나 중구난방
요즘 되듯이 그렇게 진행이 돼버렸고
이제 그거를 이제 스택이라고 쓰고 있는 거구나
라는 생각을 점점 들게 돼요
그래서 이게 제가 두 가지가 최근에 느꼈던 좀 안 좋은 것들이에요
아 이게 역시 내가 이래서 이런 언어를 별로 쓰고 싶어하지 않는구나
그에 비해 이제 제가 또 C# 자랑을 해야 될 것 같은데
좀 마소 빱니다 개발 중에는
C#은 기본적으로 자기네들이 오래된 언어로
그리고 문제가 있는 거는 아예 없애버려요 다음 버전에서
그냥 예전 버전 써 새 버전 쓰지 마 이 상황이 되고
그리고 새로운 걸 만들면서 그 새로운 걸 만들 때
분명히 얘네는 MSDN이라는 그 마이크로소프트에 제공하는 그
도큐멘테이션 네트워크가 있잖아요
거기를 통해 자기네들이 엄청난 예제와 엄청난 설명과
엄청난 내부동작을 다 써요
그래서 얘네는 MSDN 페이지 가는 것만으로도 굉장히 많은 걸 알 수가 있고
그거를 따라 하는 게 일반적인 베스트 프랙틱스가 돼요
실제 지내도 아 마이크로소프트의 또 하나의 장점은
자기네들이 만드는 제품은 내부에서 반드시 다 써봐요
WPF도 그랬고요 WPF가 사실은 비주얼 스튜디오가 WPF로 만든 거예요
아무도 잘 모르죠
그리고 걔네가 뭐 OS를 만들든 뭐 워드를 만들든
뭐 소스 컨트롤 시스템을 만들든 내부에서 다 써요 일단은
내부에서 쓰면서 문제를 발견하고 고치고 베스트 프랙틱스를 만들고
그러면서 나오는 거예요 C#도 마찬가지예요
실제 자바를 만들고 있는 사람들 중에 얼마나 자바로 그렇게 큰 프로
뭐랄까 프로젝트를 돌린 다음에 낼까요
얼마나 오픈소스 그런 언어를 만드는 사람 중에 그걸로 정말 엄청난
대규모의 프로젝트를 만든 다음에 그거를 낼까요 별로 없거든요
그래서 전에 말했던지 전에 비디오에서 말했듯이 마소마는
내 똥을 내가 먹자 아니 내 똥을 내가 먹자 아니구나
내 개밥을 내가 먹자 내가 테스트 다 해보자는 게 되게 강한데고
그만큼 다른 회사보다 품질 관리가 잘 되기도 하고
문서와 특히 내가 비즈니스 쪽이 강한 애들이에요
비즈니스 디파트먼트가 되게 강해요 그래서 문서가 엄청나게 해주고
그래서 마소를 쓰기 시작을 하면은 제 생각은 그거예요
일단은 이런 말도 안 되는 너무 많은 이것도 있고 저것도 있고 저것도 있고 다 이게 맞대
근데 써보면 이거 틀리고 저거 틀리고 결과적으로 하나를 찾아야 돼요
그럼 그런 시간 낭비를 줄일 수가 있어요
똑같은 얘기로 툴적인 거에서도 마소는 원래는 이제 언어를 만드는 회사라기보다는
비주얼 스튜디오를 만드는 회사잖아요 개발자 입장에는
걔네는 비주얼 스튜디오를 만들면서 거기에 언어를 계속 올리는 스타일이거든요
그래서 얘네는
그 막 라이브 디버깅이라던가 이런 게 엄청난 거예요
그래서 정말 개발자로서 제가 요즘 들어서 뭐 AWS, 애저 뭐 둘 다 좋아하지만
애저를 더 좋아하는 이유도 마찬가지 이유이기도 해요 사실은
개발자가 자잘한 거 신경 쓸 일을 더 줄여줘요
자기네들의 방식을 만드는 걸 수도 있겠는데
그 방식이 개발자 입장에서는 굉장히 올바른 방식이 많아요
이거 왜 이러지 이런 건 별로 없어요 생각보다
이제 비슷한 회사는 또 애플이 있긴 하죠
애플마켓에서 어떤 한 가지 방식만을 고수하는 사람들 회사
맞아요 애플 방식이 일반 사람들 맞다고 생각하는데 저한테는 안 맞아요
전 개발자이기 때문에 애플의 방식이 갑갑해요
그래서 저는 애플 제품을 못 쓰는 이유이기는 한데
그래서 이제 마소는 저는 그래서 뭐라 그럴까
회사 일을 할 때는 주로 마소 제품을 되게 많이 쓰고
단 개인 생활을 할 때는 구글 제품을 더 많이 써요
구글은 개발자 마인드인데 음 뭐라 그럴까
쓰읍
개발자 마인드에서 자유를 저한테 말해줘요
개발자 마인드고 그러니까 개인 생활이니까
이것저것 내가 하고 싶은 거를 그냥 마구 하는 건 상관이 없다고 생각하고
저는 그게 편하니까 하는데 개발을 할 때만큼은
어느 정도 정형하고 올바른 프랙티스가 있어야 된다고 믿거든요
개인 생활은 내가 좀 잘못돼도 나중에 대충 고쳐도 되고 안 고쳐도 되는 거지만
개발은 팀 회사 자체의 코드 베이스나 아키텍처 자체가 망가지는 부분인데
그럼 나중에 사람이 늘어나고 뭐 코드 베이스가 커지면은 그거 어떻게 다 고치고 유지 보수하려고 그래
그래서 저는 그런 마인드에서 마소를 개발해서 많이 쓰고
그리고 개인은 구글을 많이 쓰는 거 같아요
근데 제가 지금 생각하기에는 이런 개발자 마인드
중구난방 개발자 마인드 아까 제가 말했던 구글 같은
그 마인드로 지금 회사 제품을 올리고 있는 게 이제 다른 많은 이상한 언어들이라고 생각을 해요
근데 그렇게 책임감 없게 코딩을 해도 될까라는 게 지금 제 걱정이에요 사실은
제가 자바로 된 코드 베이스 중에 정말 잘 된 코드 베이스는 아직 본 적이 그렇게 없어요
그러니까 무슨 프레임워크 하는 건 좀 다른 얘기고 그 사람들은 프레임워크
코어 프레임워크는 그래도 생각 없이 만드는 거 같은데
그 외에 add-on이라든가 플러그인 들어가는 거 그리고 그 모든 걸 써서 만드는 제품을 봤을 때
어 이게 정말 이렇게 해서 얘네가 고객을 한 10배만 늘려도 망가질 텐데 라는 게 너무 많이 보이는 거예요
그래서
어찌보면 긴 비디오인데 제가 며칠 동안 쌓였던 울분을 토한 거기도 하고
개발을 할 때만은 확실히 그런 뭐라 그럴까 베스트 프랙티스 중요한 거 같아요
그 베스트 프랙티를 내가 만들 수 없는 그런 입장이라면 남이 만들어주는 베스트 프랙티를 골라서 하는 건 좋은 거 같고
그 주변에 그거를 잡아줄 사람도 없다면은
그 주변에 그거를 잡아줄 사람도 없다면은
결국에는 웹 검색해가지고 그 중에 하나를 골라 써야 되는 건데
그게 지금 돼 있는 제품군은 제가 볼 때는 마소 제품군이 전부예요
그래서 어 저는 뭐 씨샵이든 씨브뿔이든 마소 제품군을 많이 썼고
여전히 그럴 거 같고 어 뭐 그럴 거 같네요
그래서 음 어떻게 끝내야 될지 모르겠어 어쨌든 뭐 구글 나빠요
자바 스프링 별로예요 좀 구려요
씨샵 만세이로 끝낼까
예 포프였습니다
