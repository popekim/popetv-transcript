으 으 으
예 안녕하세요 포프입니다 음 되게 오랜만에 비디오 만드는 것 같아요 노란색 있고 뭐 하는지 시작을 했지만 제가 제일 좋아하는 색이
노란색 이에요 그래서 저희 포큐 아카데미 빌드 본만 봐도 노란색 이런게 되게 많죠
잡다만 그만하고 사실 오늘 만드는 비디오는 저번에 한번 라이브를 하다가 아마 포구디 라이브 였던 것 같은데 그때 5시간
정도 라이브 한적이 있어요 5시간 6시간 그때 이제 나왔던 질문을 중에 하나였는데
질문은 아니었고 그냥 이렇게 지나가던 말이었던 것 같은데 잘못 알고 계시는 부분이 있는 것 같아요 대화 창을 보니까
그거를 제가 잡아 드리려고 이제 말을 했을 때 사람들이 괜찮다 비디오로 따로 만들어주세요 잘라서 보여주세요 라고 해서 라이브를
잘라 놨었어요 근데 그거를 그냥 올리기에는 좀 양심이 걸리더라고 너무 대충 말한 것 같아서
그래서 조금 정리를 해서
제대로 올려요 제목이 뭐라고 나갈지 모르겠지만 소프트웨어 라이센스 뭐 다양한 것들 어떻게 쓰냐 이걸 얘기하는 게 될 것 같아요
일단은 이 비디오를 만들기 전에 한 가지 정도 오해하고 있는 건 잡고 넘어가야 될 것 같아요 뭐냐면 라이센스가 있는 소프트웨어다
그러면 사람들이 이게 무조건 상용 라이센스 거나 뭐 돈을 내지 않으면 사용하지 못한다 라고 생각하시는 분들이 있는 것 같아요
근데 그게 아니에요
라이센스라는 것은
만약에 제가 프로그램을 만들었다면 제가 만든 프로그램과 이제 그걸 사용하는 사람 간의 관계를 정한 법률적인 이제 뭐 계약이라고 하죠 그 계약이에요
그 계약이 유상계약 돈 있는 계약일 수도 있고 무상계약일 수도 있어요 그래서 심지어는 공짜 계약일지라도 라이센스를 주는 경우들이 있죠
오히려 더 흔하고 왜냐 라이센스라는 게 저 사람이 내 제품을 돈 내고 사서 쓴다라는 것도 있지만 그러면은 그 제품을 사용을 할 수 있는 방법이 있겠죠
이 사람은 돈을 냈으면 제가 그 제품을 유지 보수나 서비스를 어느 정도까지 제공을 해야 되는지도 정의가 돼 있어야 하거든요
유상계약 같은 경우에는 이걸 사서 사용할 때 어디까지 서포트를 하고 이런 것들이 들어가는 거고
무상계약 즉 무상 라이센스 같은 경우에는 가져다 쓰세요
근데 나는 아무 책임 안 질 거예요
이 안에 무슨 보안상의 문제가 있어갖고 당신의 은행이 털려갖고 돈이 한 10조가 손해가 나도
나는 책임이 없다라는 것까지 포함하는 게 라이센스예요
그래서 라이센스를 사용하는 거고
그렇지 않다면은 공짜여 갖다 쓰세요 했는데
그냥 공짜로 가져다 쓰다가 너네 때문에 우리가 수십조 손해났어
물어내라고 손해배상이 들어올 수도 있는 거거든
물론 그걸 승소하기는 어렵겠지만
그런 것들이 있기 때문에 라이센스가 있는 거예요
일단 그거를 아셔야 되고요
책임이 안 진다라는 그것 때문이라도 오픈소스 프로그램은 라이센스를 대부분 가지고 있어요
여기서 이제...
종류별 라이센스가 되게 많아요
일단은 상용 라이센스는 그 회사마다 다 라이센스가 있는 거고
계약서 따로 쓰니까 그거는 여기서 다루지 않을 거고
오픈소스 라이센스를 생각을 해보면 대충 한 크게 네 가지 정도로 보시면은
내가 제품을 만들 때 그 오픈소스 라이센스를 가져다 쓴다면 무엇을 할 수 있고
그리고 내가 그걸 통해서 제품을 냈을 때 어떤 책임까지 지는지
그런 부분들을 설명을 할게요
오픈소스 생각하시면 다들 뭐 내가 작성한 것도 나 오픈소스도 풀어야지

이런 이상한 생각 하시는데 그건 아니에요
오픈소스 라이센스 4개 들어가기 전에 다섯 번째 카테고리가 하나 있어요
이걸 0번째 카테고리라고 할게요
이 카테고리가 뭐냐면 아무 명시도 없는 경우에
깃허브에 가서 소스 코드를 봤어 라이센스 명시가 없어요
그럼 뭘까
이 경우에는 기본적으로 라이센스 명시가 없으면
얘는 그냥 아무 라이센스도 없기 때문에 그 작품 자체는
작품 자체는 원 저자가 100% 권한을 가지고 있고요
어떻게 사용해야 할지도 알려져 있지 않은 거기 때문에
자기 마음대로 가져가서 쓰면
딴 사람이 마음대로 가져가서 쓰면 저작권법 침해가 돼요
그래서 그런 경우는 사용을 안 하는 게 맞아요
법적으로 문제가 될 수가 있어요
아 여기서 한 가지 말 더 해야겠다
제가 앞에 라이센스라는 건 책임 안 진다고 라이센스를 하는 거라고도 했어요
원 저작자가 저도 비디오를 만들 때
제가 대충 알고 있는 라이센스에 관한 정보들을 알려드리는 거지
제 말을 믿고 제가 말을 잘못할 수도 있으니까
그거 가져가셔서 사용했다가 손해가 발생하셔도 저는 책임지지 않아요
저도 책임지지 않겠다는 라이센스를 일단 비디오에 걸게요
그렇게 하고
그러면 그 네 가지 다른 라이센스 설명을 이제 하면은
첫 번째는 GPL이라고 알려져 있는 거예요
오픈소스 라이센스 중에 가장 처음에 나온 애 중이기도 하고
GPL 이거를 보는 순간 제품을 만드실 때
본인의 소스 코드를 다 공개할 게 아니다
아니라면은 사용하지 마세요
제품을 만든다는 개념이 뭐냐면
제가 어떤 제품을 만들어서 배포를 한다는 개념이에요
그 GPL 라이센스를 가져다가 내가 프로그램 만들어서
나 혼자 뭐 조용히 쓰고 있는 거
회사 내에서 뭐 몇 명짜리 회사에서 조용히 쓰고 있는 거
이런 거는 문제가 안 돼요
그 소스 코드가 들어간 제품
그 제품을 팔기 시작하거나 무상으로 배포할 때
공개적으로 어쨌든 간에 배포를 하기 시작할 땐요
GPL 라이센스가 걸려있는 소스 코드가 들어간 제품은

소스 코드를 가져다가 어떤 제품을 만드는 순간
그 라이센스 원래 가져다 썼다고 명시도 해야 되고
그와 동시에 제가 작성한 모든 코드를 같이 공개를 해야 돼요
그 제품에 있는 모든 코드를 그게 GPL이에요
그래서 이게 어찌 보면은 가장 처음에 오픈소스 그쪽에서
더 공유해야 된다는 거 약간 강요하고 싶을 때 사용했던 방법이에요
나는 이만큼 만들어 놨으니까 네가 추가로 만들면
네 것도 다 공개해서 다들 같이 공유할 수 있죠
이게 진정한 오픈소스 정신에 맞는 그런 쪽이라고 봤었죠 한동안은
왜냐하면 오픈소스 진영이 뭐 돈 받고 파는 프로그램들 되게 싫어하는 경향들을 가진 분들이 있었어요
그땐 좀 많았고 지금 되게 많이 줄어들었고
그래서 GPL이 그렇게 나왔는데 GPL도 유명한 프로그램 많아요
근데 문제는 어쩔 때는 그렇게 회사 입장에서 그럼 오픈소스를 가져와서
사용을 해서 제품을 냈는데 내 소스 코드 다 공개를 해야 된다면은
그걸 원치 않는 회사도 많을 수도 있어요
정말 여기에 직원들 수백 명 쳐넣어서 엄청난 인력이 들어왔기 때문에
그걸 공개하는 순간 경쟁사가 가져간다던가
그래서 그런 경우에 GPL을 사용할 수가 없었어요
그래서 그것보다는 조금 더 완화된 GPL이 나와요
그게 두 번째 말할 LGPL L이 lesser라는 뜻이거든요 더 완화된
LGPL과 GPL의 차이는요 사실은 이거예요 배포를 할 때 그 LGPL에서 온 소스코드에 있는
소스가 있을 거 아니에요 그거랑 내 소스코드랑 하나로 합쳐갖고
하나의 바이너리가 나올 때 즉 C나 C++ 같은 경우면은
이제 정적 라이브러리 만들어서 바인딩하는 거죠 컴파일하고 EXE 파일에 다 들어가 버릴 때
그때는 GPL과 똑같아요 내 코드 다 공개해야 돼요
근데 그게 아니라 LGPL로 받아온 바이너리가 있어요 DLL 파일 이런 식으로 있어요
그럼 그거랑 프로그램이 있죠 프로그램이 그럼 그 프로그램에서 동적 바인딩을 해서
프로그램 소스코드는 여기서 따로 돌고 여기서 필요한 라이브러리만 실행 시에 DLL로드해 갖고 불러올 때
그래서 배포를 했다는 걸 알려줘야 되고 LGPL 쓰고 있다 단 이게 하나의 제품으로 합쳐지지 않았기 때문에
그 경우에는 내 소스코드를 공개를 안 해도 돼요 물론 이제 여기서 제가 DLL로 말씀드렸지만
그 라이센스를 읽는 어떤 사람들 중에는 그게 아니라 이게 라이브러리에서 정적으로 합쳐도
실제 원래 있는 그 라이브러리의 소스코드를 바꾼 게 아니기 때문에
얘는 LGPL도 문제가 없는 게 아니냐라고 얘기를 하고도 있어요
약간 모호한 부분이 있는데 가장 확실하게 하는 건 DLL 따로 뽑아서 아예 링킹조차 안 하는 거죠
그런 식으로 동적 정적 링킹조차 근데 이제 그 부분은 약간 그레이 에어리아가 있는데
어쨌든 간에 LGPL이 나온 목적은 GPL처럼 모든 소스코드를 다 오픈소스로 만드는 게 아니라
이미 만들어진 굉장히 좋은 라이브러리가 있다면 많은 사람들이 사용하게 만들자
그리고 누군가가 이 라이브러리 자체를 개선시키면 그거를 내놔 그래서 다른 사람도 그 부분을 쓸 수 있게 하자
그래서 그 라이브러리 하나에서 추가하면서 생태계를 구축하는 약간은 좀 전 세상을 모두 다 자유롭게 한다기보다는
이 하나 잘 만들어 놓은 제품을 계속 공짜로 사용했으면 여기도 좀 공헌하세요
불편해서 이거 좀 고쳤죠 그럼 주세요라고 하는 개념에서 좀 더 나은 방법이었던 것 같아요
뭐 낫다기보다 이렇게 얘기할게요 기업 친화적인 방법
그래서 LGPL 쪽이 굉장히 또 많아요 그래서 그렇기 때문에 흔히 지금 많이 사용하셨던 그런 라이브러리들이 있을 거예요
그런 라이브러리들 DLL로 쓰고 계신 게 있다면 보통은 LGPL이 아닐까 생각을 해요
여기까지 좋아요 근데 그 다음에 그 다음에 재밌는 문제가 생기기 시작했어요
LGPL인데 얘는 배포를 할 때 배포를 할 때 이제 그 라이브러리를 고쳤으면 제 소스코드 고친 부분도 같이 공개를 해야 되는 거잖아요
그런데 그 웹서버 이런 게 나오면서부터 이 라이브러리를 고쳐요 고치는데 그 프로그램 다 웹서버에서 돌리니까
그거를 배포라고 보기가 어려운 거예요 바이너리를 배포하는 게 아니라 난 서버를 돌리고 있고 누군가가 API를 써서 API 통신을 하고
이 기능을 이용해서 결과를 가져가는 거지 소프트웨어 자체를 배포를 한다고 보기가 되게 어려웠어요 그 라이센스 안에서
그래서 세 번째 게 나와요 AGPL이라고 AGPL은 뭐냐?
LGPL하고 똑같은데 서버에서 그렇게 돌리면서 서비스하는 경우도 배포라고 봐서 그 경우에도 소스코드를 공개하라고 그래요
그래서 그런 서버에서 좀 악용되는 걸 막았고 그래서 거기까지가 이제 보통 전통적인 이제 오픈소스 라이센스였고요
최근 들어서는 이것보다 다른 라이센스 많이 볼 거예요 네 번째 건데 MIT, Apache, BSD 얘네 뭐냐면요 공짜야
가져갔어 쓰고 공언 안 해도 돼 그냥 맘대로 써 상용어로 써도 되고 다 써
단 네가 이거 썼다는 것만 알려줘 광고를 올려 그래서 구글폰 보면은 뭐 About폰인가 거기 가면은 오픈소스 라이센스 전부 다 있거든요 뭐 썼다고
그런 게 그래서 있는 거예요 네가 맘대로 다 고쳐 쓰고 그냥 네가 다 맘대로 다 해 근데 라이센스 사용했다는 것만 알려줘
이게 어찌 보면은 요즘 새로운 오픈소스의 트렌드예요
돈 많은 기업이 나쁘다라고 몰아가는 거는 되게 어려워요
그게 약간 좀 구시대방식이고 요즘 사람들은 오히려 누군가가 좋게 만들고 그냥 공개해 놓고 그럼 열심히 사용하다가 또 내가 좀 개선하고 내가 그냥 공헌하고 싶어
자유의지에 맡기는 거죠 어떤 의미에서 그럼 공헌하고 아니면 말고 왜 그렇게 되냐면은 일단은 뭐 기터보 등이 나오면서 그렇게 오픈소스 서로 공헌하기가 좀 더 쉬워진 것도 있고
그 공헌함으로 인해서 내가 이제 약간 이런 거 공헌했다는 이름값도 날리는 그런 것도 좀 많이 좋아졌고
또 다른 거 하나는 오픈소스를 알려드렸어요.
그래서 제가 이 제품을 아마 돌려보니까 굉장히 많은 오픈소스가 대기업이 가져다가 발전시키는 경우가 되게 많았어요 사실은
우리가 뭐 오픈소스하고 친화적이지 않다고 생각하는 그런 많은 대기업들이 사실은 역사적으로 굉장히 큰 오픈소스들의 공헌을 했거든요
그 사람들이 어쨌든 간에 이 제품 가져가 쓰게 하는 것도 목표는 목표인 것 같고
쓰다보면은 당연히 자기만의 기능을 만들고 그러는데 그럼 내가 만든 기능들이 있고 내 버전을 관리를 해요
그게 아니라 오픈소스에서 사용하는 기능들이 있고 내 버전을 관리를 해요.

오픈소스도 계속 버전을 업데이트하면서 이제 뭐 새로운 기능을 추가해요
이게 따로따로 있는 게 중간중간 합쳐가야 되잖아요 계속
그 비용이 솔직히 좀 생각보다 많이 들어요
그래서 그런 거 다 고려하면은 뭐 이리저리 따져서 차라리 내가 지금 조금 바꿔놓은 거 메인에 공헌해버리고
나중에 메인에서 또 업데이트하면 가져오는 게 좋다라는 판단도 쓰는 것도 같애요
어쨌든 간에 요즘은 그쪽으로 많이 갔다는 거죠
여전히 이 네 가지 라이선 다 존재해요.
여전히 이 네 가지 라이선 다 존재해요.
그래서 간단하게만 정리해드리면
gpl 뭐 그거 쓰시는 순간 내 소스코드 다 공개해야 된다 생각하시면 돼요
lgpl 바이너리 배포를 그냥 걔네 거 그대로 배포하는 건 상관없어
그 바이너리를 내가 고쳐서 배포하면은 같은 이제 뭐 exfile 있는 거 그걸 제가 다 공개해야 돼요
agpl 서버에서 lgpl 가져다 꼼수로 쓸 수 있었어요 그거 안 되는 거예요
그래서 요즘은 lgpl 하던가 다 agpl로 많이 갔고요
네번째 MIT 아파치 gpl
bsd 같은 거 다 공짜 가져써도 되고 뭐 해야 되고
그냥 라이선스만 이걸 사용했다
먼저 알려주고 그거만 하면 돼요 그거만
그래서 요로케 정리를 하면 뭐를 가져다 써도 문제가 없고 가져다 쓰면은 문제가 있는지
어떤 용도에서 문제가 있는지 대충 아실 거예요
앞에서 말했지만 제가 법적으로 이렇다 라는 말씀을 드리는건 아니고요
이거는 회사에 변호사가 있다면 당연히 그 사람하고 상의하고 결론을 내려야 될 문제고
대충 그래도 이제 라이선스 보면서 아 요거는 사용하는 게 좋다고 해서
하면 좋겠는데 아 요거는 괜찮은 거네 가져가서 물어보는 용도로는 가능하겠죠
그런 식으로 본인의 상식 뭐 그런거에서 이용을 하시도록 하고 아니면 더 궁금하신 분들은 더 읽어보시고 알아 찾아보시면 되는거고
결과적으로는 요즘 오픈소스 라이센스는 그렇게 크게 4가지가 있다 이 정도면은 오랜만에 돌아와서 꽤 유용한 정보를 하나 드렸다고
생각을 해요 뭐 고정도 정리하고 끊도록 할게요 포프였습니다
