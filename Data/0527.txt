♪~
예 안녕하세요 포프입니다
음.. 예전에 비디오를 만들었는지 모르겠는데
제가 되게 옛날에 썼던 블로그 글 중에
컴파일 경고 하나당 3대씩 쳐맞습니다
라고 제목을 달아서 쓴 글이 있어요
그걸 짧게 요약하면 뭐냐면은
컴파일을 할 때 오류가 나는 경우가 경고가 나는 경우가 있어요
오류라는 거는 아예 exe 파일이 안 나오기 때문에
실행조차 못하는 거라서 프로그램을 반드시 고쳐야 되는 거고
경고는 컴파일러가 생각할 때
어 너는 요런 거 좀 실수한 거 같은데
한번 확인해봐 라고 알려주는 요건이에요
그런데 사람들, 게으른 사람들은 결과적으로는
경고를 안 고치고 코드를 막 집어넣어요
회사 코드에
왜? 경고니까 문제 없잖아
이거 내가 봤는데 문제 아니야
그렇게 경고를 쌓아놓다 보면은
사람이 여러 명 작업하다 보면은
경고가 막 천 개가
3개까지 늘어나는 경우도 있어요
컴파일 경고가
그럼 그 순간부터는
아무도 새로운 경고가 나와도 보지를 않아요
그래서 경고
정말 컴파일러가 뭔가 문제라고 잡아줬는데
그게 실제 문제인 경우들이 꽤 있어요
그 경우를 확인을 하기 위해서는
쓸데없는 노이즈를 줄여야 한다는 거죠
자 그게 그 글이든 비디오든의 요약이고
똑같은 개념으로 웹 쪽 일을 하다보면요
9.11 보고
9.12 보고
이런 것들을 좀 더 하게 돼요
9.11이 뭐냐
한국에 119 있죠
긴급 뭐 출동 거기
그게 이제 북미 쪽에서는 9.11이에요
전화번호가
그래서 9.11이라고 하면은 긴급 상황이에요
회사에서
그래서 반드시 당장 고쳐야 할 것들
근데 뭔가 서비스에 문제가 있는 걸 우리가 판단을 했는데
그게 당장 고쳐야 될 건 아니지만
그래도 좀 고쳐야 할 것 중에 하나다
그런 경우를 보통 9.11보다 한 단계 낮춰서
9.12 이런 식으로 표현을 해요
포츠유 아카데미에서도 저희는 뭐 인력이 엄청나게 많은 회사가 아니에요
저 인력으로 많은 일을 하자라는
좀 나쁜 사람 같은데
그런 회사기 때문에
어쨌든 인력이 적기 때문에 그런 것들도 자동을 하려고 노력을 되게 많이 했어요
그래서 저희 내부적으로도 뭔가 서버에서 저희가 예측치 못한 상황들이 터졌다
그러면 그게 9.11로 보고를 되는 경우가 있고
아니면 그것보다는 조금 천천히 고쳐 상관없는 것들
그런 거는 9.11로 보고가 되는 거죠


9.11로 보고가 되는 것은 뭐 다른 것들과는 다른 것들 그리고 또 그 부분은 조금 천천히 고쳐 상관 없는 것들 그런 거는 9.12로 보고가 되는 건 아닌가?
되게 되어 있어요. 그 일이 생길 때마다
자동으로 저희는
저희 팀챗 채팅방에
메시지가 들어와요. 사건 하나
터질 때마다. 예쁘게 포맷해서
근데 그게 한동안 그렇게
많지가 않았었어요. 뭐 기껏해
와야 일주일에 한
두 개 정도 터지나? 그랬었는데
최근에 뭐 단내
코어 버전 올리면서 뭐 하면서
그 숫자가 굉장히 많아졌던 거예요.
DB가 조금 느려진 문제도 있었고
단내 코어 쪽에 DB 관련해서
뭐 하는 게 좀 많이 바뀌어서 저희가 하던 방식이
좀 느려졌어요. 그것도 있었고
아니면은 걔네가 에러 메시지를
바꿨는데 예전에
있던 에러 메시지를 누군가 그냥
이그노어하게 무시하게 코드를
작성했던 거예요. 사실은
그러면 안 되는 거였는데
그 메시지가 바뀌어서 새로운 메시지가
계속 9.12로
뜬 거죠. 근데 재밌는 게
저희가 최근에
개발자가 조금 늘어서 개발팀이
좀 더 정상적으로 돌고
좀 더 안정화의 노력을
기울여서
기울일 수가 있게 됐어요.
근데 사람들이 아직도 옛날 멘탈리티에 빠져있는 거야.
우린 지금 바쁘니까
안정적으로 뭔가 하기보다는 그냥 기능
만들고 서버가 고장나는 거
별로 신경을 안 쓰겠다. 근데 저희가
그 트랜지션을 최근에 했었거든요. 그래서
최근 한 몇 개월 동안 보시면은
POCO 아카데미 서버 자체의 안정성
빌드봇이 가끔 타임아웃 나는 거나
이런 것들이 많이 개선된 거를
뒤돌아보시면 느낄 거예요. 오랫동안 사용하신 분들은
그 순간에는 모르시고
그래서 그런 것들이 이제 생기게 된 건데
어쨌든 문제가 뭐였냐면은
912가 막 터지는데 아무도 신경을
안 쓰는 거예요. 그래서 그냥
하루에 막 912가 20개씩 터지고
막 이러는데 아 이거는 그냥 그 메시지 때문에
문제 없는 거니까 신경 안 써도 되고 넘어가는데
그 중간 막 20개 터지는 중간에
다른 중요한 게 하나씩 다 들어오는 거야.
근데 그냥 대충 안 보는
습관이 들여있으니까 메시지 막 올라갈 때
그걸 놓치기 시작을 하는 거예요.
그래서 아 이건
컴파일 경고하고 똑같은 문제가
생기고 있구나. 컴파일 경고 많아질 때랑
그래서 뭐
악독 사장이죠. 악독 사장이
프로세스를 만들어버렸어요.
모든 912 날 때마다
그 912가 나면은
이렇게 할게요. 똑같은 메시지가
10번 나는 경우도 있고 다른 메시지가 10번
나는 경우도 있어요. 다른 메시지면은
10개의 유니크한 912
하나의 메시지면은
하나의 유니크한 912인데
그게 10번 터진 거. 그죠?
그러면 이 몇 번 터졌나
이거를 매주마다
보고를 하게 만들었어요. 사람이
그러면은 자기도 셀 수밖에 없고
어떤 버그가 생겼는지 알겠죠.
그리고 거기서 끝나면은
분명히 보고만 하고 넘어갈 거야. 숫자 세는 게 얼마나
크다고. 근데 우리가
원했던 건 뭐냐면은 제가 원했던 거죠.
제가 원했던 건 뭐냐면은 912
수를 최대한 낮춰서
정말 중요한 게 뜰 때마다
그거를 알아야 된다. 곧바로.
그러면은 이걸 고칠 수 있는 방법이 뭐냐?
개발자는
마인드가 퀄리티가
아니라 그냥 재밌는 거
하겠다라는 마인드 아니면은
새로운 거 하겠다라는 마인드 그냥 기능만
만들겠다는 마인드가 잡혀있으면요.
언제나 그냥 생각을 해요. 아 이거
버그가 터졌어. 내가 이거를
조사를 안 하고 아무도 안 보고 있고
그러면 이제 누군가 우리 사장이라던가
이 사람이 봐서 이게 문제다를 알려주면은
그때 디버깅해서 고치면은
내 시간이 아껴지고
나는 재밌는 거 하는 거 같아. 그냥 재밌는 거만
할 수 있어. 이 생각이 들면 당연히
문제가 터질 때마다 안 보겠죠.
이게 아무리 네 일이야 해도
뒤에서 누군가 봐준다는 생각을 하면은
안 할 수가 있어요. 근데 그게 아니라
내가 이거를 일찍 안
고치면은 이게 결과적으로
내 시간을 더 많이 까먹어서
내가 뭔가 재밌는 거 할 시간이
줄어든다라는 생각이 들기 시작하면은
가성비로 따져서
훌륭한 개발자긴 해요. 가성비 따지니까
결과적으로는 아 이 버그를 먼저
고쳐버리는 게 내가
시간이 더 남겠구나라는 장기적인 계획이
세워지겠죠. 어쩌면
조삼모사일 수도 있어요. 그런
식으로 프로세스 잡자라고 결정을 하고 한 게
뭐냐면 9.12가
터져요. 그러면 매주
이번 주에 터졌던 9.12 있죠. 새로 나온
것들 유니크한 것들
그거에 대해서 하나하나 따로따로
보고서를 작성하게 만들었어요.
뭐 어떤 오류가 터졌고
왜 터졌고 이거를 내가
이런 이런 이런 조사를 해봤는데
요런 것 때문에 생기더라.
본인이 고치는 방법은 몰라도 돼요.
그거는 뭐 저하고 이제 같이
중요한 결정 내리는 사람들이
몇 명 있거든요. 그 사람들이 내리면 되는 거예요.
해결법은 뭐 개발자
가져와도 좋고 아니어도
우리가 줄 테니까 최소한 조사까지는
다 해와라. 그래서 이제 매주
조사를 받기 시작을 했어요.
그러니까 생각보다 놓치고
있던 9.12가 많은 거야.
생각보다. 그래서 한 2,3주
뭐 3,4주 되는 동안에 이게
숫자가 많이 올라가고
그리고 안 고치고 있는 거 있죠.
그래서 막 똑같은 게 하루에 20번씩
나는 거. 그런 게 숫자가 100번씩
찍히면서 그래프로 찍히기 시작하는 거예요.
그러니까 그 순간이 되니까 이제서야
아 이거를 내가 지금 고쳐야지만
내 몸이
편해지구나를 느껴서
그거를 우선순위를 점점 잡기를 시작을 하더라고요.
그래서 이게
사람이
효율성에 딱 꽂혀버리면요.
굉장히 위험해지는 경우들이 있어요.
그게 효율 만능주의 이 얘기가 아니라
효율성의 범위가
내 효율성이냐 팀의 효율성이냐
단기 효율성이냐
장기 효율성이냐에 따라
결과가 완벽히 바뀌어요.
제가 앞에서 말했던 개발자는
단기 효율성 그리고
나만의 효율성을 따졌을 때 이게
빨랐다는 거죠. 그러나
이거를 만약에 통계만이라도 만들라
그랬어? 그럼 내가 매주마다 그거 세워
가면서 통계를 만들어야 돼. 야 그러면
내가 고치는데 드는 시간이
이럴 때 2시간이야? 통계내는데
걸리는 시간 10분이야. 그러면
이걸 12번을 반복을 하면 4시간이
그때부터 낭비가 되는 거잖아요.
그러면 통계를 만드는
거를 줄이려고 버그를 고칠 수가 있죠.
근데 그렇게 작은
거를 장기적으로 보는 사람은 또
많지는 않아요. 그럼 그것보다
훨씬 더 좋은 방법은 단기적으로
봤을 때 한 2~3주만 봤을 때
고치는 게 더 시간이 빨라.
그럼 고치게 된다는 거죠.
그리고 그로 인해서 원래는
누군가 그 문제 보고 보고하고
알려주고 이랬던 시간들
남의 시간까지 줄어들게 되는 거죠.
그래서 이게
효율성이라는 것 자체는 문제가 없어요.
효율성의 범위가 보통
문제고 그 범위가
약간은 뭐
팀플레이어가 아닌 경우들
그런 경우도 있을 수 밖에 없어요. 사람이 내일이 제일 중요하니까
그런 경우에는 시스템을
약간 바꿔서 그런식으로
바꿔가면은 일단은 그 사람이
어떤 일을 더 먼저 해야 되는지 약간 압박을
받게 돼서 하게 되고
두번째는 통계가 나와요.
통계가 나오기 때문에
우리가 맨날 무슨 버그 볼 때마다
버그가 좀 많아지는 것 같은데 이런 생각만
하고 있지 실제
수치적으로 이렇다 저렇다 말하기 되게 힘들거든요.
패턴 잘 보고 촉 좋은 사람은
좀 일찍 알고 아닌 사람들은 못 봐요.
근데 그게 그냥 꾸준히
통계로 나오면 한 번
반짝 피크 찌는 경우는 있겠지만
지난 6개월과 그 전 6개월을
비교했는데 오?
912가 2배가 늘었어. 그럼 뭔가
더 문제가 생겼다는 거고 912가 줄었어.
그럼 뭔가 더 많이 고쳤다는 거죠.
그래서 그런 장기적인 통계가 도움이 될 때도 있어요.
특히 어떤 순간에 문제를
발견하기 위해서.
제가 한 건 우려의 말씀을 하나 드리는데 참고로
시스템을 이렇게 바꿔서
개발 팀장이
그런 일을 더 하게 만든 게 왜 직접 가서
말을 안 했냐 이게 더 중요하다고 빨리
고치라고 말하면 되지 않냐 라고 하실 수도 있지만
당연히 그거 다 해본
상황이고 개발 팀장이
하는 일은 되게 많거든요.
그 상황에서 본인이 이런 거와 저런 거
를 봤을 때 뭐가 더 중요한지는
결과적으로는 팀장의
권한인데 스케줄링
짜는 이런 부분은 그
권한에서 잘못된 결정을
낼 수 있다는 거죠. 장기적이나
단기적으로 보게 되면. 그럼 그거는 어쩔 수
없이 이 사람이 볼 수 있게끔
시스템 자체를 바꿀 수 밖에 없는 거고
그 사람이 고통받는 거 있지만
그로 인해서 얻는 이득이 더
크기 때문에 그리고 그로 인해 남는
자료라던가 문서도 엄청 많기 때문에
시작을 한 거라고
보시면 돼요. 야. 악도
사장 안 되기 위해서 열심히
자기 망을 해봤습니다. 이런 거
보시면서
그런 교훈을 얻어가셨으면 좋겠어요.
예전에 컴파일 경고 얘기도 했고
지금 912 대응 얘기도 했어요.
이것처럼 노이즈가 많아지면은
정말 봐야 될 것들 사람들이 못
봐요. 개발이든 뭐든 마찬가지
텐데 그런 거를
줄이기 위해서 정리정돈
잘하는 습관, 변수 이름 잘 짓는
습관, 이런 경고 같은 거
미리미리 고치는 습관
이게 뒤에 가서는 큰
일을 막을 수가 있어요. 그 순간
그 순간에는 이거 해봐야 시간만
들고 이거 왜 하지? 별로 의미도
없을 것 같은데 나중에 문제 생기면
고치면 되지? 라고 생각할 수 있는데
모든 거에는 밸런스가 있는 거죠.
문제 생기면 고치면 되지를 끝까지
모르고 가면 테스트 하나도 안 하고 코드 짜고 작동하게
찍어 올리면 되는 거고 그게 아니라
문제를 모으다 잡겠다고
되게 어려운 일이죠. 하겠다면은
제품 나가야 되는데 인건비
낭비하면서 딴 회사보다 인건비 한 10배
쓰면서 테스트만 하고 있는 거고
거기서의 밸런스는 있어요. 그 밸런스는
밸런스를 잡으라고 말씀드리는 건데
개발자가 쉽게 할 수 있는 밸런스는
경고 고치고 이런 거다
라는 말씀을 드리고 싶었던 거예요
그래야 컴파일러가 자동으로 해주는 것들
자동 보고 시스템이 자동으로
해주는 것들 그런 거에 의미가
생긴다. 그런 보고 시스템
컴파일 경고가 있다는 거는
그거에 대한 효용성이 굉장히 크다는 거거든요
그 효용성
남들이 해준 효용성
그거를 없애지 말자는 얘기에요
이미 누군가 공짜로 해준 거 난 요만큼만 노력하면은
계속 이득을 볼 수 있다는 얘기지
그 얘기를 하고 있는 거예요
그래서 개발자로서 내 시간 아끼면서도
성능을 올리는 방법은
이런 거. 이미 존재하는 것들
그 규칙 하에서
잘 쓰는 거다
이걸 지금 내가 요만큼 편하자고
악용하기 시작하면은
어느 순간 손대는 게
무서울 정도가 되고
결국 내가 안 고치고 남이 고칠 때까지 기다리는
사람들이 있는데 그거는 결과적으로 다 보여요
보여서 고가에 반영돼요
조심하시기 바라고
그렇게 말씀을 드릴게요
아이고 최근에 버그 얘기 많이 했더니 참 재밌네요
예 포프였습니다
