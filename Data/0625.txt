안녕하세요.

오늘 제목을 보고 '와! 어그로다.' 생각할 수 있는데, 사실은 제가 볼 때는 어그로가 아니고 오히려 어그로보다 훨씬 낮춘 수위인 것 같아요. 이게 액면 그대로 보면 이 제목보다 훨씬 더 심각한 문제인 것 같아요.

어떤 일이냐면 제가 어떤 웹 회사에 팀 리드로 갔던 때예요. 간지 얼마 안 됐을 때예요. 근데 다른 팀에 있는 어떤 주니어 개발자하고 얘기를 하다가 그 개발자가 먼저 이런 얘기를 했어요. 자기가 '이 회사에 있으면서 라이브 중인 DB 테이블을 드랍 해서 문제가 생겨서 자기한테 일이 잘 안 온다.' 나한테 그 얘기를 왜 했는지 모르겠어요. 왜냐하면 내 팀이 아니고 내가 걔한테 어떤 영향을 미칠 수도 없어요. 근데 그 당시에 제가 머리도 핑크색이었고, 그 당시에 그냥 좀 어려 보이고 생각 없어 보였나 봐요. 제가 다른 팀 리드인 건 알고 있거든요? 그래서 제가 친근하게 얘기했어요. 그냥 '괜찮아? 큰일 없었어?' 이런 식으로 약간 걱정하는 식으로 얘기해 줬어요. 워낙 어리기도 하고 주니어이기도 하고. 근데 그때 그 친구의 반응이 약간 좀 이상했어요. '자기한테 큰 문제가 아니다'라는 식으로 얘기를 하고, 그리고 회사 프로세스 탓을 하고 그냥 약간 정신 승리하고 넘어가더라고요. 이게 정말 나하고 친한 친구고 그랬다면 중국의 유명한 그 '하늘을 나는 남자 신' 이렇게 부르기도 하면서 이렇게 하지. 참고로 이 중국의 유명한 하늘을 나는 남자 신은 한자로 표현하면 날 飛, 그리고 남자 雄, 그리고 神. '야이 x' 하면서 뭐라고 '정신 차려!' 이렇게 얘기했겠지만, 내 팀도 아니고 내가 신경 쓸 애도 아니고 내가 뭐 어떻게 할 수 있는 애가 아니잖아요? 그래서 그냥 좋은 마음으로 그냥 '너는 참 영혼이 맑은 애구나' 막 이런 식으로 그냥 넘어갔는데, 그리고 그게 사실이었다는 걸 나중에 깨달았어요.

그래서 나중에 뒤늦게 보니까 이 친구가 거의 좌천되어 있는 느낌이었어요. 회사는 개발자가 꽤 있었거든요? 한 50명 넘게 있었고, 개발자들이 다 프로드라이브 권한이 있었고, 심지어는 DB를 드랍할 권한까지 있었던 거예요. 근데 회사가 운영되어 오는 몇 년 동안 아무도 DB를 드랍한 적이 없는 거예요. 근데 생각해 보면 지금 생각하면 '그 권한을 개발자한테 줄 수 있는 회사가 문제야'라고 얘기는 하지만 오히려 회사의 개발자들이 다 자기 책임을 제대로 질주하는 사람들이면 라이브 권한 인격심 편해요. 저도 팀장이 있을 때 라이브 권한 안 주려고 하는 걸 강제로 받아갖고 그 이후로 일이 편해졌고, 그리고 라이브 권한을 그 이후로 언제나 갖고 있었지만 제가 Prod DB에 문제를 일으킨 적은 없어요. 그리고 아마 저처럼 라이브 권한 있는 많은 리드 개발자들은, 그리고 한 번도 문제를 저질러 본 적이 없는 사람들은 '그게 왜 문제가 생길 수 있지?' 이런 생각을 많이 할 거예요. 일반적으로 쿼리 작성할 때 쓰는 BeginTransaction Rollback 해놓고 그 안에 뭔가 작성하는 거라던가, Update, Delete 할 때는 한 번 더 확인을 한다던가 이런 여러 가지 것들이 있거든요? 그리고 이런 거 돌리기 전에는 라이브 DB인지, 테스트 DB인지 한 번씩 확인하는 습관이 있다던가, 약간 어그로를 끌면 CC++에서 메모리 누수를 절대 만들지 않는 프로그래머는 라이브 DB를 드랍할 일도 없어요. 그런 식으로 일단 자기 관리가 되고 자기가 모든 일을 하는 게 다 중요한 게 아니라 '얘는 중요해', '얘는 확인해야 해'라는 마음가짐을 가진 사람. 그리고 또 하나는 내가 피곤해요. 실수할 것 같은데 '오늘은 이거 하지 않을래'라고 하는 사람들은 이 문제를 일으키지 않아요.

하지만 생각보다 그런 걸 확인을 안 하는 사람들이 많죠. 그 사람들하고 많이 일을 안 해봤기 때문에 사람이 자기하고 다를 수 있다는 걸 생각을 못 하는 거죠. 그렇기 때문에 그런 사람들이 혹시라도 회사에 있을까봐 이제 기본적으로 권한을 다 막고 그게 아닌 거라는 걸 증명을 여러 번 한 사람들한테 라이브 권한을 주게 되는 그런 시스템들이 들어오는 거지만, 그 권한을 받기 위해 쓸데없이 겪은 고통들, 그 고통 때문에 나온 비효율들은 또 어떻게 하냐는 거죠. 그래서 원래 일을 잘하고 자기 책임을 질 수 있는 사람들은 프로세스가 적을수록 효율이 오르고, 그러지 않은 사람들은 프로세스가 많을수록 사고를 안쳐요.

그래서 어쨌든 간에 그 친구가 그 DB 드랍한 이후에 모든 개발자의 라이브 권한은 뺏겼어요. 심지어 리드급 아키텍트부터 다 뺏겼어요. 그래서 그 라이브 DB 권한을 가져간 개발자가 딱 두 명 있는데 그중에 한 명이 저예요. 근데 그 이야기를 듣고 '아, 이분이 참 맑은 영혼이구나' 생각을 하고 다른 사람한테 얘기를 듣고 나서 이 사람이 과연 어떻게 될 건지가 그때부터 궁금해졌어요. 좌천시켜 놨잖아요? 그러면 이제 그 사람한테 사고를 칠 수 없는 일을 준다는 건데, 어쨌든 간에 DB는 막혔으니까 사고는 못 쳐요. 근데 일을 주면서도 사람들이 이 사람에 대한 신뢰가 많이 줄어드는 건 있었어요. 그게 단순히 '실수했다'는 문제도 있겠지만 그걸 떠나서 아마 그 자세 자체가 문제가 되지 않았나, 자기가 이 실수를 했을 때 '그래, 이건 내가 앞으로 조심해야겠구나. 큰 삽질을 했구나.', '내가 중국에 있는 신을 불러왔구나' 뭐 이런 생각을 해야 하는데, 그것보다는 '자기는 잘못이 없었다'라고 믿고 있는 거예요. 그리고 그게 진행이 되면서 회사에서 입지가 안 좋아지긴 하더라고요.

근데 어느 순간 반전이 있죠. 이 친구가 갑자기 회사를 때려치운대요. 때려치운 이유가 굉장히 좋은 회사에 들어가게 된 거예요. 거기는 당연히 개발자한테 DB 관리 권한 안 줘요. 왜냐하면 개발자만 천 명이 넘는 회사거든요. 그만큼 이상한 사람도 많기 때문에. 근데 주니어 때였고, 일단 학교를 졸업한 지 1년 정도 지났을 때였고, 충분히 면접을 잘 보면 이직할 수 있는 거죠. 그러면서 이직할 때 좋게 가면 돼요. 근데 '이런 후진 회사를 떠나서 좋은 회사 간다'는 식으로 친한 애들한테 얘기하고 갔어요. 그 얘기를 들은 사람들은 이제 그냥 '그래. 뭐...' 이러고 있었던 거죠. 저는 '영혼이 맑은 아이니까 맑은 곳에 가서 행복하게 살겠지' 이러고 있었죠. 이게 시간이 한참 지나서 저도 알았어요. 그냥 '가서 잘 일하고 있겠지?'라고 했는데 그 회사에서 왜 잘렸는지는 모르겠지만, 그 회사에서 또 짧게 일하고 그 이후로 몇 년 동안 직장이 없더라고요.

그래서 이걸 보고 느꼈던 게 많은 내용이 떠오르죠. 예전에 만약에 저희가 어떤 사람한테 얘기하면 '야! 누가 라이브하는데 이런 문제 생겼대.' 그러면 '야 그 라이브 권한 주는 회사가 이상한 게 아니야?'라고 얘기를 하는 사람이 있는데, 저는 그게 이상하다고 생각하지 않거든요? 그걸 기본적으로 Prod에 있는 DB를 드랍 시키거나, 지우거나, 잘못되게 바꾸는 개발자가 기본적으로 저는 잘못이라고 생각해요. '그 개발자를 믿은 회사도 잘못 아니냐?' 그러면 '남을 믿은 거에 대한 잘못이 존재해야 하나?'라는 건 약간 애매해요. 그 회사에 안정성을 유지한다는 관점에서는 '개발자들은 다 멍청하다고 보고, 일단 맞고 보자'라고 하는 건 일단 회사 입장에서 고객에 대한 충성으로서는 이해가 되는데 그게 아닌 개발자 환경에서는 저는 동의하진 않거든요? 결과적으로는 그 사람과 얘기했던 그때의 경험을 보면 그냥 우리 팀에는 둘 일 없는 애, '그냥 너 하고 싶은 거 해. 거기서 잘할 거 있겠지.'라고 했지만, 결과적으로는 그런 책임감 부분? 실수를 했다는 게 아니라 그 이후에 배우지 않겠다는 마음가짐, 그리고 누군가를 탓하고 약간 정신 승리하는 그런 것들 때문에 이미 실력에 한계가 있던, 아니면 실력은 조금 있을 수 있어도 그것 때문에 발전을 못하던, 그런 것 때문에 좀 잘 나가는 거 같다가 갑자기 이렇게 되는 거 보고 나서 좀 '안쓰럽다' 생각은 했어요. 왜냐면 정신이 맑으신 분이니까.

요런 것들 보면 그냥 '배우는 자세로 열심히 재떨이 맞아가면서 일하자.' 이런 자세도 중요하지만, 저는 많은 사람들이 가졌으면 좋겠다는 자세가 그런 거예요. '내가 지금 뭔가 불편하더라도 이건 중요한 거니까 확인해야 한다.', '저건 안 해도 된다.' 이런 판단력이 서는 게 되게 중요한 거 같아요. 얼마 전에 만들었던 민감한 정보들, AI 회사에 넘어가는 것들, 결과적으로는 사람이 민감한 정보가 넘어가는 걸 알아도 내가 편하면 그냥 줘 버려요. 이것도 사실은 그런 거예요. 내가 Prod 정보가 위험할 수 있는 거 아는데, 그거 확인하는 게 귀찮은 거예요. 내 잘못된 오감과 기억력을 믿고 있는 거죠. 인간의 오감과 기억력은 굉장히 불완전하거든요? 그걸 잘 아는 사람들은 알기 때문에 언제나 그걸 다시 한번 확인하는 거예요. 그걸 두 번, 세 번 확인했을 때 그걸 두 번, 세 번 틀리게 볼 가능성이 굉장히 적기 때문이에요. 그리고 이건 아마 나중에 할 이야기일 수도 있는데, 제가 심지어 개발자 중에 누르면 안 되는 링크를 아무 생각 없이 제 눈앞에서 누르는 애들도 봤어요. 그런 것들도 결과적으로 마찬가지라고 생각하거든요? 그냥 아무 생각 없이 하는 거. '왜 그랬어?', '그냥 아무 생각 없이 눌렀어.' 이런 것들. 일반 사람들은 그럴 수 있어요. 하지만 개발자는 그러지 말아야 하는 것들이 있는 거거든요? 그런 것들을 보면서 조금 뭐가 중요하고 뭐가 아닌지, 그리고 중요한 거에만 집중력을 10배로 넣고, 그러지 않은 것들은 집중력을 0.1배로 넣고 이 판단력이 좀 잘 서야 '일머리 있다'는 얘기를 듣지 않을까 생각해요.

제목이 어그로라고 생각했다면 좋아요, 구독 아니고 댓글로 좀 남겨 줘 보세요. 이 사고를 쳤던 개발자, 그리고 그 허술한 개발 환경, 과연 무엇이 더 큰 문제고 무엇이 더 큰 문제인지 그게 중요한 것 같아요. 저는 그게    되게 궁금해요. 어쨌든 영혼이 맑은 사람이 딴 길에서 잘 살고 있기를 바라며.

포프였습니다.